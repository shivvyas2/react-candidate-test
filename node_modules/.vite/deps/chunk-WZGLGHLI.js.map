{
  "version": 3,
  "sources": ["../../@aws-amplify/core/src/errors/AmplifyError.ts", "../../@aws-amplify/core/src/types/errors.ts", "../../@aws-amplify/core/src/errors/createAssertionFunction.ts", "../../@aws-amplify/core/src/errors/errorHelpers.ts", "../../@aws-amplify/core/src/utils/globalHelpers/index.ts", "../../@aws-amplify/core/src/utils/convert/base64/base64Decoder.ts", "../../@aws-amplify/core/src/singleton/Auth/utils/errorHelpers.ts", "../../@aws-amplify/core/src/singleton/Auth/utils/index.ts", "../../@aws-amplify/core/src/constants.ts", "../../@aws-amplify/core/src/Logger/types.ts", "../../@aws-amplify/core/src/Logger/ConsoleLogger.ts", "../../@aws-amplify/core/src/Hub/index.ts", "../../@aws-amplify/core/src/utils/getClientInfo/getClientInfo.ts", "../../@aws-amplify/core/src/utils/retry/retry.ts", "../../@aws-amplify/core/src/utils/deepFreeze.ts", "../../@aws-amplify/core/src/parseAWSExports.ts", "../../@aws-amplify/core/src/singleton/constants.ts", "../../uuid/dist/esm-browser/rng.js", "../../uuid/dist/esm-browser/regex.js", "../../uuid/dist/esm-browser/validate.js", "../../uuid/dist/esm-browser/stringify.js", "../../uuid/dist/esm-browser/parse.js", "../../uuid/dist/esm-browser/v35.js", "../../uuid/dist/esm-browser/md5.js", "../../uuid/dist/esm-browser/v3.js", "../../uuid/dist/esm-browser/native.js", "../../uuid/dist/esm-browser/sha1.js", "../../uuid/dist/esm-browser/v5.js", "../../@aws-amplify/core/src/parseAmplifyOutputs.ts", "../../@aws-amplify/core/src/utils/parseAmplifyConfig.ts", "../../@aws-amplify/core/src/singleton/Auth/index.ts", "../../@aws-crypto/sha256-js/src/constants.ts", "../../@aws-crypto/sha256-js/src/RawSha256.ts", "../../@smithy/util-utf8/dist-es/fromUtf8.browser.js", "../../@aws-crypto/util/src/convertToBuffer.ts", "../../@aws-crypto/util/src/isEmptyData.ts", "../../@aws-crypto/sha256-js/src/jsSha256.ts", "../../@smithy/util-hex-encoding/dist-es/index.js", "../../@aws-amplify/core/src/Platform/types.ts", "../../@aws-amplify/core/src/Platform/version.ts", "../../@aws-amplify/core/src/Platform/detection/helpers.ts", "../../@aws-amplify/core/src/Platform/detection/React.ts", "../../@aws-amplify/core/src/Platform/detection/Vue.ts", "../../@aws-amplify/core/src/Platform/detection/Svelte.ts", "../../@aws-amplify/core/src/Platform/detection/Next.ts", "../../@aws-amplify/core/src/Platform/detection/Nuxt.ts", "../../@aws-amplify/core/src/Platform/detection/Angular.ts", "../../@aws-amplify/core/src/Platform/detection/ReactNative.ts", "../../@aws-amplify/core/src/Platform/detection/Expo.ts", "../../@aws-amplify/core/src/Platform/detection/Web.ts", "../../@aws-amplify/core/src/Platform/detection/index.ts", "../../@aws-amplify/core/src/Platform/detectFramework.ts", "../../@aws-amplify/core/src/Platform/customUserAgent.ts", "../../@aws-amplify/core/src/Platform/index.ts", "../../@aws-amplify/core/src/BackgroundProcessManager/types.ts", "../../rxjs/src/internal/util/isFunction.ts", "../../rxjs/src/internal/util/createErrorClass.ts", "../../rxjs/src/internal/util/UnsubscriptionError.ts", "../../rxjs/src/internal/util/arrRemove.ts", "../../rxjs/src/internal/Subscription.ts", "../../rxjs/src/internal/config.ts", "../../rxjs/src/internal/scheduler/timeoutProvider.ts", "../../rxjs/src/internal/util/reportUnhandledError.ts", "../../rxjs/src/internal/util/noop.ts", "../../rxjs/src/internal/NotificationFactories.ts", "../../rxjs/src/internal/util/errorContext.ts", "../../rxjs/src/internal/Subscriber.ts", "../../rxjs/src/internal/symbol/observable.ts", "../../rxjs/src/internal/util/identity.ts", "../../rxjs/src/internal/util/pipe.ts", "../../rxjs/src/internal/Observable.ts", "../../rxjs/src/internal/util/lift.ts", "../../rxjs/src/internal/operators/OperatorSubscriber.ts", "../../rxjs/src/internal/operators/refCount.ts", "../../rxjs/src/internal/observable/ConnectableObservable.ts", "../../rxjs/src/internal/scheduler/performanceTimestampProvider.ts", "../../rxjs/src/internal/scheduler/animationFrameProvider.ts", "../../rxjs/src/internal/observable/dom/animationFrames.ts", "../../rxjs/src/internal/util/ObjectUnsubscribedError.ts", "../../rxjs/src/internal/Subject.ts", "../../rxjs/src/internal/BehaviorSubject.ts", "../../rxjs/src/internal/scheduler/dateTimestampProvider.ts", "../../rxjs/src/internal/ReplaySubject.ts", "../../rxjs/src/internal/AsyncSubject.ts", "../../rxjs/src/internal/scheduler/Action.ts", "../../rxjs/src/internal/scheduler/intervalProvider.ts", "../../rxjs/src/internal/scheduler/AsyncAction.ts", "../../rxjs/src/internal/util/Immediate.ts", "../../rxjs/src/internal/scheduler/immediateProvider.ts", "../../rxjs/src/internal/scheduler/AsapAction.ts", "../../rxjs/src/internal/Scheduler.ts", "../../rxjs/src/internal/scheduler/AsyncScheduler.ts", "../../rxjs/src/internal/scheduler/AsapScheduler.ts", "../../rxjs/src/internal/scheduler/asap.ts", "../../rxjs/src/internal/scheduler/async.ts", "../../rxjs/src/internal/scheduler/QueueAction.ts", "../../rxjs/src/internal/scheduler/QueueScheduler.ts", "../../rxjs/src/internal/scheduler/queue.ts", "../../rxjs/src/internal/scheduler/AnimationFrameAction.ts", "../../rxjs/src/internal/scheduler/AnimationFrameScheduler.ts", "../../rxjs/src/internal/scheduler/animationFrame.ts", "../../rxjs/src/internal/scheduler/VirtualTimeScheduler.ts", "../../rxjs/src/internal/observable/empty.ts", "../../rxjs/src/internal/util/isScheduler.ts", "../../rxjs/src/internal/util/args.ts", "../../rxjs/src/internal/util/isArrayLike.ts", "../../rxjs/src/internal/util/isPromise.ts", "../../rxjs/src/internal/util/isInteropObservable.ts", "../../rxjs/src/internal/util/isAsyncIterable.ts", "../../rxjs/src/internal/util/throwUnobservableError.ts", "../../rxjs/src/internal/symbol/iterator.ts", "../../rxjs/src/internal/util/isIterable.ts", "../../rxjs/src/internal/util/isReadableStreamLike.ts", "../../rxjs/src/internal/observable/innerFrom.ts", "../../rxjs/src/internal/util/executeSchedule.ts", "../../rxjs/src/internal/operators/observeOn.ts", "../../rxjs/src/internal/operators/subscribeOn.ts", "../../rxjs/src/internal/scheduled/scheduleObservable.ts", "../../rxjs/src/internal/scheduled/schedulePromise.ts", "../../rxjs/src/internal/scheduled/scheduleArray.ts", "../../rxjs/src/internal/scheduled/scheduleIterable.ts", "../../rxjs/src/internal/scheduled/scheduleAsyncIterable.ts", "../../rxjs/src/internal/scheduled/scheduleReadableStreamLike.ts", "../../rxjs/src/internal/scheduled/scheduled.ts", "../../rxjs/src/internal/observable/from.ts", "../../rxjs/src/internal/observable/of.ts", "../../rxjs/src/internal/observable/throwError.ts", "../../rxjs/src/internal/Notification.ts", "../../rxjs/src/internal/util/EmptyError.ts", "../../rxjs/src/internal/util/ArgumentOutOfRangeError.ts", "../../rxjs/src/internal/util/NotFoundError.ts", "../../rxjs/src/internal/util/SequenceError.ts", "../../rxjs/src/internal/operators/timeout.ts", "../../rxjs/src/internal/util/mapOneOrManyArgs.ts", "../../rxjs/src/internal/util/argsArgArrayOrObject.ts", "../../rxjs/src/internal/observable/never.ts", "../../rxjs/src/internal/util/argsOrArgArray.ts", "../../@aws-amplify/core/src/utils/isWebWorker.ts", "../../@aws-amplify/core/src/Reachability/Reachability.ts", "../../@aws-amplify/core/src/utils/isBrowser.ts", "../../@aws-amplify/core/src/utils/sessionListener/SessionListener.ts", "../../@aws-amplify/core/src/utils/sessionListener/index.ts", "../../@aws-amplify/core/src/singleton/Amplify.ts", "../../@aws-amplify/core/src/singleton/apis/internal/fetchAuthSession.ts", "../../@aws-amplify/core/src/singleton/apis/fetchAuthSession.ts", "../../@aws-amplify/core/src/singleton/apis/clearCredentials.ts", "../../@aws-amplify/core/src/clients/serde/responseInfo.ts", "../../@aws-amplify/core/src/clients/serde/json.ts", "../../@aws-amplify/core/src/clients/internal/composeServiceApi.ts", "../../@aws-amplify/core/src/clients/endpoints/partitions.ts", "../../@aws-amplify/core/src/clients/endpoints/getDnsSuffix.ts", "../../@aws-amplify/core/src/clients/middleware/retry/middleware.ts", "../../@aws-amplify/core/src/clients/middleware/userAgent/middleware.ts", "../../@aws-amplify/core/src/clients/internal/composeTransferHandler.ts", "../../@aws-amplify/core/src/clients/utils/memoization.ts", "../../@aws-amplify/core/src/clients/handlers/fetch.ts", "../../@aws-amplify/core/src/clients/handlers/unauthenticated.ts", "../../@aws-amplify/core/src/utils/retry/constants.ts", "../../@aws-amplify/core/src/utils/retry/jitteredBackoff.ts", "../../@aws-amplify/core/src/clients/middleware/retry/jitteredBackoff.ts", "../../@aws-amplify/core/src/clients/middleware/retry/isClockSkewError.ts", "../../@aws-amplify/core/src/clients/middleware/retry/defaultRetryDecider.ts", "../../@aws-amplify/core/src/utils/amplifyUrl/index.ts", "../../@aws-amplify/core/src/awsClients/cognitoIdentity/base.ts", "../../@aws-amplify/core/src/awsClients/cognitoIdentity/getId.ts", "../../@aws-amplify/core/src/awsClients/cognitoIdentity/getCredentialsForIdentity.ts", "../../@aws-amplify/core/src/errors/PlatformNotSupportedError.ts", "../../@aws-amplify/core/src/storage/KeyValueStorage.ts", "../../@aws-amplify/core/src/storage/InMemoryStorage.ts", "../../@aws-amplify/core/src/storage/utils.ts", "../../@aws-amplify/core/src/storage/DefaultStorage.ts", "../../@aws-amplify/core/src/storage/SessionStorage.ts", "../../js-cookie/dist/js.cookie.mjs", "../../@aws-amplify/core/src/storage/CookieStorage.ts", "../../@aws-amplify/core/src/storage/index.ts", "../../@aws-amplify/core/src/Cache/constants.ts", "../../@aws-amplify/core/src/Cache/utils/cacheHelpers.ts", "../../@aws-amplify/core/src/Cache/utils/errorHelpers.ts", "../../@aws-amplify/core/src/Cache/StorageCacheCommon.ts", "../../@aws-amplify/core/src/Cache/StorageCache.ts", "../../@aws-amplify/core/src/Cache/index.ts", "../../@aws-amplify/core/src/I18n/I18n.ts", "../../@aws-amplify/core/src/I18n/errorHelpers.ts", "../../@aws-amplify/core/src/I18n/index.ts", "../../@aws-amplify/core/src/awsClients/pinpoint/base.ts", "../../@aws-amplify/core/src/awsClients/pinpoint/errorHelpers.ts", "../../@aws-amplify/core/src/clients/middleware/signing/signer/signatureV4/utils/getSignedHeaders.ts", "../../@aws-amplify/core/src/clients/middleware/signing/signer/signatureV4/constants.ts", "../../@aws-amplify/core/src/clients/middleware/signing/signer/signatureV4/utils/getCredentialScope.ts", "../../@aws-amplify/core/src/clients/middleware/signing/signer/signatureV4/utils/getFormattedDates.ts", "../../@aws-amplify/core/src/clients/middleware/signing/signer/signatureV4/utils/getSigningValues.ts", "../../@aws-amplify/core/src/clients/middleware/signing/signer/signatureV4/utils/dataHashHelpers.ts", "../../@aws-amplify/core/src/clients/middleware/signing/signer/signatureV4/utils/getCanonicalHeaders.ts", "../../@aws-amplify/core/src/clients/middleware/signing/signer/signatureV4/utils/getCanonicalQueryString.ts", "../../@aws-amplify/core/src/clients/middleware/signing/signer/signatureV4/utils/getCanonicalUri.ts", "../../@aws-amplify/core/src/clients/middleware/signing/signer/signatureV4/utils/getHashedPayload.ts", "../../@aws-amplify/core/src/clients/middleware/signing/signer/signatureV4/utils/getCanonicalRequest.ts", "../../@aws-amplify/core/src/clients/middleware/signing/signer/signatureV4/utils/getSigningKey.ts", "../../@aws-amplify/core/src/clients/middleware/signing/signer/signatureV4/utils/getStringToSign.ts", "../../@aws-amplify/core/src/clients/middleware/signing/signer/signatureV4/utils/getSignature.ts", "../../@aws-amplify/core/src/clients/middleware/signing/signer/signatureV4/signRequest.ts", "../../@aws-amplify/core/src/clients/middleware/signing/utils/getSkewCorrectedDate.ts", "../../@aws-amplify/core/src/clients/middleware/signing/utils/isClockSkewed.ts", "../../@aws-amplify/core/src/clients/middleware/signing/utils/getUpdatedSystemClockOffset.ts", "../../@aws-amplify/core/src/clients/middleware/signing/middleware.ts", "../../@aws-amplify/core/src/clients/handlers/authenticated.ts", "../../@aws-amplify/core/src/clients/middleware/signing/utils/extendedEncodeURIComponent.ts", "../../@aws-amplify/core/src/awsClients/pinpoint/updateEndpoint.ts", "../../@aws-amplify/core/src/providers/pinpoint/utils/constants.ts", "../../@aws-amplify/core/src/awsClients/pinpoint/putEvents.ts", "../../@aws-amplify/core/src/providers/pinpoint/utils/PinpointEventBuffer.ts", "../../@aws-amplify/core/src/providers/pinpoint/types/errors.ts", "../../@aws-amplify/core/src/ServiceWorker/errorHelpers.ts", "../../@aws-amplify/core/src/utils/generateRandomString.ts", "../../@aws-amplify/core/src/utils/urlSafeDecode.ts", "../../@aws-amplify/core/src/utils/urlSafeEncode.ts", "../../@aws-amplify/core/src/utils/deDupeAsyncFunction.ts", "../../@aws-amplify/core/src/utils/deviceName/getDeviceName.ts", "../../@aws-amplify/core/src/Signer/DateUtils.ts", "../../@aws-amplify/core/src/utils/convert/base64/bytesToString.ts", "../../@aws-amplify/core/src/utils/convert/base64/base64Encoder.ts", "../../@aws-amplify/core/src/utils/cryptoSecureRandomInt.ts", "../../@aws-amplify/core/src/utils/WordArray.ts", "../../@aws-amplify/auth/src/errors/AuthError.ts", "../../@aws-amplify/auth/src/errors/constants.ts", "../../@aws-amplify/auth/src/providers/cognito/utils/types.ts", "../../@aws-amplify/auth/src/providers/cognito/apis/internal/getCurrentUser.ts", "../../@aws-amplify/auth/src/providers/cognito/apis/getCurrentUser.ts", "../../@aws-amplify/auth/src/providers/cognito/types/errors.ts", "../../@aws-amplify/auth/src/errors/types/validation.ts", "../../@aws-amplify/auth/src/common/AuthErrorStrings.ts", "../../@aws-amplify/auth/src/errors/utils/assertValidationError.ts", "../../@aws-amplify/auth/src/utils/getAuthUserAgentValue.ts", "../../@aws-amplify/auth/src/foundation/factories/serviceClients/cognitoIdentityProvider/shared/serde/createUserPoolSerializer.ts", "../../@aws-amplify/auth/src/errors/utils/assertServiceError.ts", "../../@aws-amplify/auth/src/foundation/factories/serviceClients/cognitoIdentityProvider/shared/serde/createUserPoolDeserializer.ts", "../../@aws-amplify/auth/src/foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.ts", "../../@aws-amplify/auth/src/foundation/constants.ts", "../../@aws-amplify/auth/src/foundation/factories/serviceClients/cognitoIdentityProvider/constants.ts", "../../@aws-amplify/auth/src/foundation/factories/serviceClients/cognitoIdentityProvider/createInitiateAuthClient.ts", "../../@aws-amplify/auth/src/foundation/factories/serviceClients/cognitoIdentityProvider/createRespondToAuthChallengeClient.ts", "../../@aws-amplify/auth/src/foundation/factories/serviceClients/cognitoIdentityProvider/createVerifySoftwareTokenClient.ts", "../../@aws-amplify/auth/src/foundation/factories/serviceClients/cognitoIdentityProvider/createAssociateSoftwareTokenClient.ts", "../../@aws-amplify/auth/src/foundation/factories/serviceClients/cognitoIdentityProvider/createConfirmDeviceClient.ts", "../../@aws-amplify/auth/src/foundation/cognitoUserPoolEndpointResolver.ts", "../../@aws-amplify/auth/src/providers/cognito/factories/createCognitoUserPoolEndpointResolver.ts", "../../@aws-amplify/auth/src/foundation/parsers/regionParsers.ts", "../../@aws-amplify/auth/src/providers/cognito/utils/signInStore.ts", "../../@aws-amplify/auth/src/providers/cognito/utils/textEncoder/index.ts", "../../@aws-amplify/auth/src/providers/cognito/utils/srp/BigInteger/BigInteger.ts", "../../@aws-amplify/auth/src/providers/cognito/utils/srp/calculate/calculateS.ts", "../../@aws-amplify/auth/src/providers/cognito/utils/srp/constants.ts", "../../@aws-amplify/auth/src/providers/cognito/utils/srp/getBytesFromHex.ts", "../../@aws-amplify/auth/src/providers/cognito/utils/srp/getHexFromBytes.ts", "../../@aws-amplify/auth/src/providers/cognito/utils/srp/getHashFromData.ts", "../../@aws-amplify/auth/src/providers/cognito/utils/srp/getHashFromHex.ts", "../../@aws-amplify/auth/src/providers/cognito/utils/srp/getPaddedHex.ts", "../../@aws-amplify/auth/src/providers/cognito/utils/srp/calculate/calculateU.ts", "../../@aws-amplify/auth/src/providers/cognito/utils/srp/getHkdfKey.ts", "../../@aws-amplify/auth/src/providers/cognito/utils/srp/getRandomBytes.ts", "../../@aws-amplify/auth/src/providers/cognito/utils/srp/getRandomString.ts", "../../@aws-amplify/auth/src/providers/cognito/utils/srp/AuthenticationHelper/AuthenticationHelper.ts", "../../@aws-amplify/auth/src/providers/cognito/utils/srp/calculate/calculateA.ts", "../../@aws-amplify/auth/src/providers/cognito/utils/srp/getAuthenticationHelper.ts", "../../@aws-amplify/auth/src/providers/cognito/utils/srp/getNowString.ts", "../../@aws-amplify/auth/src/providers/cognito/utils/srp/getSignatureString.ts", "../../@aws-amplify/auth/src/providers/cognito/utils/userContextData.ts", "../../@aws-amplify/auth/src/providers/cognito/utils/signInHelpers.ts", "../../@aws-amplify/auth/src/providers/cognito/utils/refreshAuthTokens.ts", "../../@aws-amplify/auth/src/providers/cognito/tokenProvider/types.ts", "../../@aws-amplify/auth/src/providers/cognito/tokenProvider/errorHelpers.ts", "../../@aws-amplify/auth/src/providers/cognito/tokenProvider/TokenStore.ts", "../../@aws-amplify/auth/src/providers/cognito/utils/signInWithRedirectStore.ts", "../../@aws-amplify/auth/src/providers/cognito/utils/oauth/oAuthStore.ts", "../../@aws-amplify/auth/src/providers/cognito/utils/oauth/inflightPromise.ts", "../../@aws-amplify/auth/src/providers/cognito/tokenProvider/TokenOrchestrator.ts", "../../@aws-amplify/auth/src/providers/cognito/tokenProvider/CognitoUserPoolsTokenProvider.ts", "../../@aws-amplify/auth/src/providers/cognito/tokenProvider/tokenProvider.ts", "../../@aws-amplify/auth/src/providers/cognito/tokenProvider/cacheTokens.ts", "../../@aws-amplify/auth/src/providers/cognito/utils/dispatchSignedInHubEvent.ts", "../../@aws-amplify/auth/src/providers/cognito/apis/signInWithCustomAuth.ts", "../../@aws-amplify/auth/src/providers/cognito/apis/signInWithCustomSRPAuth.ts", "../../@aws-amplify/auth/src/providers/cognito/apis/signInWithSRP.ts", "../../@aws-amplify/auth/src/providers/cognito/apis/signInWithUserPassword.ts", "../../@aws-amplify/auth/src/providers/cognito/apis/signIn.ts", "../../@aws-amplify/auth/src/providers/cognito/apis/autoSignIn.ts", "../../@aws-amplify/auth/src/providers/cognito/utils/apiHelpers.ts", "../../@aws-amplify/auth/src/providers/cognito/utils/signUpHelpers.ts", "../../@aws-amplify/auth/src/foundation/factories/serviceClients/cognitoIdentityProvider/createSignUpClient.ts", "../../@aws-amplify/auth/src/providers/cognito/apis/signUp.ts", "../../@aws-amplify/auth/src/foundation/factories/serviceClients/cognitoIdentityProvider/createForgotPasswordClient.ts", "../../@aws-amplify/auth/src/providers/cognito/apis/resetPassword.ts", "../../@aws-amplify/auth/src/foundation/factories/serviceClients/cognitoIdentityProvider/createConfirmForgotPasswordClient.ts", "../../@aws-amplify/auth/src/providers/cognito/apis/confirmResetPassword.ts", "../../@aws-amplify/auth/src/foundation/factories/serviceClients/cognitoIdentityProvider/createResendConfirmationCodeClient.ts", "../../@aws-amplify/auth/src/providers/cognito/apis/resendSignUpCode.ts", "../../@aws-amplify/auth/src/foundation/factories/serviceClients/cognitoIdentityProvider/createConfirmSignUpClient.ts", "../../@aws-amplify/auth/src/providers/cognito/apis/confirmSignUp.ts", "../../@aws-amplify/auth/src/providers/cognito/apis/confirmSignIn.ts", "../../@aws-amplify/auth/src/foundation/factories/serviceClients/cognitoIdentityProvider/createSetUserMFAPreferenceClient.ts", "../../@aws-amplify/auth/src/providers/cognito/apis/updateMFAPreference.ts", "../../@aws-amplify/auth/src/foundation/factories/serviceClients/cognitoIdentityProvider/createGetUserClient.ts", "../../@aws-amplify/auth/src/providers/cognito/apis/fetchMFAPreference.ts", "../../@aws-amplify/auth/src/providers/cognito/apis/verifyTOTPSetup.ts", "../../@aws-amplify/auth/src/foundation/factories/serviceClients/cognitoIdentityProvider/createChangePasswordClient.ts", "../../@aws-amplify/auth/src/providers/cognito/apis/updatePassword.ts", "../../@aws-amplify/auth/src/providers/cognito/apis/setUpTOTP.ts", "../../@aws-amplify/auth/src/foundation/factories/serviceClients/cognitoIdentityProvider/createUpdateUserAttributesClient.ts", "../../@aws-amplify/auth/src/providers/cognito/apis/updateUserAttributes.ts", "../../@aws-amplify/auth/src/providers/cognito/apis/updateUserAttribute.ts", "../../@aws-amplify/auth/src/foundation/factories/serviceClients/cognitoIdentityProvider/createVerifyUserAttributeClient.ts", "../../@aws-amplify/auth/src/providers/cognito/apis/confirmUserAttribute.ts", "../../@aws-amplify/auth/src/Errors.ts", "../../@aws-amplify/auth/src/providers/cognito/utils/oauth/createOAuthError.ts", "../../@aws-amplify/auth/src/types/Auth.ts", "../../@aws-amplify/auth/src/providers/cognito/utils/oauth/validateState.ts", "../../@aws-amplify/auth/src/providers/cognito/utils/oauth/completeOAuthFlow.ts", "../../@aws-amplify/auth/src/providers/cognito/utils/oauth/getRedirectUrl.ts", "../../@aws-amplify/auth/src/providers/cognito/utils/oauth/handleFailure.ts", "../../@aws-amplify/auth/src/providers/cognito/utils/oauth/attemptCompleteOAuthFlow.ts", "../../@aws-amplify/auth/src/providers/cognito/utils/oauth/enableOAuthListener.ts", "../../@aws-amplify/auth/src/providers/cognito/types/models.ts", "../../@aws-amplify/auth/src/utils/openAuthSession.ts", "../../@aws-amplify/auth/src/providers/cognito/utils/oauth/generateCodeVerifier.ts", "../../@aws-amplify/auth/src/providers/cognito/utils/oauth/generateState.ts", "../../@aws-amplify/auth/src/providers/cognito/utils/oauth/cancelOAuthFlow.ts", "../../@aws-amplify/auth/src/providers/cognito/apis/signInWithRedirect.ts", "../../@aws-amplify/auth/src/providers/cognito/apis/internal/fetchUserAttributes.ts", "../../@aws-amplify/auth/src/providers/cognito/apis/fetchUserAttributes.ts", "../../@aws-amplify/auth/src/providers/cognito/utils/oauth/completeOAuthSignOut.ts", "../../@aws-amplify/auth/src/providers/cognito/utils/oauth/oAuthSignOutRedirect.ts", "../../@aws-amplify/auth/src/providers/cognito/utils/oauth/handleOAuthSignOut.ts", "../../@aws-amplify/auth/src/foundation/factories/serviceClients/cognitoIdentityProvider/createRevokeTokenClient.ts", "../../@aws-amplify/auth/src/foundation/factories/serviceClients/cognitoIdentityProvider/createGlobalSignOutClient.ts", "../../@aws-amplify/auth/src/providers/cognito/apis/signOut.ts", "../../@aws-amplify/auth/src/foundation/factories/serviceClients/cognitoIdentityProvider/createGetUserAttributeVerificationCodeClient.ts", "../../@aws-amplify/auth/src/providers/cognito/apis/sendUserAttributeVerificationCode.ts", "../../@aws-amplify/auth/src/foundation/factories/serviceClients/cognitoIdentityProvider/createDeleteUserAttributesClient.ts", "../../@aws-amplify/auth/src/providers/cognito/apis/deleteUserAttributes.ts", "../../@aws-amplify/auth/src/foundation/factories/serviceClients/cognitoIdentityProvider/shared/serde/createEmptyResponseDeserializer.ts", "../../@aws-amplify/auth/src/foundation/factories/serviceClients/cognitoIdentityProvider/createDeleteUserClient.ts", "../../@aws-amplify/auth/src/providers/cognito/apis/deleteUser.ts", "../../@aws-amplify/auth/src/foundation/factories/serviceClients/cognitoIdentityProvider/createUpdateDeviceStatusClient.ts", "../../@aws-amplify/auth/src/providers/cognito/apis/rememberDevice.ts", "../../@aws-amplify/auth/src/foundation/factories/serviceClients/cognitoIdentityProvider/createForgetDeviceClient.ts", "../../@aws-amplify/auth/src/providers/cognito/apis/forgetDevice.ts", "../../@aws-amplify/auth/src/foundation/factories/serviceClients/cognitoIdentityProvider/createListDevicesClient.ts", "../../@aws-amplify/auth/src/providers/cognito/apis/fetchDevices.ts", "../../@aws-amplify/auth/src/providers/cognito/credentialsProvider/types.ts", "../../@aws-amplify/auth/src/providers/cognito/credentialsProvider/IdentityIdStore.ts", "../../@aws-amplify/auth/src/providers/cognito/credentialsProvider/utils.ts", "../../@aws-amplify/auth/src/providers/cognito/credentialsProvider/IdentityIdProvider.ts", "../../@aws-amplify/auth/src/providers/cognito/credentialsProvider/credentialsProvider.ts"],
  "sourcesContent": ["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport class AmplifyError extends Error {\n    /**\n     *  Constructs an AmplifyError.\n     *\n     * @param message text that describes the main problem.\n     * @param underlyingError the underlying cause of the error.\n     * @param recoverySuggestion suggestion to recover from the error.\n     *\n     */\n    constructor({ message, name, recoverySuggestion, underlyingError, }) {\n        super(message);\n        this.name = name;\n        this.underlyingError = underlyingError;\n        this.recoverySuggestion = recoverySuggestion;\n        // Hack for making the custom error class work when transpiled to es5\n        // TODO: Delete the following 2 lines after we change the build target to >= es2015\n        this.constructor = AmplifyError;\n        Object.setPrototypeOf(this, AmplifyError.prototype);\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport var AmplifyErrorCode;\n(function (AmplifyErrorCode) {\n    AmplifyErrorCode[\"NoEndpointId\"] = \"NoEndpointId\";\n    AmplifyErrorCode[\"PlatformNotSupported\"] = \"PlatformNotSupported\";\n    AmplifyErrorCode[\"Unknown\"] = \"Unknown\";\n    AmplifyErrorCode[\"NetworkError\"] = \"NetworkError\";\n})(AmplifyErrorCode || (AmplifyErrorCode = {}));\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AmplifyError } from './AmplifyError';\nexport const createAssertionFunction = (errorMap, AssertionError = AmplifyError) => (assertion, name, additionalContext) => {\n    const { message, recoverySuggestion } = errorMap[name];\n    if (!assertion) {\n        throw new AssertionError({\n            name,\n            message: additionalContext\n                ? `${message} ${additionalContext}`\n                : message,\n            recoverySuggestion,\n        });\n    }\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AmplifyErrorCode } from '../types';\nimport { createAssertionFunction } from './createAssertionFunction';\nconst amplifyErrorMap = {\n    [AmplifyErrorCode.NoEndpointId]: {\n        message: 'Endpoint ID was not found and was unable to be created.',\n    },\n    [AmplifyErrorCode.PlatformNotSupported]: {\n        message: 'Function not supported on current platform.',\n    },\n    [AmplifyErrorCode.Unknown]: {\n        message: 'An unknown error occurred.',\n    },\n    [AmplifyErrorCode.NetworkError]: {\n        message: 'A network error has occurred.',\n    },\n};\nexport const assert = createAssertionFunction(amplifyErrorMap);\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AmplifyError } from '../../errors';\nexport const getCrypto = () => {\n    if (typeof window === 'object' && typeof window.crypto === 'object') {\n        return window.crypto;\n    }\n    // Next.js global polyfill\n    if (typeof crypto === 'object') {\n        return crypto;\n    }\n    throw new AmplifyError({\n        name: 'MissingPolyfill',\n        message: 'Cannot resolve the `crypto` function from the environment.',\n    });\n};\nexport const getBtoa = () => {\n    // browser\n    if (typeof window !== 'undefined' && typeof window.btoa === 'function') {\n        return window.btoa;\n    }\n    // Next.js global polyfill\n    if (typeof btoa === 'function') {\n        return btoa;\n    }\n    throw new AmplifyError({\n        name: 'Base64EncoderError',\n        message: 'Cannot resolve the `btoa` function from the environment.',\n    });\n};\nexport const getAtob = () => {\n    // browser\n    if (typeof window !== 'undefined' && typeof window.atob === 'function') {\n        return window.atob;\n    }\n    // Next.js global polyfill\n    if (typeof atob === 'function') {\n        return atob;\n    }\n    throw new AmplifyError({\n        name: 'Base64EncoderError',\n        message: 'Cannot resolve the `atob` function from the environment.',\n    });\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { getAtob } from '../../globalHelpers';\nexport const base64Decoder = {\n    convert(input) {\n        return getAtob()(input);\n    },\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { createAssertionFunction } from '../../../errors';\nexport var AuthConfigurationErrorCode;\n(function (AuthConfigurationErrorCode) {\n    AuthConfigurationErrorCode[\"AuthTokenConfigException\"] = \"AuthTokenConfigException\";\n    AuthConfigurationErrorCode[\"AuthUserPoolAndIdentityPoolException\"] = \"AuthUserPoolAndIdentityPoolException\";\n    AuthConfigurationErrorCode[\"AuthUserPoolException\"] = \"AuthUserPoolException\";\n    AuthConfigurationErrorCode[\"InvalidIdentityPoolIdException\"] = \"InvalidIdentityPoolIdException\";\n    AuthConfigurationErrorCode[\"OAuthNotConfigureException\"] = \"OAuthNotConfigureException\";\n})(AuthConfigurationErrorCode || (AuthConfigurationErrorCode = {}));\nconst authConfigurationErrorMap = {\n    [AuthConfigurationErrorCode.AuthTokenConfigException]: {\n        message: 'Auth Token Provider not configured.',\n        recoverySuggestion: 'Make sure to call Amplify.configure in your app.',\n    },\n    [AuthConfigurationErrorCode.AuthUserPoolAndIdentityPoolException]: {\n        message: 'Auth UserPool or IdentityPool not configured.',\n        recoverySuggestion: 'Make sure to call Amplify.configure in your app with UserPoolId and IdentityPoolId.',\n    },\n    [AuthConfigurationErrorCode.AuthUserPoolException]: {\n        message: 'Auth UserPool not configured.',\n        recoverySuggestion: 'Make sure to call Amplify.configure in your app with userPoolId and userPoolClientId.',\n    },\n    [AuthConfigurationErrorCode.InvalidIdentityPoolIdException]: {\n        message: 'Invalid identity pool id provided.',\n        recoverySuggestion: 'Make sure a valid identityPoolId is given in the config.',\n    },\n    [AuthConfigurationErrorCode.OAuthNotConfigureException]: {\n        message: 'oauth param not configured.',\n        recoverySuggestion: 'Make sure to call Amplify.configure with oauth parameter in your app.',\n    },\n};\nexport const assert = createAssertionFunction(authConfigurationErrorMap);\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { base64Decoder } from '../../../utils/convert';\nimport { AuthConfigurationErrorCode, assert } from './errorHelpers';\nexport function assertTokenProviderConfig(cognitoConfig) {\n    let assertionValid = true; // assume valid until otherwise proveed\n    if (!cognitoConfig) {\n        assertionValid = false;\n    }\n    else {\n        assertionValid =\n            !!cognitoConfig.userPoolId && !!cognitoConfig.userPoolClientId;\n    }\n    assert(assertionValid, AuthConfigurationErrorCode.AuthUserPoolException);\n}\nexport function assertOAuthConfig(cognitoConfig) {\n    const validOAuthConfig = !!cognitoConfig?.loginWith?.oauth?.domain &&\n        !!cognitoConfig?.loginWith?.oauth?.redirectSignOut &&\n        !!cognitoConfig?.loginWith?.oauth?.redirectSignIn &&\n        !!cognitoConfig?.loginWith?.oauth?.responseType;\n    assert(validOAuthConfig, AuthConfigurationErrorCode.OAuthNotConfigureException);\n}\nexport function assertIdentityPoolIdConfig(cognitoConfig) {\n    const validConfig = !!cognitoConfig?.identityPoolId;\n    assert(validConfig, AuthConfigurationErrorCode.InvalidIdentityPoolIdException);\n}\n/**\n * Decodes payload of JWT token\n *\n * @param {String} token A string representing a token to be decoded\n * @throws {@link Error} - Throws error when token is invalid or payload malformed.\n */\nexport function decodeJWT(token) {\n    const tokenParts = token.split('.');\n    if (tokenParts.length !== 3) {\n        throw new Error('Invalid token');\n    }\n    try {\n        const base64WithUrlSafe = tokenParts[1];\n        const base64 = base64WithUrlSafe.replace(/-/g, '+').replace(/_/g, '/');\n        const jsonStr = decodeURIComponent(base64Decoder\n            .convert(base64)\n            .split('')\n            .map(char => `%${`00${char.charCodeAt(0).toString(16)}`.slice(-2)}`)\n            .join(''));\n        const payload = JSON.parse(jsonStr);\n        return {\n            toString: () => token,\n            payload,\n        };\n    }\n    catch (err) {\n        throw new Error('Invalid token payload');\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Logging constants\nexport const AWS_CLOUDWATCH_CATEGORY = 'Logging';\nexport const USER_AGENT_HEADER = 'x-amz-user-agent';\n// Error exception code constants\nexport const NO_HUBCALLBACK_PROVIDED_EXCEPTION = 'NoHubcallbackProvidedException';\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport var LogType;\n(function (LogType) {\n    LogType[\"DEBUG\"] = \"DEBUG\";\n    LogType[\"ERROR\"] = \"ERROR\";\n    LogType[\"INFO\"] = \"INFO\";\n    LogType[\"WARN\"] = \"WARN\";\n    LogType[\"VERBOSE\"] = \"VERBOSE\";\n    LogType[\"NONE\"] = \"NONE\";\n})(LogType || (LogType = {}));\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AWS_CLOUDWATCH_CATEGORY } from '../constants';\nimport { LogType } from './types';\nconst LOG_LEVELS = {\n    VERBOSE: 1,\n    DEBUG: 2,\n    INFO: 3,\n    WARN: 4,\n    ERROR: 5,\n    NONE: 6,\n};\n/**\n * Write logs\n * @class Logger\n */\nexport class ConsoleLogger {\n    /**\n     * @constructor\n     * @param {string} name - Name of the logger\n     */\n    constructor(name, level = LogType.WARN) {\n        this.name = name;\n        this.level = level;\n        this._pluggables = [];\n    }\n    _padding(n) {\n        return n < 10 ? '0' + n : '' + n;\n    }\n    _ts() {\n        const dt = new Date();\n        return ([this._padding(dt.getMinutes()), this._padding(dt.getSeconds())].join(':') +\n            '.' +\n            dt.getMilliseconds());\n    }\n    configure(config) {\n        if (!config)\n            return this._config;\n        this._config = config;\n        return this._config;\n    }\n    /**\n     * Write log\n     * @method\n     * @memeberof Logger\n     * @param {LogType|string} type - log type, default INFO\n     * @param {string|object} msg - Logging message or object\n     */\n    _log(type, ...msg) {\n        let loggerLevelName = this.level;\n        if (ConsoleLogger.LOG_LEVEL) {\n            loggerLevelName = ConsoleLogger.LOG_LEVEL;\n        }\n        if (typeof window !== 'undefined' && window.LOG_LEVEL) {\n            loggerLevelName = window.LOG_LEVEL;\n        }\n        const loggerLevel = LOG_LEVELS[loggerLevelName];\n        const typeLevel = LOG_LEVELS[type];\n        if (!(typeLevel >= loggerLevel)) {\n            // Do nothing if type is not greater than or equal to logger level (handle undefined)\n            return;\n        }\n        let log = console.log.bind(console);\n        if (type === LogType.ERROR && console.error) {\n            log = console.error.bind(console);\n        }\n        if (type === LogType.WARN && console.warn) {\n            log = console.warn.bind(console);\n        }\n        if (ConsoleLogger.BIND_ALL_LOG_LEVELS) {\n            if (type === LogType.INFO && console.info) {\n                log = console.info.bind(console);\n            }\n            if (type === LogType.DEBUG && console.debug) {\n                log = console.debug.bind(console);\n            }\n        }\n        const prefix = `[${type}] ${this._ts()} ${this.name}`;\n        let message = '';\n        if (msg.length === 1 && typeof msg[0] === 'string') {\n            message = `${prefix} - ${msg[0]}`;\n            log(message);\n        }\n        else if (msg.length === 1) {\n            message = `${prefix} ${msg[0]}`;\n            log(prefix, msg[0]);\n        }\n        else if (typeof msg[0] === 'string') {\n            let obj = msg.slice(1);\n            if (obj.length === 1) {\n                obj = obj[0];\n            }\n            message = `${prefix} - ${msg[0]} ${obj}`;\n            log(`${prefix} - ${msg[0]}`, obj);\n        }\n        else {\n            message = `${prefix} ${msg}`;\n            log(prefix, msg);\n        }\n        for (const plugin of this._pluggables) {\n            const logEvent = { message, timestamp: Date.now() };\n            plugin.pushLogs([logEvent]);\n        }\n    }\n    /**\n     * Write General log. Default to INFO\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    log(...msg) {\n        this._log(LogType.INFO, ...msg);\n    }\n    /**\n     * Write INFO log\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    info(...msg) {\n        this._log(LogType.INFO, ...msg);\n    }\n    /**\n     * Write WARN log\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    warn(...msg) {\n        this._log(LogType.WARN, ...msg);\n    }\n    /**\n     * Write ERROR log\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    error(...msg) {\n        this._log(LogType.ERROR, ...msg);\n    }\n    /**\n     * Write DEBUG log\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    debug(...msg) {\n        this._log(LogType.DEBUG, ...msg);\n    }\n    /**\n     * Write VERBOSE log\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    verbose(...msg) {\n        this._log(LogType.VERBOSE, ...msg);\n    }\n    addPluggable(pluggable) {\n        if (pluggable && pluggable.getCategoryName() === AWS_CLOUDWATCH_CATEGORY) {\n            this._pluggables.push(pluggable);\n            pluggable.configure(this._config);\n        }\n    }\n    listPluggables() {\n        return this._pluggables;\n    }\n}\nConsoleLogger.LOG_LEVEL = null;\nConsoleLogger.BIND_ALL_LOG_LEVELS = false;\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ConsoleLogger } from '../Logger';\nimport { NO_HUBCALLBACK_PROVIDED_EXCEPTION } from '../constants';\nimport { AmplifyError } from '../errors';\nexport const AMPLIFY_SYMBOL = (typeof Symbol !== 'undefined'\n    ? Symbol('amplify_default')\n    : '@@amplify_default');\nconst logger = new ConsoleLogger('Hub');\nexport class HubClass {\n    constructor(name) {\n        this.listeners = new Map();\n        this.protectedChannels = [\n            'core',\n            'auth',\n            'api',\n            'analytics',\n            'interactions',\n            'pubsub',\n            'storage',\n            'ui',\n            'xr',\n        ];\n        this.name = name;\n    }\n    /**\n     * Used internally to remove a Hub listener.\n     *\n     * @remarks\n     * This private method is for internal use only. Instead of calling Hub.remove, call the result of Hub.listen.\n     */\n    _remove(channel, listener) {\n        const holder = this.listeners.get(channel);\n        if (!holder) {\n            logger.warn(`No listeners for ${channel}`);\n            return;\n        }\n        this.listeners.set(channel, [\n            ...holder.filter(({ callback }) => callback !== listener),\n        ]);\n    }\n    dispatch(channel, payload, source, ampSymbol) {\n        if (typeof channel === 'string' &&\n            this.protectedChannels.indexOf(channel) > -1) {\n            const hasAccess = ampSymbol === AMPLIFY_SYMBOL;\n            if (!hasAccess) {\n                logger.warn(`WARNING: ${channel} is protected and dispatching on it can have unintended consequences`);\n            }\n        }\n        const capsule = {\n            channel,\n            payload: { ...payload },\n            source,\n            patternInfo: [],\n        };\n        try {\n            this._toListeners(capsule);\n        }\n        catch (e) {\n            logger.error(e);\n        }\n    }\n    listen(channel, callback, listenerName = 'noname') {\n        let cb;\n        if (typeof callback !== 'function') {\n            throw new AmplifyError({\n                name: NO_HUBCALLBACK_PROVIDED_EXCEPTION,\n                message: 'No callback supplied to Hub',\n            });\n        }\n        else {\n            // Needs to be casted as a more generic type\n            cb = callback;\n        }\n        let holder = this.listeners.get(channel);\n        if (!holder) {\n            holder = [];\n            this.listeners.set(channel, holder);\n        }\n        holder.push({\n            name: listenerName,\n            callback: cb,\n        });\n        return () => {\n            this._remove(channel, cb);\n        };\n    }\n    _toListeners(capsule) {\n        const { channel, payload } = capsule;\n        const holder = this.listeners.get(channel);\n        if (holder) {\n            holder.forEach(listener => {\n                logger.debug(`Dispatching to ${channel} with `, payload);\n                try {\n                    listener.callback(capsule);\n                }\n                catch (e) {\n                    logger.error(e);\n                }\n            });\n        }\n    }\n}\n/* We export a __default__ instance of HubClass to use it as a\npseudo Singleton for the main messaging bus, however you can still create\nyour own instance of HubClass() for a separate \"private bus\" of events. */\nexport const Hub = new HubClass('__default__');\n/**\n * @internal\n *\n * Internal hub used for core Amplify functionality. Not intended for use outside of Amplify.\n *\n */\nexport const HubInternal = new HubClass('internal-hub');\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ConsoleLogger } from '../../Logger';\nconst logger = new ConsoleLogger('getClientInfo');\nexport function getClientInfo() {\n    if (typeof window === 'undefined') {\n        return {};\n    }\n    return browserClientInfo();\n}\nfunction browserClientInfo() {\n    if (typeof window === 'undefined') {\n        logger.warn('No window object available to get browser client info');\n        return {};\n    }\n    const nav = window.navigator;\n    if (!nav) {\n        logger.warn('No navigator object available to get browser client info');\n        return {};\n    }\n    const { platform, product, vendor, userAgent, language } = nav;\n    const type = getBrowserType(userAgent);\n    const timezone = browserTimezone();\n    return {\n        platform,\n        make: product || vendor,\n        model: type.type,\n        version: type.version,\n        appVersion: [type.type, type.version].join('/'),\n        language,\n        timezone,\n    };\n}\nfunction browserTimezone() {\n    const tzMatch = /\\(([A-Za-z\\s].*)\\)/.exec(new Date().toString());\n    return tzMatch ? tzMatch[1] || '' : '';\n}\nfunction getBrowserType(userAgent) {\n    // The latest user agents for Opera: https://www.whatismybrowser.com/guides/the-latest-user-agent/opera\n    const operaMatch = /.+(Opera[\\s[A-Z]*|OPR[\\sA-Z]*)\\/([0-9.]+).*/i.exec(userAgent);\n    if (operaMatch) {\n        return { type: operaMatch[1], version: operaMatch[2] };\n    }\n    // The latest user agents for Edge: https://www.whatismybrowser.com/guides/the-latest-user-agent/edge\n    const ieMatch = /.+(Trident|Edge|Edg|EdgA|EdgiOS)\\/([0-9.]+).*/i.exec(userAgent);\n    if (ieMatch) {\n        return { type: ieMatch[1], version: ieMatch[2] };\n    }\n    // The latest user agents for web browsers on Firefox and Chrome\n    // https://www.whatismybrowser.com/guides/the-latest-user-agent/firefox\n    // https://www.whatismybrowser.com/guides/the-latest-user-agent/chrome\n    const cfMatch = /.+(Chrome|CriOS|Firefox|FxiOS)\\/([0-9.]+).*/i.exec(userAgent);\n    if (cfMatch) {\n        return { type: cfMatch[1], version: cfMatch[2] };\n    }\n    // The latest user agents for Safari: https://www.whatismybrowser.com/guides/the-latest-user-agent/safari\n    const sMatch = /.+(Safari)\\/([0-9.]+).*/i.exec(userAgent);\n    if (sMatch) {\n        return { type: sMatch[1], version: sMatch[2] };\n    }\n    const awkMatch = /.+(AppleWebKit)\\/([0-9.]+).*/i.exec(userAgent);\n    if (awkMatch) {\n        return { type: awkMatch[1], version: awkMatch[2] };\n    }\n    const anyMatch = /.*([A-Z]+)\\/([0-9.]+).*/i.exec(userAgent);\n    if (anyMatch) {\n        return { type: anyMatch[1], version: anyMatch[2] };\n    }\n    return { type: '', version: '' };\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ConsoleLogger } from '../../Logger/ConsoleLogger';\nimport { isNonRetryableError } from './isNonRetryableError';\nconst logger = new ConsoleLogger('retryUtil');\n/**\n * @private\n * Internal use of Amplify only\n */\nexport async function retry(functionToRetry, args, delayFn, onTerminate) {\n    if (typeof functionToRetry !== 'function') {\n        throw Error('functionToRetry must be a function');\n    }\n    // TODO(eslint): remove this linter suppression with refactoring.\n    // eslint-disable-next-line no-async-promise-executor\n    return new Promise(async (resolve, reject) => {\n        let attempt = 0;\n        let terminated = false;\n        let timeout;\n        let wakeUp = () => {\n            // no-op\n        }; // will be replaced with a resolver()\n        // used after the loop if terminated while waiting for a timer.\n        let lastError;\n        onTerminate &&\n            onTerminate.then(() => {\n                // signal not to try anymore.\n                terminated = true;\n                // stop sleeping if we're sleeping.\n                clearTimeout(timeout);\n                wakeUp();\n            });\n        // TODO(eslint): remove this linter suppression with refactoring.\n        // eslint-disable-next-line no-unmodified-loop-condition\n        while (!terminated) {\n            attempt++;\n            logger.debug(`${functionToRetry.name} attempt #${attempt} with this vars: ${JSON.stringify(args)}`);\n            try {\n                resolve(await functionToRetry(...args));\n                return;\n            }\n            catch (err) {\n                lastError = err;\n                logger.debug(`error on ${functionToRetry.name}`, err);\n                if (isNonRetryableError(err)) {\n                    logger.debug(`${functionToRetry.name} non retryable error`, err);\n                    reject(err);\n                    return;\n                }\n                const retryIn = delayFn(attempt, args, err);\n                logger.debug(`${functionToRetry.name} retrying in ${retryIn} ms`);\n                // we check `terminated` again here because it could have flipped\n                // in the time it took `functionToRetry` to return.\n                if (retryIn === false || terminated) {\n                    reject(err);\n                    return;\n                }\n                else {\n                    await new Promise(_resolve => {\n                        wakeUp = _resolve; // export wakeUp for onTerminate handling\n                        timeout = setTimeout(wakeUp, retryIn);\n                    });\n                }\n            }\n        }\n        // reached if terminated while waiting for a timer.\n        reject(lastError);\n    });\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport const deepFreeze = (object) => {\n    const propNames = Reflect.ownKeys(object);\n    for (const name of propNames) {\n        const value = object[name];\n        if ((value && typeof value === 'object') || typeof value === 'function') {\n            deepFreeze(value);\n        }\n    }\n    return Object.freeze(object);\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ConsoleLogger } from './Logger';\nimport { AmplifyError } from './errors';\nconst logger = new ConsoleLogger('parseAWSExports');\nconst authTypeMapping = {\n    API_KEY: 'apiKey',\n    AWS_IAM: 'iam',\n    AMAZON_COGNITO_USER_POOLS: 'userPool',\n    OPENID_CONNECT: 'oidc',\n    NONE: 'none',\n    AWS_LAMBDA: 'lambda',\n    // `LAMBDA` is an incorrect value that was added during the v6 rewrite.\n    // Keeping it as a valid value until v7 to prevent breaking customers who might\n    // be relying on it as a workaround.\n    // ref: https://github.com/aws-amplify/amplify-js/pull/12922\n    // TODO: @v7 remove next line\n    LAMBDA: 'lambda',\n};\n/**\n * Converts the object imported from `aws-exports.js` or `amplifyconfiguration.json` files generated by\n * the Amplify CLI into an object that conforms to the {@link ResourcesConfig}.\n *\n * @param config A configuration object imported  from `aws-exports.js` or `amplifyconfiguration.json`.\n *\n * @returns An object that conforms to the {@link ResourcesConfig} .\n */\nexport const parseAWSExports = (config = {}) => {\n    if (!Object.prototype.hasOwnProperty.call(config, 'aws_project_region')) {\n        throw new AmplifyError({\n            name: 'InvalidParameterException',\n            message: 'Invalid config parameter.',\n            recoverySuggestion: 'Ensure passing the config object imported from  `amplifyconfiguration.json`.',\n        });\n    }\n    const { aws_appsync_apiKey, aws_appsync_authenticationType, aws_appsync_graphqlEndpoint, aws_appsync_region, aws_bots_config, aws_cognito_identity_pool_id, aws_cognito_sign_up_verification_method, aws_cognito_mfa_configuration, aws_cognito_mfa_types, aws_cognito_password_protection_settings, aws_cognito_verification_mechanisms, aws_cognito_signup_attributes, aws_cognito_social_providers, aws_cognito_username_attributes, aws_mandatory_sign_in, aws_mobile_analytics_app_id, aws_mobile_analytics_app_region, aws_user_files_s3_bucket, aws_user_files_s3_bucket_region, aws_user_files_s3_dangerously_connect_to_http_endpoint_for_testing, aws_user_pools_id, aws_user_pools_web_client_id, geo, oauth, predictions, aws_cloud_logic_custom, Notifications, modelIntrospection, } = config;\n    const amplifyConfig = {};\n    // Analytics\n    if (aws_mobile_analytics_app_id) {\n        amplifyConfig.Analytics = {\n            Pinpoint: {\n                appId: aws_mobile_analytics_app_id,\n                region: aws_mobile_analytics_app_region,\n            },\n        };\n    }\n    // Notifications\n    const { InAppMessaging, Push } = Notifications ?? {};\n    if (InAppMessaging?.AWSPinpoint || Push?.AWSPinpoint) {\n        if (InAppMessaging?.AWSPinpoint) {\n            const { appId, region } = InAppMessaging.AWSPinpoint;\n            amplifyConfig.Notifications = {\n                InAppMessaging: {\n                    Pinpoint: {\n                        appId,\n                        region,\n                    },\n                },\n            };\n        }\n        if (Push?.AWSPinpoint) {\n            const { appId, region } = Push.AWSPinpoint;\n            amplifyConfig.Notifications = {\n                ...amplifyConfig.Notifications,\n                PushNotification: {\n                    Pinpoint: {\n                        appId,\n                        region,\n                    },\n                },\n            };\n        }\n    }\n    // Interactions\n    if (Array.isArray(aws_bots_config)) {\n        amplifyConfig.Interactions = {\n            LexV1: Object.fromEntries(aws_bots_config.map(bot => [bot.name, bot])),\n        };\n    }\n    // API\n    if (aws_appsync_graphqlEndpoint) {\n        const defaultAuthMode = authTypeMapping[aws_appsync_authenticationType];\n        if (!defaultAuthMode) {\n            logger.debug(`Invalid authentication type ${aws_appsync_authenticationType}. Falling back to IAM.`);\n        }\n        amplifyConfig.API = {\n            GraphQL: {\n                endpoint: aws_appsync_graphqlEndpoint,\n                apiKey: aws_appsync_apiKey,\n                region: aws_appsync_region,\n                defaultAuthMode: defaultAuthMode ?? 'iam',\n            },\n        };\n        if (modelIntrospection) {\n            amplifyConfig.API.GraphQL.modelIntrospection = modelIntrospection;\n        }\n    }\n    // Auth\n    const mfaConfig = aws_cognito_mfa_configuration\n        ? {\n            status: aws_cognito_mfa_configuration &&\n                aws_cognito_mfa_configuration.toLowerCase(),\n            totpEnabled: aws_cognito_mfa_types?.includes('TOTP') ?? false,\n            smsEnabled: aws_cognito_mfa_types?.includes('SMS') ?? false,\n        }\n        : undefined;\n    const passwordFormatConfig = aws_cognito_password_protection_settings\n        ? {\n            minLength: aws_cognito_password_protection_settings.passwordPolicyMinLength,\n            requireLowercase: aws_cognito_password_protection_settings.passwordPolicyCharacters?.includes('REQUIRES_LOWERCASE') ?? false,\n            requireUppercase: aws_cognito_password_protection_settings.passwordPolicyCharacters?.includes('REQUIRES_UPPERCASE') ?? false,\n            requireNumbers: aws_cognito_password_protection_settings.passwordPolicyCharacters?.includes('REQUIRES_NUMBERS') ?? false,\n            requireSpecialCharacters: aws_cognito_password_protection_settings.passwordPolicyCharacters?.includes('REQUIRES_SYMBOLS') ?? false,\n        }\n        : undefined;\n    const mergedUserAttributes = Array.from(new Set([\n        ...(aws_cognito_verification_mechanisms ?? []),\n        ...(aws_cognito_signup_attributes ?? []),\n    ]));\n    const userAttributes = mergedUserAttributes.reduce((attributes, key) => ({\n        ...attributes,\n        // All user attributes generated by the CLI are required\n        [key.toLowerCase()]: { required: true },\n    }), {});\n    const loginWithEmailEnabled = aws_cognito_username_attributes?.includes('EMAIL') ?? false;\n    const loginWithPhoneEnabled = aws_cognito_username_attributes?.includes('PHONE_NUMBER') ?? false;\n    if (aws_cognito_identity_pool_id || aws_user_pools_id) {\n        amplifyConfig.Auth = {\n            Cognito: {\n                identityPoolId: aws_cognito_identity_pool_id,\n                allowGuestAccess: aws_mandatory_sign_in !== 'enable',\n                signUpVerificationMethod: aws_cognito_sign_up_verification_method,\n                userAttributes,\n                userPoolClientId: aws_user_pools_web_client_id,\n                userPoolId: aws_user_pools_id,\n                mfa: mfaConfig,\n                passwordFormat: passwordFormatConfig,\n                loginWith: {\n                    username: !(loginWithEmailEnabled || loginWithPhoneEnabled),\n                    email: loginWithEmailEnabled,\n                    phone: loginWithPhoneEnabled,\n                },\n            },\n        };\n    }\n    const hasOAuthConfig = oauth ? Object.keys(oauth).length > 0 : false;\n    const hasSocialProviderConfig = aws_cognito_social_providers\n        ? aws_cognito_social_providers.length > 0\n        : false;\n    if (amplifyConfig.Auth && hasOAuthConfig) {\n        amplifyConfig.Auth.Cognito.loginWith = {\n            ...amplifyConfig.Auth.Cognito.loginWith,\n            oauth: {\n                ...getOAuthConfig(oauth),\n                ...(hasSocialProviderConfig && {\n                    providers: parseSocialProviders(aws_cognito_social_providers),\n                }),\n            },\n        };\n    }\n    // Storage\n    if (aws_user_files_s3_bucket) {\n        amplifyConfig.Storage = {\n            S3: {\n                bucket: aws_user_files_s3_bucket,\n                region: aws_user_files_s3_bucket_region,\n                dangerouslyConnectToHttpEndpointForTesting: aws_user_files_s3_dangerously_connect_to_http_endpoint_for_testing,\n            },\n        };\n    }\n    // Geo\n    if (geo) {\n        const { amazon_location_service } = geo;\n        amplifyConfig.Geo = {\n            LocationService: {\n                maps: amazon_location_service.maps,\n                geofenceCollections: amazon_location_service.geofenceCollections,\n                searchIndices: amazon_location_service.search_indices,\n                region: amazon_location_service.region,\n            },\n        };\n    }\n    // REST API\n    if (aws_cloud_logic_custom) {\n        amplifyConfig.API = {\n            ...amplifyConfig.API,\n            REST: aws_cloud_logic_custom.reduce((acc, api) => {\n                const { name, endpoint, region, service } = api;\n                return {\n                    ...acc,\n                    [name]: {\n                        endpoint,\n                        ...(service ? { service } : undefined),\n                        ...(region ? { region } : undefined),\n                    },\n                };\n            }, {}),\n        };\n    }\n    // Predictions\n    if (predictions) {\n        // map VoiceId from speechGenerator defaults to voiceId\n        const { VoiceId: voiceId } = predictions?.convert?.speechGenerator?.defaults ?? {};\n        amplifyConfig.Predictions = voiceId\n            ? {\n                ...predictions,\n                convert: {\n                    ...predictions.convert,\n                    speechGenerator: {\n                        ...predictions.convert.speechGenerator,\n                        defaults: { voiceId },\n                    },\n                },\n            }\n            : predictions;\n    }\n    return amplifyConfig;\n};\nconst getRedirectUrl = (redirectStr) => redirectStr?.split(',') ?? [];\nconst getOAuthConfig = ({ domain, scope, redirectSignIn, redirectSignOut, responseType, }) => ({\n    domain,\n    scopes: scope,\n    redirectSignIn: getRedirectUrl(redirectSignIn),\n    redirectSignOut: getRedirectUrl(redirectSignOut),\n    responseType,\n});\nconst parseSocialProviders = (aws_cognito_social_providers) => {\n    return aws_cognito_social_providers.map((provider) => {\n        const updatedProvider = provider.toLowerCase();\n        return updatedProvider.charAt(0).toUpperCase() + updatedProvider.slice(1);\n    });\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport const ADD_OAUTH_LISTENER = Symbol('oauth-listener');\n", "// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}", "export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;", "import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;", "import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;", "import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  let v;\n  const arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nexport default parse;", "import { unsafeStringify } from './stringify.js';\nimport parse from './parse.js';\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  const bytes = [];\n\n  for (let i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport const DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport const URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function v35(name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    var _namespace;\n\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (((_namespace = namespace) === null || _namespace === void 0 ? void 0 : _namespace.length) !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    let bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (let i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return unsafeStringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}", "/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (let i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  const output = [];\n  const length32 = input.length * 32;\n  const hexTab = '0123456789abcdef';\n\n  for (let i = 0; i < length32; i += 8) {\n    const x = input[i >> 5] >>> i % 32 & 0xff;\n    const hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  let a = 1732584193;\n  let b = -271733879;\n  let c = -1732584194;\n  let d = 271733878;\n\n  for (let i = 0; i < x.length; i += 16) {\n    const olda = a;\n    const oldb = b;\n    const oldc = c;\n    const oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  const length8 = input.length * 8;\n  const output = new Uint32Array(getOutputLength(length8));\n\n  for (let i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  const lsw = (x & 0xffff) + (y & 0xffff);\n  const msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nexport default md5;", "import v35 from './v35.js';\nimport md5 from './md5.js';\nconst v3 = v35('v3', 0x30, md5);\nexport default v3;", "const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};", "// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  const K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  const H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (let i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  const l = bytes.length / 4 + 2;\n  const N = Math.ceil(l / 16);\n  const M = new Array(N);\n\n  for (let i = 0; i < N; ++i) {\n    const arr = new Uint32Array(16);\n\n    for (let j = 0; j < 16; ++j) {\n      arr[j] = bytes[i * 64 + j * 4] << 24 | bytes[i * 64 + j * 4 + 1] << 16 | bytes[i * 64 + j * 4 + 2] << 8 | bytes[i * 64 + j * 4 + 3];\n    }\n\n    M[i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (let i = 0; i < N; ++i) {\n    const W = new Uint32Array(80);\n\n    for (let t = 0; t < 16; ++t) {\n      W[t] = M[i][t];\n    }\n\n    for (let t = 16; t < 80; ++t) {\n      W[t] = ROTL(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);\n    }\n\n    let a = H[0];\n    let b = H[1];\n    let c = H[2];\n    let d = H[3];\n    let e = H[4];\n\n    for (let t = 0; t < 80; ++t) {\n      const s = Math.floor(t / 20);\n      const T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[t] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nexport default sha1;", "import v35 from './v35.js';\nimport sha1 from './sha1.js';\nconst v5 = v35('v5', 0x50, sha1);\nexport default v5;", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport function isAmplifyOutputs(config) {\n    // version format initially will be '1' but is expected to be something like x.y where x is major and y minor version\n    const { version } = config;\n    if (!version) {\n        return false;\n    }\n    return version.startsWith('1');\n}\nfunction parseStorage(amplifyOutputsStorageProperties) {\n    if (!amplifyOutputsStorageProperties) {\n        return undefined;\n    }\n    const { bucket_name, aws_region, buckets } = amplifyOutputsStorageProperties;\n    return {\n        S3: {\n            bucket: bucket_name,\n            region: aws_region,\n            buckets: buckets && createBucketInfoMap(buckets),\n        },\n    };\n}\nfunction parseAuth(amplifyOutputsAuthProperties) {\n    if (!amplifyOutputsAuthProperties) {\n        return undefined;\n    }\n    const { user_pool_id, user_pool_client_id, identity_pool_id, password_policy, mfa_configuration, mfa_methods, unauthenticated_identities_enabled, oauth, username_attributes, standard_required_attributes, } = amplifyOutputsAuthProperties;\n    const authConfig = {\n        Cognito: {\n            userPoolId: user_pool_id,\n            userPoolClientId: user_pool_client_id,\n        },\n    };\n    if (identity_pool_id) {\n        authConfig.Cognito = {\n            ...authConfig.Cognito,\n            identityPoolId: identity_pool_id,\n        };\n    }\n    if (password_policy) {\n        authConfig.Cognito.passwordFormat = {\n            requireLowercase: password_policy.require_lowercase,\n            requireNumbers: password_policy.require_numbers,\n            requireUppercase: password_policy.require_uppercase,\n            requireSpecialCharacters: password_policy.require_symbols,\n            minLength: password_policy.min_length ?? 6,\n        };\n    }\n    if (mfa_configuration) {\n        authConfig.Cognito.mfa = {\n            status: getMfaStatus(mfa_configuration),\n            smsEnabled: mfa_methods?.includes('SMS'),\n            totpEnabled: mfa_methods?.includes('TOTP'),\n        };\n    }\n    if (unauthenticated_identities_enabled) {\n        authConfig.Cognito.allowGuestAccess = unauthenticated_identities_enabled;\n    }\n    if (oauth) {\n        authConfig.Cognito.loginWith = {\n            oauth: {\n                domain: oauth.domain,\n                redirectSignIn: oauth.redirect_sign_in_uri,\n                redirectSignOut: oauth.redirect_sign_out_uri,\n                responseType: oauth.response_type === 'token' ? 'token' : 'code',\n                scopes: oauth.scopes,\n                providers: getOAuthProviders(oauth.identity_providers),\n            },\n        };\n    }\n    if (username_attributes) {\n        authConfig.Cognito.loginWith = {\n            ...authConfig.Cognito.loginWith,\n            email: username_attributes.includes('email'),\n            phone: username_attributes.includes('phone_number'),\n            // Signing in with a username is not currently supported in Gen2, this should always evaluate to false\n            username: username_attributes.includes('username'),\n        };\n    }\n    if (standard_required_attributes) {\n        authConfig.Cognito.userAttributes = standard_required_attributes.reduce((acc, curr) => ({ ...acc, [curr]: { required: true } }), {});\n    }\n    return authConfig;\n}\nexport function parseAnalytics(amplifyOutputsAnalyticsProperties) {\n    if (!amplifyOutputsAnalyticsProperties?.amazon_pinpoint) {\n        return undefined;\n    }\n    const { amazon_pinpoint } = amplifyOutputsAnalyticsProperties;\n    return {\n        Pinpoint: {\n            appId: amazon_pinpoint.app_id,\n            region: amazon_pinpoint.aws_region,\n        },\n    };\n}\nfunction parseGeo(amplifyOutputsAnalyticsProperties) {\n    if (!amplifyOutputsAnalyticsProperties) {\n        return undefined;\n    }\n    const { aws_region, geofence_collections, maps, search_indices } = amplifyOutputsAnalyticsProperties;\n    return {\n        LocationService: {\n            region: aws_region,\n            searchIndices: search_indices,\n            geofenceCollections: geofence_collections,\n            maps,\n        },\n    };\n}\nfunction parseData(amplifyOutputsDataProperties) {\n    if (!amplifyOutputsDataProperties) {\n        return undefined;\n    }\n    const { aws_region, default_authorization_type, url, api_key, model_introspection, } = amplifyOutputsDataProperties;\n    const GraphQL = {\n        endpoint: url,\n        defaultAuthMode: getGraphQLAuthMode(default_authorization_type),\n        region: aws_region,\n        apiKey: api_key,\n        modelIntrospection: model_introspection,\n    };\n    return {\n        GraphQL,\n    };\n}\nfunction parseNotifications(amplifyOutputsNotificationsProperties) {\n    if (!amplifyOutputsNotificationsProperties) {\n        return undefined;\n    }\n    const { aws_region, channels, amazon_pinpoint_app_id } = amplifyOutputsNotificationsProperties;\n    const hasInAppMessaging = channels.includes('IN_APP_MESSAGING');\n    const hasPushNotification = channels.includes('APNS') || channels.includes('FCM');\n    if (!(hasInAppMessaging || hasPushNotification)) {\n        return undefined;\n    }\n    // At this point, we know the Amplify outputs contains at least one supported channel\n    const notificationsConfig = {};\n    if (hasInAppMessaging) {\n        notificationsConfig.InAppMessaging = {\n            Pinpoint: {\n                appId: amazon_pinpoint_app_id,\n                region: aws_region,\n            },\n        };\n    }\n    if (hasPushNotification) {\n        notificationsConfig.PushNotification = {\n            Pinpoint: {\n                appId: amazon_pinpoint_app_id,\n                region: aws_region,\n            },\n        };\n    }\n    return notificationsConfig;\n}\nexport function parseAmplifyOutputs(amplifyOutputs) {\n    const resourcesConfig = {};\n    if (amplifyOutputs.storage) {\n        resourcesConfig.Storage = parseStorage(amplifyOutputs.storage);\n    }\n    if (amplifyOutputs.auth) {\n        resourcesConfig.Auth = parseAuth(amplifyOutputs.auth);\n    }\n    if (amplifyOutputs.analytics) {\n        resourcesConfig.Analytics = parseAnalytics(amplifyOutputs.analytics);\n    }\n    if (amplifyOutputs.geo) {\n        resourcesConfig.Geo = parseGeo(amplifyOutputs.geo);\n    }\n    if (amplifyOutputs.data) {\n        resourcesConfig.API = parseData(amplifyOutputs.data);\n    }\n    if (amplifyOutputs.notifications) {\n        resourcesConfig.Notifications = parseNotifications(amplifyOutputs.notifications);\n    }\n    return resourcesConfig;\n}\nconst authModeNames = {\n    AMAZON_COGNITO_USER_POOLS: 'userPool',\n    API_KEY: 'apiKey',\n    AWS_IAM: 'iam',\n    AWS_LAMBDA: 'lambda',\n    OPENID_CONNECT: 'oidc',\n};\nfunction getGraphQLAuthMode(authType) {\n    return authModeNames[authType];\n}\nconst providerNames = {\n    GOOGLE: 'Google',\n    LOGIN_WITH_AMAZON: 'Amazon',\n    FACEBOOK: 'Facebook',\n    SIGN_IN_WITH_APPLE: 'Apple',\n};\nfunction getOAuthProviders(providers = []) {\n    return providers.reduce((oAuthProviders, provider) => {\n        if (providerNames[provider] !== undefined) {\n            oAuthProviders.push(providerNames[provider]);\n        }\n        return oAuthProviders;\n    }, []);\n}\nfunction getMfaStatus(mfaConfiguration) {\n    if (mfaConfiguration === 'OPTIONAL')\n        return 'optional';\n    if (mfaConfiguration === 'REQUIRED')\n        return 'on';\n    return 'off';\n}\nfunction createBucketInfoMap(buckets) {\n    const mappedBuckets = {};\n    buckets.forEach(({ name, bucket_name: bucketName, aws_region: region }) => {\n        if (name in mappedBuckets) {\n            throw new Error(`Duplicate friendly name found: ${name}. Name must be unique.`);\n        }\n        mappedBuckets[name] = {\n            bucketName,\n            region,\n        };\n    });\n    return mappedBuckets;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { parseAWSExports } from '../parseAWSExports';\nimport { isAmplifyOutputs, parseAmplifyOutputs } from '../parseAmplifyOutputs';\n/**\n * Parses the variety of configuration shapes that Amplify can accept into a ResourcesConfig.\n *\n * @param amplifyConfig An Amplify configuration object conforming to one of the supported schemas.\n * @return A ResourcesConfig for the provided configuration object.\n */\nexport const parseAmplifyConfig = (amplifyConfig) => {\n    if (Object.keys(amplifyConfig).some(key => key.startsWith('aws_'))) {\n        return parseAWSExports(amplifyConfig);\n    }\n    else if (isAmplifyOutputs(amplifyConfig)) {\n        return parseAmplifyOutputs(amplifyConfig);\n    }\n    else {\n        return amplifyConfig;\n    }\n};\n", "export function isTokenExpired({ expiresAt, clockDrift, }) {\n    const currentTime = Date.now();\n    return currentTime + clockDrift > expiresAt;\n}\nexport class AuthClass {\n    /**\n     * Configure Auth category\n     *\n     * @internal\n     *\n     * @param authResourcesConfig - Resources configurations required by Auth providers.\n     * @param authOptions - Client options used by library\n     *\n     * @returns void\n     */\n    configure(authResourcesConfig, authOptions) {\n        this.authConfig = authResourcesConfig;\n        this.authOptions = authOptions;\n    }\n    /**\n     * Fetch the auth tokens, and the temporary AWS credentials and identity if they are configured. By default it\n     * does not refresh the auth tokens or credentials if they are loaded in storage already. You can force a refresh\n     * with `{ forceRefresh: true }` input.\n     *\n     * @param options - Options configuring the fetch behavior.\n     *\n     * @returns Promise of current auth session {@link AuthSession}.\n     */\n    async fetchAuthSession(options = {}) {\n        let credentialsAndIdentityId;\n        let userSub;\n        // Get tokens will throw if session cannot be refreshed (network or service error) or return null if not available\n        const tokens = await this.getTokens(options);\n        if (tokens) {\n            userSub = tokens.accessToken?.payload?.sub;\n            // getCredentialsAndIdentityId will throw if cannot get credentials (network or service error)\n            credentialsAndIdentityId =\n                await this.authOptions?.credentialsProvider?.getCredentialsAndIdentityId({\n                    authConfig: this.authConfig,\n                    tokens,\n                    authenticated: true,\n                    forceRefresh: options.forceRefresh,\n                });\n        }\n        else {\n            // getCredentialsAndIdentityId will throw if cannot get credentials (network or service error)\n            credentialsAndIdentityId =\n                await this.authOptions?.credentialsProvider?.getCredentialsAndIdentityId({\n                    authConfig: this.authConfig,\n                    authenticated: false,\n                    forceRefresh: options.forceRefresh,\n                });\n        }\n        return {\n            tokens,\n            credentials: credentialsAndIdentityId?.credentials,\n            identityId: credentialsAndIdentityId?.identityId,\n            userSub,\n        };\n    }\n    async clearCredentials() {\n        await this.authOptions?.credentialsProvider?.clearCredentialsAndIdentityId();\n    }\n    async getTokens(options) {\n        return ((await this.authOptions?.tokenProvider?.getTokens(options)) ?? undefined);\n    }\n}\n", "/**\r\n * @internal\r\n */\r\nexport const BLOCK_SIZE: number = 64;\r\n\r\n/**\r\n * @internal\r\n */\r\nexport const DIGEST_LENGTH: number = 32;\r\n\r\n/**\r\n * @internal\r\n */\r\nexport const KEY = new Uint32Array([\r\n  0x428a2f98,\r\n  0x71374491,\r\n  0xb5c0fbcf,\r\n  0xe9b5dba5,\r\n  0x3956c25b,\r\n  0x59f111f1,\r\n  0x923f82a4,\r\n  0xab1c5ed5,\r\n  0xd807aa98,\r\n  0x12835b01,\r\n  0x243185be,\r\n  0x550c7dc3,\r\n  0x72be5d74,\r\n  0x80deb1fe,\r\n  0x9bdc06a7,\r\n  0xc19bf174,\r\n  0xe49b69c1,\r\n  0xefbe4786,\r\n  0x0fc19dc6,\r\n  0x240ca1cc,\r\n  0x2de92c6f,\r\n  0x4a7484aa,\r\n  0x5cb0a9dc,\r\n  0x76f988da,\r\n  0x983e5152,\r\n  0xa831c66d,\r\n  0xb00327c8,\r\n  0xbf597fc7,\r\n  0xc6e00bf3,\r\n  0xd5a79147,\r\n  0x06ca6351,\r\n  0x14292967,\r\n  0x27b70a85,\r\n  0x2e1b2138,\r\n  0x4d2c6dfc,\r\n  0x53380d13,\r\n  0x650a7354,\r\n  0x766a0abb,\r\n  0x81c2c92e,\r\n  0x92722c85,\r\n  0xa2bfe8a1,\r\n  0xa81a664b,\r\n  0xc24b8b70,\r\n  0xc76c51a3,\r\n  0xd192e819,\r\n  0xd6990624,\r\n  0xf40e3585,\r\n  0x106aa070,\r\n  0x19a4c116,\r\n  0x1e376c08,\r\n  0x2748774c,\r\n  0x34b0bcb5,\r\n  0x391c0cb3,\r\n  0x4ed8aa4a,\r\n  0x5b9cca4f,\r\n  0x682e6ff3,\r\n  0x748f82ee,\r\n  0x78a5636f,\r\n  0x84c87814,\r\n  0x8cc70208,\r\n  0x90befffa,\r\n  0xa4506ceb,\r\n  0xbef9a3f7,\r\n  0xc67178f2\r\n]);\r\n\r\n/**\r\n * @internal\r\n */\r\nexport const INIT = [\r\n  0x6a09e667,\r\n  0xbb67ae85,\r\n  0x3c6ef372,\r\n  0xa54ff53a,\r\n  0x510e527f,\r\n  0x9b05688c,\r\n  0x1f83d9ab,\r\n  0x5be0cd19\r\n];\r\n\r\n/**\r\n * @internal\r\n */\r\nexport const MAX_HASHABLE_LENGTH = 2 ** 53 - 1;\r\n", "import {\r\n  BLOCK_SIZE,\r\n  DIGEST_LENGTH,\r\n  INIT,\r\n  KEY,\r\n  MAX_HASHABLE_LENGTH\r\n} from \"./constants\";\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class RawSha256 {\r\n  private state: Int32Array = Int32Array.from(INIT);\r\n  private temp: Int32Array = new Int32Array(64);\r\n  private buffer: Uint8Array = new Uint8Array(64);\r\n  private bufferLength: number = 0;\r\n  private bytesHashed: number = 0;\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  finished: boolean = false;\r\n\r\n  update(data: Uint8Array): void {\r\n    if (this.finished) {\r\n      throw new Error(\"Attempted to update an already finished hash.\");\r\n    }\r\n\r\n    let position = 0;\r\n    let { byteLength } = data;\r\n    this.bytesHashed += byteLength;\r\n\r\n    if (this.bytesHashed * 8 > MAX_HASHABLE_LENGTH) {\r\n      throw new Error(\"Cannot hash more than 2^53 - 1 bits\");\r\n    }\r\n\r\n    while (byteLength > 0) {\r\n      this.buffer[this.bufferLength++] = data[position++];\r\n      byteLength--;\r\n\r\n      if (this.bufferLength === BLOCK_SIZE) {\r\n        this.hashBuffer();\r\n        this.bufferLength = 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  digest(): Uint8Array {\r\n    if (!this.finished) {\r\n      const bitsHashed = this.bytesHashed * 8;\r\n      const bufferView = new DataView(\r\n        this.buffer.buffer,\r\n        this.buffer.byteOffset,\r\n        this.buffer.byteLength\r\n      );\r\n\r\n      const undecoratedLength = this.bufferLength;\r\n      bufferView.setUint8(this.bufferLength++, 0x80);\r\n\r\n      // Ensure the final block has enough room for the hashed length\r\n      if (undecoratedLength % BLOCK_SIZE >= BLOCK_SIZE - 8) {\r\n        for (let i = this.bufferLength; i < BLOCK_SIZE; i++) {\r\n          bufferView.setUint8(i, 0);\r\n        }\r\n        this.hashBuffer();\r\n        this.bufferLength = 0;\r\n      }\r\n\r\n      for (let i = this.bufferLength; i < BLOCK_SIZE - 8; i++) {\r\n        bufferView.setUint8(i, 0);\r\n      }\r\n      bufferView.setUint32(\r\n        BLOCK_SIZE - 8,\r\n        Math.floor(bitsHashed / 0x100000000),\r\n        true\r\n      );\r\n      bufferView.setUint32(BLOCK_SIZE - 4, bitsHashed);\r\n\r\n      this.hashBuffer();\r\n\r\n      this.finished = true;\r\n    }\r\n\r\n    // The value in state is little-endian rather than big-endian, so flip\r\n    // each word into a new Uint8Array\r\n    const out = new Uint8Array(DIGEST_LENGTH);\r\n    for (let i = 0; i < 8; i++) {\r\n      out[i * 4] = (this.state[i] >>> 24) & 0xff;\r\n      out[i * 4 + 1] = (this.state[i] >>> 16) & 0xff;\r\n      out[i * 4 + 2] = (this.state[i] >>> 8) & 0xff;\r\n      out[i * 4 + 3] = (this.state[i] >>> 0) & 0xff;\r\n    }\r\n\r\n    return out;\r\n  }\r\n\r\n  private hashBuffer(): void {\r\n    const { buffer, state } = this;\r\n\r\n    let state0 = state[0],\r\n      state1 = state[1],\r\n      state2 = state[2],\r\n      state3 = state[3],\r\n      state4 = state[4],\r\n      state5 = state[5],\r\n      state6 = state[6],\r\n      state7 = state[7];\r\n\r\n    for (let i = 0; i < BLOCK_SIZE; i++) {\r\n      if (i < 16) {\r\n        this.temp[i] =\r\n          ((buffer[i * 4] & 0xff) << 24) |\r\n          ((buffer[i * 4 + 1] & 0xff) << 16) |\r\n          ((buffer[i * 4 + 2] & 0xff) << 8) |\r\n          (buffer[i * 4 + 3] & 0xff);\r\n      } else {\r\n        let u = this.temp[i - 2];\r\n        const t1 =\r\n          ((u >>> 17) | (u << 15)) ^ ((u >>> 19) | (u << 13)) ^ (u >>> 10);\r\n\r\n        u = this.temp[i - 15];\r\n        const t2 =\r\n          ((u >>> 7) | (u << 25)) ^ ((u >>> 18) | (u << 14)) ^ (u >>> 3);\r\n\r\n        this.temp[i] =\r\n          ((t1 + this.temp[i - 7]) | 0) + ((t2 + this.temp[i - 16]) | 0);\r\n      }\r\n\r\n      const t1 =\r\n        ((((((state4 >>> 6) | (state4 << 26)) ^\r\n          ((state4 >>> 11) | (state4 << 21)) ^\r\n          ((state4 >>> 25) | (state4 << 7))) +\r\n          ((state4 & state5) ^ (~state4 & state6))) |\r\n          0) +\r\n          ((state7 + ((KEY[i] + this.temp[i]) | 0)) | 0)) |\r\n        0;\r\n\r\n      const t2 =\r\n        ((((state0 >>> 2) | (state0 << 30)) ^\r\n          ((state0 >>> 13) | (state0 << 19)) ^\r\n          ((state0 >>> 22) | (state0 << 10))) +\r\n          ((state0 & state1) ^ (state0 & state2) ^ (state1 & state2))) |\r\n        0;\r\n\r\n      state7 = state6;\r\n      state6 = state5;\r\n      state5 = state4;\r\n      state4 = (state3 + t1) | 0;\r\n      state3 = state2;\r\n      state2 = state1;\r\n      state1 = state0;\r\n      state0 = (t1 + t2) | 0;\r\n    }\r\n\r\n    state[0] += state0;\r\n    state[1] += state1;\r\n    state[2] += state2;\r\n    state[3] += state3;\r\n    state[4] += state4;\r\n    state[5] += state5;\r\n    state[6] += state6;\r\n    state[7] += state7;\r\n  }\r\n}\r\n", "export const fromUtf8 = (input) => new TextEncoder().encode(input);\r\n", "// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\r\n// SPDX-License-Identifier: Apache-2.0\r\n\r\nimport { SourceData } from \"@aws-sdk/types\";\r\nimport { fromUtf8 as fromUtf8Browser } from \"@smithy/util-utf8\";\r\n\r\n// Quick polyfill\r\nconst fromUtf8 =\r\n  typeof Buffer !== \"undefined\" && Buffer.from\r\n    ? (input: string) => Buffer.from(input, \"utf8\")\r\n    : fromUtf8Browser;\r\n\r\nexport function convertToBuffer(data: SourceData): Uint8Array {\r\n  // Already a Uint8, do nothing\r\n  if (data instanceof Uint8Array) return data;\r\n\r\n  if (typeof data === \"string\") {\r\n    return fromUtf8(data);\r\n  }\r\n\r\n  if (ArrayBuffer.isView(data)) {\r\n    return new Uint8Array(\r\n      data.buffer,\r\n      data.byteOffset,\r\n      data.byteLength / Uint8Array.BYTES_PER_ELEMENT\r\n    );\r\n  }\r\n\r\n  return new Uint8Array(data);\r\n}\r\n", "// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\r\n// SPDX-License-Identifier: Apache-2.0\r\n\r\nimport { SourceData } from \"@aws-sdk/types\";\r\n\r\nexport function isEmptyData(data: SourceData): boolean {\r\n  if (typeof data === \"string\") {\r\n    return data.length === 0;\r\n  }\r\n\r\n  return data.byteLength === 0;\r\n}\r\n", "import { BLOCK_SIZE } from \"./constants\";\r\nimport { RawSha256 } from \"./RawSha256\";\r\nimport { Checksum, SourceData } from \"@aws-sdk/types\";\r\nimport { isEmptyData, convertToBuffer } from \"@aws-crypto/util\";\r\n\r\nexport class Sha256 implements Checksum {\r\n  private readonly secret?: SourceData;\r\n  private hash: RawSha256;\r\n  private outer?: RawSha256;\r\n  private error: any;\r\n\r\n  constructor(secret?: SourceData) {\r\n    this.secret = secret;\r\n    this.hash = new RawSha256();\r\n    this.reset();\r\n  }\r\n\r\n  update(toHash: SourceData): void {\r\n    if (isEmptyData(toHash) || this.error) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      this.hash.update(convertToBuffer(toHash));\r\n    } catch (e) {\r\n      this.error = e;\r\n    }\r\n  }\r\n\r\n  /* This synchronous method keeps compatibility\r\n   * with the v2 aws-sdk.\r\n   */\r\n  digestSync(): Uint8Array {\r\n    if (this.error) {\r\n      throw this.error;\r\n    }\r\n\r\n    if (this.outer) {\r\n      if (!this.outer.finished) {\r\n        this.outer.update(this.hash.digest());\r\n      }\r\n\r\n      return this.outer.digest();\r\n    }\r\n\r\n    return this.hash.digest();\r\n  }\r\n\r\n  /* The underlying digest method here is synchronous.\r\n   * To keep the same interface with the other hash functions\r\n   * the default is to expose this as an async method.\r\n   * However, it can sometimes be useful to have a sync method.\r\n   */\r\n  async digest(): Promise<Uint8Array> {\r\n    return this.digestSync();\r\n  }\r\n\r\n  reset(): void {\r\n    this.hash = new RawSha256();\r\n    if (this.secret) {\r\n      this.outer = new RawSha256();\r\n      const inner = bufferFromSecret(this.secret);\r\n      const outer = new Uint8Array(BLOCK_SIZE);\r\n      outer.set(inner);\r\n\r\n      for (let i = 0; i < BLOCK_SIZE; i++) {\r\n        inner[i] ^= 0x36;\r\n        outer[i] ^= 0x5c;\r\n      }\r\n\r\n      this.hash.update(inner);\r\n      this.outer.update(outer);\r\n\r\n      // overwrite the copied key in memory\r\n      for (let i = 0; i < inner.byteLength; i++) {\r\n        inner[i] = 0;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction bufferFromSecret(secret: SourceData): Uint8Array {\r\n  let input = convertToBuffer(secret);\r\n\r\n  if (input.byteLength > BLOCK_SIZE) {\r\n    const bufferHash = new RawSha256();\r\n    bufferHash.update(input);\r\n    input = bufferHash.digest();\r\n  }\r\n\r\n  const buffer = new Uint8Array(BLOCK_SIZE);\r\n  buffer.set(input);\r\n  return buffer;\r\n}\r\n", "const SHORT_TO_HEX = {};\r\nconst HEX_TO_SHORT = {};\r\nfor (let i = 0; i < 256; i++) {\r\n    let encodedByte = i.toString(16).toLowerCase();\r\n    if (encodedByte.length === 1) {\r\n        encodedByte = `0${encodedByte}`;\r\n    }\r\n    SHORT_TO_HEX[i] = encodedByte;\r\n    HEX_TO_SHORT[encodedByte] = i;\r\n}\r\nexport function fromHex(encoded) {\r\n    if (encoded.length % 2 !== 0) {\r\n        throw new Error(\"Hex encoded strings must have an even number length\");\r\n    }\r\n    const out = new Uint8Array(encoded.length / 2);\r\n    for (let i = 0; i < encoded.length; i += 2) {\r\n        const encodedByte = encoded.slice(i, i + 2).toLowerCase();\r\n        if (encodedByte in HEX_TO_SHORT) {\r\n            out[i / 2] = HEX_TO_SHORT[encodedByte];\r\n        }\r\n        else {\r\n            throw new Error(`Cannot decode unrecognized sequence ${encodedByte} as hexadecimal`);\r\n        }\r\n    }\r\n    return out;\r\n}\r\nexport function toHex(bytes) {\r\n    let out = \"\";\r\n    for (let i = 0; i < bytes.byteLength; i++) {\r\n        out += SHORT_TO_HEX[bytes[i]];\r\n    }\r\n    return out;\r\n}\r\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport var Framework;\n(function (Framework) {\n    // < 100 - Web frameworks\n    Framework[\"WebUnknown\"] = \"0\";\n    Framework[\"React\"] = \"1\";\n    Framework[\"NextJs\"] = \"2\";\n    Framework[\"Angular\"] = \"3\";\n    Framework[\"VueJs\"] = \"4\";\n    Framework[\"Nuxt\"] = \"5\";\n    Framework[\"Svelte\"] = \"6\";\n    // 100s - Server side frameworks\n    Framework[\"ServerSideUnknown\"] = \"100\";\n    Framework[\"ReactSSR\"] = \"101\";\n    Framework[\"NextJsSSR\"] = \"102\";\n    Framework[\"AngularSSR\"] = \"103\";\n    Framework[\"VueJsSSR\"] = \"104\";\n    Framework[\"NuxtSSR\"] = \"105\";\n    Framework[\"SvelteSSR\"] = \"106\";\n    // 200s - Mobile framework\n    Framework[\"ReactNative\"] = \"201\";\n    Framework[\"Expo\"] = \"202\";\n})(Framework || (Framework = {}));\nexport var Category;\n(function (Category) {\n    Category[\"AI\"] = \"ai\";\n    Category[\"API\"] = \"api\";\n    Category[\"Auth\"] = \"auth\";\n    Category[\"Analytics\"] = \"analytics\";\n    Category[\"DataStore\"] = \"datastore\";\n    Category[\"Geo\"] = \"geo\";\n    Category[\"InAppMessaging\"] = \"inappmessaging\";\n    Category[\"Interactions\"] = \"interactions\";\n    Category[\"Predictions\"] = \"predictions\";\n    Category[\"PubSub\"] = \"pubsub\";\n    Category[\"PushNotification\"] = \"pushnotification\";\n    Category[\"Storage\"] = \"storage\";\n})(Category || (Category = {}));\nexport var AiAction;\n(function (AiAction) {\n    AiAction[\"CreateConversation\"] = \"1\";\n    AiAction[\"GetConversation\"] = \"2\";\n    AiAction[\"ListConversations\"] = \"3\";\n    AiAction[\"DeleteConversation\"] = \"4\";\n    AiAction[\"SendMessage\"] = \"5\";\n    AiAction[\"ListMessages\"] = \"6\";\n    AiAction[\"OnMessage\"] = \"7\";\n    AiAction[\"Generation\"] = \"8\";\n    AiAction[\"UpdateConversation\"] = \"9\";\n})(AiAction || (AiAction = {}));\nexport var AnalyticsAction;\n(function (AnalyticsAction) {\n    AnalyticsAction[\"Record\"] = \"1\";\n    AnalyticsAction[\"IdentifyUser\"] = \"2\";\n})(AnalyticsAction || (AnalyticsAction = {}));\nexport var ApiAction;\n(function (ApiAction) {\n    ApiAction[\"GraphQl\"] = \"1\";\n    ApiAction[\"Get\"] = \"2\";\n    ApiAction[\"Post\"] = \"3\";\n    ApiAction[\"Put\"] = \"4\";\n    ApiAction[\"Patch\"] = \"5\";\n    ApiAction[\"Del\"] = \"6\";\n    ApiAction[\"Head\"] = \"7\";\n})(ApiAction || (ApiAction = {}));\nexport var AuthAction;\n(function (AuthAction) {\n    AuthAction[\"SignUp\"] = \"1\";\n    AuthAction[\"ConfirmSignUp\"] = \"2\";\n    AuthAction[\"ResendSignUpCode\"] = \"3\";\n    AuthAction[\"SignIn\"] = \"4\";\n    AuthAction[\"FetchMFAPreference\"] = \"6\";\n    AuthAction[\"UpdateMFAPreference\"] = \"7\";\n    AuthAction[\"SetUpTOTP\"] = \"10\";\n    AuthAction[\"VerifyTOTPSetup\"] = \"11\";\n    AuthAction[\"ConfirmSignIn\"] = \"12\";\n    AuthAction[\"DeleteUserAttributes\"] = \"15\";\n    AuthAction[\"DeleteUser\"] = \"16\";\n    AuthAction[\"UpdateUserAttributes\"] = \"17\";\n    AuthAction[\"FetchUserAttributes\"] = \"18\";\n    AuthAction[\"ConfirmUserAttribute\"] = \"22\";\n    AuthAction[\"SignOut\"] = \"26\";\n    AuthAction[\"UpdatePassword\"] = \"27\";\n    AuthAction[\"ResetPassword\"] = \"28\";\n    AuthAction[\"ConfirmResetPassword\"] = \"29\";\n    AuthAction[\"FederatedSignIn\"] = \"30\";\n    AuthAction[\"RememberDevice\"] = \"32\";\n    AuthAction[\"ForgetDevice\"] = \"33\";\n    AuthAction[\"FetchDevices\"] = \"34\";\n    AuthAction[\"SendUserAttributeVerificationCode\"] = \"35\";\n    AuthAction[\"SignInWithRedirect\"] = \"36\";\n})(AuthAction || (AuthAction = {}));\nexport var DataStoreAction;\n(function (DataStoreAction) {\n    DataStoreAction[\"Subscribe\"] = \"1\";\n    DataStoreAction[\"GraphQl\"] = \"2\";\n})(DataStoreAction || (DataStoreAction = {}));\nexport var GeoAction;\n(function (GeoAction) {\n    GeoAction[\"SearchByText\"] = \"0\";\n    GeoAction[\"SearchByCoordinates\"] = \"1\";\n    GeoAction[\"SearchForSuggestions\"] = \"2\";\n    GeoAction[\"SearchByPlaceId\"] = \"3\";\n    GeoAction[\"SaveGeofences\"] = \"4\";\n    GeoAction[\"GetGeofence\"] = \"5\";\n    GeoAction[\"ListGeofences\"] = \"6\";\n    GeoAction[\"DeleteGeofences\"] = \"7\";\n})(GeoAction || (GeoAction = {}));\nexport var InAppMessagingAction;\n(function (InAppMessagingAction) {\n    InAppMessagingAction[\"SyncMessages\"] = \"1\";\n    InAppMessagingAction[\"IdentifyUser\"] = \"2\";\n    InAppMessagingAction[\"NotifyMessageInteraction\"] = \"3\";\n})(InAppMessagingAction || (InAppMessagingAction = {}));\nexport var InteractionsAction;\n(function (InteractionsAction) {\n    InteractionsAction[\"None\"] = \"0\";\n})(InteractionsAction || (InteractionsAction = {}));\nexport var PredictionsAction;\n(function (PredictionsAction) {\n    PredictionsAction[\"Convert\"] = \"1\";\n    PredictionsAction[\"Identify\"] = \"2\";\n    PredictionsAction[\"Interpret\"] = \"3\";\n})(PredictionsAction || (PredictionsAction = {}));\nexport var PubSubAction;\n(function (PubSubAction) {\n    PubSubAction[\"Subscribe\"] = \"1\";\n})(PubSubAction || (PubSubAction = {}));\nexport var PushNotificationAction;\n(function (PushNotificationAction) {\n    PushNotificationAction[\"InitializePushNotifications\"] = \"1\";\n    PushNotificationAction[\"IdentifyUser\"] = \"2\";\n})(PushNotificationAction || (PushNotificationAction = {}));\nexport var StorageAction;\n(function (StorageAction) {\n    StorageAction[\"UploadData\"] = \"1\";\n    StorageAction[\"DownloadData\"] = \"2\";\n    StorageAction[\"List\"] = \"3\";\n    StorageAction[\"Copy\"] = \"4\";\n    StorageAction[\"Remove\"] = \"5\";\n    StorageAction[\"GetProperties\"] = \"6\";\n    StorageAction[\"GetUrl\"] = \"7\";\n})(StorageAction || (StorageAction = {}));\n", "// generated by genversion\nexport const version = '6.6.5';\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport const globalExists = () => {\n    return typeof global !== 'undefined';\n};\nexport const globalThisExists = () => {\n    return typeof globalThis !== 'undefined';\n};\nexport const windowExists = () => {\n    return typeof window !== 'undefined';\n};\nexport const documentExists = () => {\n    return typeof document !== 'undefined';\n};\nexport const processExists = () => {\n    return typeof process !== 'undefined';\n};\nexport const keyPrefixMatch = (object, prefix) => {\n    return !!Object.keys(object).find(key => key.startsWith(prefix));\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { documentExists, processExists } from './helpers';\n// Tested with react 18.2 - built using Vite\nexport function reactWebDetect() {\n    const elementKeyPrefixedWithReact = (key) => {\n        return key.startsWith('_react') || key.startsWith('__react');\n    };\n    const elementIsReactEnabled = (element) => {\n        return Object.keys(element).find(elementKeyPrefixedWithReact);\n    };\n    const allElementsWithId = () => Array.from(document.querySelectorAll('[id]'));\n    return documentExists() && allElementsWithId().some(elementIsReactEnabled);\n}\nexport function reactSSRDetect() {\n    return (processExists() &&\n        typeof process.env !== 'undefined' &&\n        !!Object.keys(process.env).find(key => key.includes('react')));\n}\n// use the some\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { globalExists, keyPrefixMatch, windowExists } from './helpers';\n// Tested with vue 3.3.2\nexport function vueWebDetect() {\n    return windowExists() && keyPrefixMatch(window, '__VUE');\n}\nexport function vueSSRDetect() {\n    return globalExists() && keyPrefixMatch(global, '__VUE');\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { keyPrefixMatch, processExists, windowExists } from './helpers';\n// Tested with svelte 3.59\nexport function svelteWebDetect() {\n    return windowExists() && keyPrefixMatch(window, '__SVELTE');\n}\nexport function svelteSSRDetect() {\n    return (processExists() &&\n        typeof process.env !== 'undefined' &&\n        !!Object.keys(process.env).find(key => key.includes('svelte')));\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { globalExists, keyPrefixMatch, windowExists } from './helpers';\n// Tested with next 13.4 / react 18.2\nexport function nextWebDetect() {\n    return (windowExists() &&\n        window.next &&\n        typeof window.next === 'object');\n}\nexport function nextSSRDetect() {\n    return (globalExists() &&\n        (keyPrefixMatch(global, '__next') || keyPrefixMatch(global, '__NEXT')));\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { globalExists, windowExists } from './helpers';\n// Tested with nuxt 2.15 / vue 2.7\nexport function nuxtWebDetect() {\n    return (windowExists() &&\n        (window.__NUXT__ !== undefined ||\n            window.$nuxt !== undefined));\n}\nexport function nuxtSSRDetect() {\n    return (globalExists() && typeof global.__NUXT_PATHS__ !== 'undefined');\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { documentExists, processExists, windowExists } from './helpers';\n// Tested with @angular/core 16.0.0\nexport function angularWebDetect() {\n    const angularVersionSetInDocument = Boolean(documentExists() && document.querySelector('[ng-version]'));\n    const angularContentSetInWindow = Boolean(windowExists() && typeof window.ng !== 'undefined');\n    return angularVersionSetInDocument || angularContentSetInWindow;\n}\nexport function angularSSRDetect() {\n    return ((processExists() &&\n        typeof process.env === 'object' &&\n        process.env.npm_lifecycle_script?.startsWith('ng ')) ||\n        false);\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Tested with react-native 0.17.7\nexport function reactNativeDetect() {\n    return (typeof navigator !== 'undefined' &&\n        typeof navigator.product !== 'undefined' &&\n        navigator.product === 'ReactNative');\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { globalExists } from './helpers';\n// Tested with expo 48 / react-native 0.71.3\nexport function expoDetect() {\n    return globalExists() && typeof global.expo !== 'undefined';\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { windowExists } from './helpers';\nexport function webDetect() {\n    return windowExists();\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Framework } from '../types';\nimport { reactSSRDetect, reactWebDetect } from './React';\nimport { vueSSRDetect, vueWebDetect } from './Vue';\nimport { svelteSSRDetect, svelteWebDetect } from './Svelte';\nimport { nextSSRDetect, nextWebDetect } from './Next';\nimport { nuxtSSRDetect, nuxtWebDetect } from './Nuxt';\nimport { angularSSRDetect, angularWebDetect } from './Angular';\nimport { reactNativeDetect } from './ReactNative';\nimport { expoDetect } from './Expo';\nimport { webDetect } from './Web';\n// These are in the order of detection where when both are detectable, the early Framework will be reported\nconst detectionMap = [\n    // First, detect mobile\n    { platform: Framework.Expo, detectionMethod: expoDetect },\n    { platform: Framework.ReactNative, detectionMethod: reactNativeDetect },\n    // Next, detect web frameworks\n    { platform: Framework.NextJs, detectionMethod: nextWebDetect },\n    { platform: Framework.Nuxt, detectionMethod: nuxtWebDetect },\n    { platform: Framework.Angular, detectionMethod: angularWebDetect },\n    { platform: Framework.React, detectionMethod: reactWebDetect },\n    { platform: Framework.VueJs, detectionMethod: vueWebDetect },\n    { platform: Framework.Svelte, detectionMethod: svelteWebDetect },\n    { platform: Framework.WebUnknown, detectionMethod: webDetect },\n    // Last, detect ssr frameworks\n    { platform: Framework.NextJsSSR, detectionMethod: nextSSRDetect },\n    { platform: Framework.NuxtSSR, detectionMethod: nuxtSSRDetect },\n    { platform: Framework.ReactSSR, detectionMethod: reactSSRDetect },\n    { platform: Framework.VueJsSSR, detectionMethod: vueSSRDetect },\n    { platform: Framework.AngularSSR, detectionMethod: angularSSRDetect },\n    { platform: Framework.SvelteSSR, detectionMethod: svelteSSRDetect },\n];\nexport function detect() {\n    return (detectionMap.find(detectionEntry => detectionEntry.detectionMethod())\n        ?.platform || Framework.ServerSideUnknown);\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Framework } from './types';\nimport { detect } from './detection';\n// We want to cache detection since the framework won't change\nlet frameworkCache;\nexport const frameworkChangeObservers = [];\n// Setup the detection reset tracking / timeout delays\nlet resetTriggered = false;\nconst SSR_RESET_TIMEOUT = 10; // ms\nconst WEB_RESET_TIMEOUT = 10; // ms\nconst PRIME_FRAMEWORK_DELAY = 1000; // ms\nexport const detectFramework = () => {\n    if (!frameworkCache) {\n        frameworkCache = detect();\n        if (resetTriggered) {\n            // The final run of detectFramework:\n            // Starting from this point, the `frameworkCache` becomes \"final\".\n            // So we don't need to notify the observers again so the observer\n            // can be removed after the final notice.\n            while (frameworkChangeObservers.length) {\n                frameworkChangeObservers.pop()?.();\n            }\n        }\n        else {\n            // The first run of detectFramework:\n            // Every time we update the cache, call each observer function\n            frameworkChangeObservers.forEach(fcn => {\n                fcn();\n            });\n        }\n        // Retry once for either Unknown type after a delay (explained below)\n        resetTimeout(Framework.ServerSideUnknown, SSR_RESET_TIMEOUT);\n        resetTimeout(Framework.WebUnknown, WEB_RESET_TIMEOUT);\n    }\n    return frameworkCache;\n};\n/**\n * @internal Setup observer callback that will be called everytime the framework changes\n */\nexport const observeFrameworkChanges = (fcn) => {\n    // When the `frameworkCache` won't be updated again, we ignore all incoming\n    // observers.\n    if (resetTriggered) {\n        return;\n    }\n    frameworkChangeObservers.push(fcn);\n};\nexport function clearCache() {\n    frameworkCache = undefined;\n}\n// For a framework type and a delay amount, setup the event to re-detect\n//   During the runtime boot, it is possible that framework detection will\n//   be triggered before the framework has made modifications to the\n//   global/window/etc needed for detection. When no framework is detected\n//   we will reset and try again to ensure we don't use a cached\n//   non-framework detection result for all requests.\nfunction resetTimeout(framework, delay) {\n    if (frameworkCache === framework && !resetTriggered) {\n        setTimeout(() => {\n            clearCache();\n            resetTriggered = true;\n            setTimeout(detectFramework, PRIME_FRAMEWORK_DELAY);\n        }, delay);\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Maintains custom user-agent state set by external consumers.\nconst customUserAgentState = {};\n/**\n * Sets custom user agent state which will be appended to applicable requests. Returns a function that can be used to\n * clean up any custom state set with this API.\n *\n * @note\n * This API operates globally. Calling this API multiple times will result in the most recently set values for a\n * particular API being used.\n *\n * @note\n * This utility IS NOT compatible with SSR.\n *\n * @param input - SetCustomUserAgentInput that defines custom state to apply to the specified APIs.\n */\nexport const setCustomUserAgent = (input) => {\n    // Save custom user-agent state & increment reference counter\n    // TODO Remove `any` when we upgrade to TypeScript 5.2, see: https://github.com/microsoft/TypeScript/issues/44373\n    customUserAgentState[input.category] = input.apis.reduce((acc, api) => ({\n        ...acc,\n        [api]: {\n            refCount: acc[api]?.refCount ? acc[api].refCount + 1 : 1,\n            additionalDetails: input.additionalDetails,\n        },\n    }), customUserAgentState[input.category] ?? {});\n    // Callback that cleans up state for APIs recorded by this call\n    let cleanUpCallbackCalled = false;\n    const cleanUpCallback = () => {\n        // Only allow the cleanup callback to be called once\n        if (cleanUpCallbackCalled) {\n            return;\n        }\n        cleanUpCallbackCalled = true;\n        input.apis.forEach(api => {\n            const apiRefCount = customUserAgentState[input.category][api].refCount;\n            if (apiRefCount > 1) {\n                customUserAgentState[input.category][api].refCount = apiRefCount - 1;\n            }\n            else {\n                delete customUserAgentState[input.category][api];\n                // Clean up category if no more APIs set\n                if (!Object.keys(customUserAgentState[input.category]).length) {\n                    delete customUserAgentState[input.category];\n                }\n            }\n        });\n    };\n    return cleanUpCallback;\n};\nexport const getCustomUserAgent = (category, api) => customUserAgentState[category]?.[api]?.additionalDetails;\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Framework } from './types';\nimport { version } from './version';\nimport { detectFramework, observeFrameworkChanges } from './detectFramework';\nimport { getCustomUserAgent } from './customUserAgent';\nconst BASE_USER_AGENT = `aws-amplify`;\n/** Sanitize Amplify version string be removing special character + and character post the special character  */\nexport const sanitizeAmplifyVersion = (amplifyVersion) => amplifyVersion.replace(/\\+.*/, '');\nclass PlatformBuilder {\n    constructor() {\n        this.userAgent = `${BASE_USER_AGENT}/${sanitizeAmplifyVersion(version)}`;\n    }\n    get framework() {\n        return detectFramework();\n    }\n    get isReactNative() {\n        return (this.framework === Framework.ReactNative ||\n            this.framework === Framework.Expo);\n    }\n    observeFrameworkChanges(fcn) {\n        observeFrameworkChanges(fcn);\n    }\n}\nexport const Platform = new PlatformBuilder();\nexport const getAmplifyUserAgentObject = ({ category, action, } = {}) => {\n    const userAgent = [\n        [BASE_USER_AGENT, sanitizeAmplifyVersion(version)],\n    ];\n    if (category) {\n        userAgent.push([category, action]);\n    }\n    userAgent.push(['framework', detectFramework()]);\n    if (category && action) {\n        const customState = getCustomUserAgent(category, action);\n        if (customState) {\n            customState.forEach(state => {\n                userAgent.push(state);\n            });\n        }\n    }\n    return userAgent;\n};\nexport const getAmplifyUserAgent = (customUserAgentDetails) => {\n    const userAgent = getAmplifyUserAgentObject(customUserAgentDetails);\n    const userAgentString = userAgent\n        .map(([agentKey, agentValue]) => agentKey && agentValue ? `${agentKey}/${agentValue}` : agentKey)\n        .join(' ');\n    return userAgentString;\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * All possible states a `BackgroundProcessManager` instance can be in.\n */\nexport var BackgroundProcessManagerState;\n(function (BackgroundProcessManagerState) {\n    /**\n     * Accepting new jobs.\n     */\n    BackgroundProcessManagerState[\"Open\"] = \"Open\";\n    /**\n     * Not accepting new jobs. Waiting for submitted jobs to complete.\n     */\n    BackgroundProcessManagerState[\"Closing\"] = \"Closing\";\n    /**\n     * Not accepting new jobs. All submitted jobs are complete.\n     */\n    BackgroundProcessManagerState[\"Closed\"] = \"Closed\";\n})(BackgroundProcessManagerState || (BackgroundProcessManagerState = {}));\n", "/**\r\n * Returns true if the object is a function.\r\n * @param value The value to check\r\n */\r\nexport function isFunction(value: any): value is (...args: any[]) => any {\r\n  return typeof value === 'function';\r\n}\r\n", "/**\r\n * Used to create Error subclasses until the community moves away from ES5.\r\n *\r\n * This is because compiling from TypeScript down to ES5 has issues with subclassing Errors\r\n * as well as other built-in types: https://github.com/Microsoft/TypeScript/issues/12123\r\n *\r\n * @param createImpl A factory function to create the actual constructor implementation. The returned\r\n * function should be a named function that calls `_super` internally.\r\n */\r\nexport function createErrorClass<T>(createImpl: (_super: any) => any): T {\r\n  const _super = (instance: any) => {\r\n    Error.call(instance);\r\n    instance.stack = new Error().stack;\r\n  };\r\n\r\n  const ctorFunc = createImpl(_super);\r\n  ctorFunc.prototype = Object.create(Error.prototype);\r\n  ctorFunc.prototype.constructor = ctorFunc;\r\n  return ctorFunc;\r\n}\r\n", "import { createErrorClass } from './createErrorClass';\r\n\r\nexport interface UnsubscriptionError extends Error {\r\n  readonly errors: any[];\r\n}\r\n\r\nexport interface UnsubscriptionErrorCtor {\r\n  /**\r\n   * @deprecated Internal implementation detail. Do not construct error instances.\r\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\r\n   */\r\n  new (errors: any[]): UnsubscriptionError;\r\n}\r\n\r\n/**\r\n * An error thrown when one or more errors have occurred during the\r\n * `unsubscribe` of a {@link Subscription}.\r\n */\r\nexport const UnsubscriptionError: UnsubscriptionErrorCtor = createErrorClass(\r\n  (_super) =>\r\n    function UnsubscriptionErrorImpl(this: any, errors: (Error | string)[]) {\r\n      _super(this);\r\n      this.message = errors\r\n        ? `${errors.length} errors occurred during unsubscription:\r\n${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}`\r\n        : '';\r\n      this.name = 'UnsubscriptionError';\r\n      this.errors = errors;\r\n    }\r\n);\r\n", "/**\r\n * Removes an item from an array, mutating it.\r\n * @param arr The array to remove the item from\r\n * @param item The item to remove\r\n */\r\nexport function arrRemove<T>(arr: T[] | undefined | null, item: T) {\r\n  if (arr) {\r\n    const index = arr.indexOf(item);\r\n    0 <= index && arr.splice(index, 1);\r\n  }\r\n}\r\n", "import { isFunction } from './util/isFunction';\r\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\r\nimport { SubscriptionLike, TeardownLogic, Unsubscribable } from './types';\r\nimport { arrRemove } from './util/arrRemove';\r\n\r\n/**\r\n * Represents a disposable resource, such as the execution of an Observable. A\r\n * Subscription has one important method, `unsubscribe`, that takes no argument\r\n * and just disposes the resource held by the subscription.\r\n *\r\n * Additionally, subscriptions may be grouped together through the `add()`\r\n * method, which will attach a child Subscription to the current Subscription.\r\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\r\n * will be unsubscribed as well.\r\n *\r\n * @class Subscription\r\n */\r\nexport class Subscription implements SubscriptionLike {\r\n  /** @nocollapse */\r\n  public static EMPTY = (() => {\r\n    const empty = new Subscription();\r\n    empty.closed = true;\r\n    return empty;\r\n  })();\r\n\r\n  /**\r\n   * A flag to indicate whether this Subscription has already been unsubscribed.\r\n   */\r\n  public closed = false;\r\n\r\n  private _parentage: Subscription[] | Subscription | null = null;\r\n\r\n  /**\r\n   * The list of registered finalizers to execute upon unsubscription. Adding and removing from this\r\n   * list occurs in the {@link #add} and {@link #remove} methods.\r\n   */\r\n  private _finalizers: Exclude<TeardownLogic, void>[] | null = null;\r\n\r\n  /**\r\n   * @param initialTeardown A function executed first as part of the finalization\r\n   * process that is kicked off when {@link #unsubscribe} is called.\r\n   */\r\n  constructor(private initialTeardown?: () => void) {}\r\n\r\n  /**\r\n   * Disposes the resources held by the subscription. May, for instance, cancel\r\n   * an ongoing Observable execution or cancel any other type of work that\r\n   * started when the Subscription was created.\r\n   * @return {void}\r\n   */\r\n  unsubscribe(): void {\r\n    let errors: any[] | undefined;\r\n\r\n    if (!this.closed) {\r\n      this.closed = true;\r\n\r\n      // Remove this from it's parents.\r\n      const { _parentage } = this;\r\n      if (_parentage) {\r\n        this._parentage = null;\r\n        if (Array.isArray(_parentage)) {\r\n          for (const parent of _parentage) {\r\n            parent.remove(this);\r\n          }\r\n        } else {\r\n          _parentage.remove(this);\r\n        }\r\n      }\r\n\r\n      const { initialTeardown: initialFinalizer } = this;\r\n      if (isFunction(initialFinalizer)) {\r\n        try {\r\n          initialFinalizer();\r\n        } catch (e) {\r\n          errors = e instanceof UnsubscriptionError ? e.errors : [e];\r\n        }\r\n      }\r\n\r\n      const { _finalizers } = this;\r\n      if (_finalizers) {\r\n        this._finalizers = null;\r\n        for (const finalizer of _finalizers) {\r\n          try {\r\n            execFinalizer(finalizer);\r\n          } catch (err) {\r\n            errors = errors ?? [];\r\n            if (err instanceof UnsubscriptionError) {\r\n              errors = [...errors, ...err.errors];\r\n            } else {\r\n              errors.push(err);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (errors) {\r\n        throw new UnsubscriptionError(errors);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Adds a finalizer to this subscription, so that finalization will be unsubscribed/called\r\n   * when this subscription is unsubscribed. If this subscription is already {@link #closed},\r\n   * because it has already been unsubscribed, then whatever finalizer is passed to it\r\n   * will automatically be executed (unless the finalizer itself is also a closed subscription).\r\n   *\r\n   * Closed Subscriptions cannot be added as finalizers to any subscription. Adding a closed\r\n   * subscription to a any subscription will result in no operation. (A noop).\r\n   *\r\n   * Adding a subscription to itself, or adding `null` or `undefined` will not perform any\r\n   * operation at all. (A noop).\r\n   *\r\n   * `Subscription` instances that are added to this instance will automatically remove themselves\r\n   * if they are unsubscribed. Functions and {@link Unsubscribable} objects that you wish to remove\r\n   * will need to be removed manually with {@link #remove}\r\n   *\r\n   * @param teardown The finalization logic to add to this subscription.\r\n   */\r\n  add(teardown: TeardownLogic): void {\r\n    // Only add the finalizer if it's not undefined\r\n    // and don't add a subscription to itself.\r\n    if (teardown && teardown !== this) {\r\n      if (this.closed) {\r\n        // If this subscription is already closed,\r\n        // execute whatever finalizer is handed to it automatically.\r\n        execFinalizer(teardown);\r\n      } else {\r\n        if (teardown instanceof Subscription) {\r\n          // We don't add closed subscriptions, and we don't add the same subscription\r\n          // twice. Subscription unsubscribe is idempotent.\r\n          if (teardown.closed || teardown._hasParent(this)) {\r\n            return;\r\n          }\r\n          teardown._addParent(this);\r\n        }\r\n        (this._finalizers = this._finalizers ?? []).push(teardown);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Checks to see if a this subscription already has a particular parent.\r\n   * This will signal that this subscription has already been added to the parent in question.\r\n   * @param parent the parent to check for\r\n   */\r\n  private _hasParent(parent: Subscription) {\r\n    const { _parentage } = this;\r\n    return _parentage === parent || (Array.isArray(_parentage) && _parentage.includes(parent));\r\n  }\r\n\r\n  /**\r\n   * Adds a parent to this subscription so it can be removed from the parent if it\r\n   * unsubscribes on it's own.\r\n   *\r\n   * NOTE: THIS ASSUMES THAT {@link _hasParent} HAS ALREADY BEEN CHECKED.\r\n   * @param parent The parent subscription to add\r\n   */\r\n  private _addParent(parent: Subscription) {\r\n    const { _parentage } = this;\r\n    this._parentage = Array.isArray(_parentage) ? (_parentage.push(parent), _parentage) : _parentage ? [_parentage, parent] : parent;\r\n  }\r\n\r\n  /**\r\n   * Called on a child when it is removed via {@link #remove}.\r\n   * @param parent The parent to remove\r\n   */\r\n  private _removeParent(parent: Subscription) {\r\n    const { _parentage } = this;\r\n    if (_parentage === parent) {\r\n      this._parentage = null;\r\n    } else if (Array.isArray(_parentage)) {\r\n      arrRemove(_parentage, parent);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Removes a finalizer from this subscription that was previously added with the {@link #add} method.\r\n   *\r\n   * Note that `Subscription` instances, when unsubscribed, will automatically remove themselves\r\n   * from every other `Subscription` they have been added to. This means that using the `remove` method\r\n   * is not a common thing and should be used thoughtfully.\r\n   *\r\n   * If you add the same finalizer instance of a function or an unsubscribable object to a `Subscription` instance\r\n   * more than once, you will need to call `remove` the same number of times to remove all instances.\r\n   *\r\n   * All finalizer instances are removed to free up memory upon unsubscription.\r\n   *\r\n   * @param teardown The finalizer to remove from this subscription\r\n   */\r\n  remove(teardown: Exclude<TeardownLogic, void>): void {\r\n    const { _finalizers } = this;\r\n    _finalizers && arrRemove(_finalizers, teardown);\r\n\r\n    if (teardown instanceof Subscription) {\r\n      teardown._removeParent(this);\r\n    }\r\n  }\r\n}\r\n\r\nexport const EMPTY_SUBSCRIPTION = Subscription.EMPTY;\r\n\r\nexport function isSubscription(value: any): value is Subscription {\r\n  return (\r\n    value instanceof Subscription ||\r\n    (value && 'closed' in value && isFunction(value.remove) && isFunction(value.add) && isFunction(value.unsubscribe))\r\n  );\r\n}\r\n\r\nfunction execFinalizer(finalizer: Unsubscribable | (() => void)) {\r\n  if (isFunction(finalizer)) {\r\n    finalizer();\r\n  } else {\r\n    finalizer.unsubscribe();\r\n  }\r\n}\r\n", "import { Subscriber } from './Subscriber';\r\nimport { ObservableNotification } from './types';\r\n\r\n/**\r\n * The {@link GlobalConfig} object for RxJS. It is used to configure things\r\n * like how to react on unhandled errors.\r\n */\r\nexport const config: GlobalConfig = {\r\n  onUnhandledError: null,\r\n  onStoppedNotification: null,\r\n  Promise: undefined,\r\n  useDeprecatedSynchronousErrorHandling: false,\r\n  useDeprecatedNextContext: false,\r\n};\r\n\r\n/**\r\n * The global configuration object for RxJS, used to configure things\r\n * like how to react on unhandled errors. Accessible via {@link config}\r\n * object.\r\n */\r\nexport interface GlobalConfig {\r\n  /**\r\n   * A registration point for unhandled errors from RxJS. These are errors that\r\n   * cannot were not handled by consuming code in the usual subscription path. For\r\n   * example, if you have this configured, and you subscribe to an observable without\r\n   * providing an error handler, errors from that subscription will end up here. This\r\n   * will _always_ be called asynchronously on another job in the runtime. This is because\r\n   * we do not want errors thrown in this user-configured handler to interfere with the\r\n   * behavior of the library.\r\n   */\r\n  onUnhandledError: ((err: any) => void) | null;\r\n\r\n  /**\r\n   * A registration point for notifications that cannot be sent to subscribers because they\r\n   * have completed, errored or have been explicitly unsubscribed. By default, next, complete\r\n   * and error notifications sent to stopped subscribers are noops. However, sometimes callers\r\n   * might want a different behavior. For example, with sources that attempt to report errors\r\n   * to stopped subscribers, a caller can configure RxJS to throw an unhandled error instead.\r\n   * This will _always_ be called asynchronously on another job in the runtime. This is because\r\n   * we do not want errors thrown in this user-configured handler to interfere with the\r\n   * behavior of the library.\r\n   */\r\n  onStoppedNotification: ((notification: ObservableNotification<any>, subscriber: Subscriber<any>) => void) | null;\r\n\r\n  /**\r\n   * The promise constructor used by default for {@link Observable#toPromise toPromise} and {@link Observable#forEach forEach}\r\n   * methods.\r\n   *\r\n   * @deprecated As of version 8, RxJS will no longer support this sort of injection of a\r\n   * Promise constructor. If you need a Promise implementation other than native promises,\r\n   * please polyfill/patch Promise as you see appropriate. Will be removed in v8.\r\n   */\r\n  Promise?: PromiseConstructorLike;\r\n\r\n  /**\r\n   * If true, turns on synchronous error rethrowing, which is a deprecated behavior\r\n   * in v6 and higher. This behavior enables bad patterns like wrapping a subscribe\r\n   * call in a try/catch block. It also enables producer interference, a nasty bug\r\n   * where a multicast can be broken for all observers by a downstream consumer with\r\n   * an unhandled error. DO NOT USE THIS FLAG UNLESS IT'S NEEDED TO BUY TIME\r\n   * FOR MIGRATION REASONS.\r\n   *\r\n   * @deprecated As of version 8, RxJS will no longer support synchronous throwing\r\n   * of unhandled errors. All errors will be thrown on a separate call stack to prevent bad\r\n   * behaviors described above. Will be removed in v8.\r\n   */\r\n  useDeprecatedSynchronousErrorHandling: boolean;\r\n\r\n  /**\r\n   * If true, enables an as-of-yet undocumented feature from v5: The ability to access\r\n   * `unsubscribe()` via `this` context in `next` functions created in observers passed\r\n   * to `subscribe`.\r\n   *\r\n   * This is being removed because the performance was severely problematic, and it could also cause\r\n   * issues when types other than POJOs are passed to subscribe as subscribers, as they will likely have\r\n   * their `this` context overwritten.\r\n   *\r\n   * @deprecated As of version 8, RxJS will no longer support altering the\r\n   * context of next functions provided as part of an observer to Subscribe. Instead,\r\n   * you will have access to a subscription or a signal or token that will allow you to do things like\r\n   * unsubscribe and test closed status. Will be removed in v8.\r\n   */\r\n  useDeprecatedNextContext: boolean;\r\n}\r\n", "import type { TimerHandle } from './timerHandle';\r\ntype SetTimeoutFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;\r\ntype ClearTimeoutFunction = (handle: TimerHandle) => void;\r\n\r\ninterface TimeoutProvider {\r\n  setTimeout: SetTimeoutFunction;\r\n  clearTimeout: ClearTimeoutFunction;\r\n  delegate:\r\n    | {\r\n        setTimeout: SetTimeoutFunction;\r\n        clearTimeout: ClearTimeoutFunction;\r\n      }\r\n    | undefined;\r\n}\r\n\r\nexport const timeoutProvider: TimeoutProvider = {\r\n  // When accessing the delegate, use the variable rather than `this` so that\r\n  // the functions can be called without being bound to the provider.\r\n  setTimeout(handler: () => void, timeout?: number, ...args) {\r\n    const { delegate } = timeoutProvider;\r\n    if (delegate?.setTimeout) {\r\n      return delegate.setTimeout(handler, timeout, ...args);\r\n    }\r\n    return setTimeout(handler, timeout, ...args);\r\n  },\r\n  clearTimeout(handle) {\r\n    const { delegate } = timeoutProvider;\r\n    return (delegate?.clearTimeout || clearTimeout)(handle as any);\r\n  },\r\n  delegate: undefined,\r\n};\r\n", "import { config } from '../config';\r\nimport { timeoutProvider } from '../scheduler/timeoutProvider';\r\n\r\n/**\r\n * Handles an error on another job either with the user-configured {@link onUnhandledError},\r\n * or by throwing it on that new job so it can be picked up by `window.onerror`, `process.on('error')`, etc.\r\n *\r\n * This should be called whenever there is an error that is out-of-band with the subscription\r\n * or when an error hits a terminal boundary of the subscription and no error handler was provided.\r\n *\r\n * @param err the error to report\r\n */\r\nexport function reportUnhandledError(err: any) {\r\n  timeoutProvider.setTimeout(() => {\r\n    const { onUnhandledError } = config;\r\n    if (onUnhandledError) {\r\n      // Execute the user-configured error handler.\r\n      onUnhandledError(err);\r\n    } else {\r\n      // Throw so it is picked up by the runtime's uncaught error mechanism.\r\n      throw err;\r\n    }\r\n  });\r\n}\r\n", "/* tslint:disable:no-empty */\r\nexport function noop() { }\r\n", "import { CompleteNotification, NextNotification, ErrorNotification } from './types';\r\n\r\n/**\r\n * A completion object optimized for memory use and created to be the\r\n * same \"shape\" as other notifications in v8.\r\n * @internal\r\n */\r\nexport const COMPLETE_NOTIFICATION = (() => createNotification('C', undefined, undefined) as CompleteNotification)();\r\n\r\n/**\r\n * Internal use only. Creates an optimized error notification that is the same \"shape\"\r\n * as other notifications.\r\n * @internal\r\n */\r\nexport function errorNotification(error: any): ErrorNotification {\r\n  return createNotification('E', undefined, error) as any;\r\n}\r\n\r\n/**\r\n * Internal use only. Creates an optimized next notification that is the same \"shape\"\r\n * as other notifications.\r\n * @internal\r\n */\r\nexport function nextNotification<T>(value: T) {\r\n  return createNotification('N', value, undefined) as NextNotification<T>;\r\n}\r\n\r\n/**\r\n * Ensures that all notifications created internally have the same \"shape\" in v8.\r\n *\r\n * TODO: This is only exported to support a crazy legacy test in `groupBy`.\r\n * @internal\r\n */\r\nexport function createNotification(kind: 'N' | 'E' | 'C', value: any, error: any) {\r\n  return {\r\n    kind,\r\n    value,\r\n    error,\r\n  };\r\n}\r\n", "import { config } from '../config';\r\n\r\nlet context: { errorThrown: boolean; error: any } | null = null;\r\n\r\n/**\r\n * Handles dealing with errors for super-gross mode. Creates a context, in which\r\n * any synchronously thrown errors will be passed to {@link captureError}. Which\r\n * will record the error such that it will be rethrown after the call back is complete.\r\n * TODO: Remove in v8\r\n * @param cb An immediately executed function.\r\n */\r\nexport function errorContext(cb: () => void) {\r\n  if (config.useDeprecatedSynchronousErrorHandling) {\r\n    const isRoot = !context;\r\n    if (isRoot) {\r\n      context = { errorThrown: false, error: null };\r\n    }\r\n    cb();\r\n    if (isRoot) {\r\n      const { errorThrown, error } = context!;\r\n      context = null;\r\n      if (errorThrown) {\r\n        throw error;\r\n      }\r\n    }\r\n  } else {\r\n    // This is the general non-deprecated path for everyone that\r\n    // isn't crazy enough to use super-gross mode (useDeprecatedSynchronousErrorHandling)\r\n    cb();\r\n  }\r\n}\r\n\r\n/**\r\n * Captures errors only in super-gross mode.\r\n * @param err the error to capture\r\n */\r\nexport function captureError(err: any) {\r\n  if (config.useDeprecatedSynchronousErrorHandling && context) {\r\n    context.errorThrown = true;\r\n    context.error = err;\r\n  }\r\n}\r\n", "import { isFunction } from './util/isFunction';\r\nimport { Observer, ObservableNotification } from './types';\r\nimport { isSubscription, Subscription } from './Subscription';\r\nimport { config } from './config';\r\nimport { reportUnhandledError } from './util/reportUnhandledError';\r\nimport { noop } from './util/noop';\r\nimport { nextNotification, errorNotification, COMPLETE_NOTIFICATION } from './NotificationFactories';\r\nimport { timeoutProvider } from './scheduler/timeoutProvider';\r\nimport { captureError } from './util/errorContext';\r\n\r\n/**\r\n * Implements the {@link Observer} interface and extends the\r\n * {@link Subscription} class. While the {@link Observer} is the public API for\r\n * consuming the values of an {@link Observable}, all Observers get converted to\r\n * a Subscriber, in order to provide Subscription-like capabilities such as\r\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\r\n * implementing operators, but it is rarely used as a public API.\r\n *\r\n * @class Subscriber<T>\r\n */\r\nexport class Subscriber<T> extends Subscription implements Observer<T> {\r\n  /**\r\n   * A static factory for a Subscriber, given a (potentially partial) definition\r\n   * of an Observer.\r\n   * @param next The `next` callback of an Observer.\r\n   * @param error The `error` callback of an\r\n   * Observer.\r\n   * @param complete The `complete` callback of an\r\n   * Observer.\r\n   * @return A Subscriber wrapping the (partially defined)\r\n   * Observer represented by the given arguments.\r\n   * @nocollapse\r\n   * @deprecated Do not use. Will be removed in v8. There is no replacement for this\r\n   * method, and there is no reason to be creating instances of `Subscriber` directly.\r\n   * If you have a specific use case, please file an issue.\r\n   */\r\n  static create<T>(next?: (x?: T) => void, error?: (e?: any) => void, complete?: () => void): Subscriber<T> {\r\n    return new SafeSubscriber(next, error, complete);\r\n  }\r\n\r\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\r\n  protected isStopped: boolean = false;\r\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\r\n  protected destination: Subscriber<any> | Observer<any>; // this `any` is the escape hatch to erase extra type param (e.g. R)\r\n\r\n  /**\r\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\r\n   * There is no reason to directly create an instance of Subscriber. This type is exported for typings reasons.\r\n   */\r\n  constructor(destination?: Subscriber<any> | Observer<any>) {\r\n    super();\r\n    if (destination) {\r\n      this.destination = destination;\r\n      // Automatically chain subscriptions together here.\r\n      // if destination is a Subscription, then it is a Subscriber.\r\n      if (isSubscription(destination)) {\r\n        destination.add(this);\r\n      }\r\n    } else {\r\n      this.destination = EMPTY_OBSERVER;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The {@link Observer} callback to receive notifications of type `next` from\r\n   * the Observable, with a value. The Observable may call this method 0 or more\r\n   * times.\r\n   * @param {T} [value] The `next` value.\r\n   * @return {void}\r\n   */\r\n  next(value?: T): void {\r\n    if (this.isStopped) {\r\n      handleStoppedNotification(nextNotification(value), this);\r\n    } else {\r\n      this._next(value!);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The {@link Observer} callback to receive notifications of type `error` from\r\n   * the Observable, with an attached `Error`. Notifies the Observer that\r\n   * the Observable has experienced an error condition.\r\n   * @param {any} [err] The `error` exception.\r\n   * @return {void}\r\n   */\r\n  error(err?: any): void {\r\n    if (this.isStopped) {\r\n      handleStoppedNotification(errorNotification(err), this);\r\n    } else {\r\n      this.isStopped = true;\r\n      this._error(err);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The {@link Observer} callback to receive a valueless notification of type\r\n   * `complete` from the Observable. Notifies the Observer that the Observable\r\n   * has finished sending push-based notifications.\r\n   * @return {void}\r\n   */\r\n  complete(): void {\r\n    if (this.isStopped) {\r\n      handleStoppedNotification(COMPLETE_NOTIFICATION, this);\r\n    } else {\r\n      this.isStopped = true;\r\n      this._complete();\r\n    }\r\n  }\r\n\r\n  unsubscribe(): void {\r\n    if (!this.closed) {\r\n      this.isStopped = true;\r\n      super.unsubscribe();\r\n      this.destination = null!;\r\n    }\r\n  }\r\n\r\n  protected _next(value: T): void {\r\n    this.destination.next(value);\r\n  }\r\n\r\n  protected _error(err: any): void {\r\n    try {\r\n      this.destination.error(err);\r\n    } finally {\r\n      this.unsubscribe();\r\n    }\r\n  }\r\n\r\n  protected _complete(): void {\r\n    try {\r\n      this.destination.complete();\r\n    } finally {\r\n      this.unsubscribe();\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * This bind is captured here because we want to be able to have\r\n * compatibility with monoid libraries that tend to use a method named\r\n * `bind`. In particular, a library called Monio requires this.\r\n */\r\nconst _bind = Function.prototype.bind;\r\n\r\nfunction bind<Fn extends (...args: any[]) => any>(fn: Fn, thisArg: any): Fn {\r\n  return _bind.call(fn, thisArg);\r\n}\r\n\r\n/**\r\n * Internal optimization only, DO NOT EXPOSE.\r\n * @internal\r\n */\r\nclass ConsumerObserver<T> implements Observer<T> {\r\n  constructor(private partialObserver: Partial<Observer<T>>) {}\r\n\r\n  next(value: T): void {\r\n    const { partialObserver } = this;\r\n    if (partialObserver.next) {\r\n      try {\r\n        partialObserver.next(value);\r\n      } catch (error) {\r\n        handleUnhandledError(error);\r\n      }\r\n    }\r\n  }\r\n\r\n  error(err: any): void {\r\n    const { partialObserver } = this;\r\n    if (partialObserver.error) {\r\n      try {\r\n        partialObserver.error(err);\r\n      } catch (error) {\r\n        handleUnhandledError(error);\r\n      }\r\n    } else {\r\n      handleUnhandledError(err);\r\n    }\r\n  }\r\n\r\n  complete(): void {\r\n    const { partialObserver } = this;\r\n    if (partialObserver.complete) {\r\n      try {\r\n        partialObserver.complete();\r\n      } catch (error) {\r\n        handleUnhandledError(error);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport class SafeSubscriber<T> extends Subscriber<T> {\r\n  constructor(\r\n    observerOrNext?: Partial<Observer<T>> | ((value: T) => void) | null,\r\n    error?: ((e?: any) => void) | null,\r\n    complete?: (() => void) | null\r\n  ) {\r\n    super();\r\n\r\n    let partialObserver: Partial<Observer<T>>;\r\n    if (isFunction(observerOrNext) || !observerOrNext) {\r\n      // The first argument is a function, not an observer. The next\r\n      // two arguments *could* be observers, or they could be empty.\r\n      partialObserver = {\r\n        next: (observerOrNext ?? undefined) as (((value: T) => void) | undefined),\r\n        error: error ?? undefined,\r\n        complete: complete ?? undefined,\r\n      };\r\n    } else {\r\n      // The first argument is a partial observer.\r\n      let context: any;\r\n      if (this && config.useDeprecatedNextContext) {\r\n        // This is a deprecated path that made `this.unsubscribe()` available in\r\n        // next handler functions passed to subscribe. This only exists behind a flag\r\n        // now, as it is *very* slow.\r\n        context = Object.create(observerOrNext);\r\n        context.unsubscribe = () => this.unsubscribe();\r\n        partialObserver = {\r\n          next: observerOrNext.next && bind(observerOrNext.next, context),\r\n          error: observerOrNext.error && bind(observerOrNext.error, context),\r\n          complete: observerOrNext.complete && bind(observerOrNext.complete, context),\r\n        };\r\n      } else {\r\n        // The \"normal\" path. Just use the partial observer directly.\r\n        partialObserver = observerOrNext;\r\n      }\r\n    }\r\n\r\n    // Wrap the partial observer to ensure it's a full observer, and\r\n    // make sure proper error handling is accounted for.\r\n    this.destination = new ConsumerObserver(partialObserver);\r\n  }\r\n}\r\n\r\nfunction handleUnhandledError(error: any) {\r\n  if (config.useDeprecatedSynchronousErrorHandling) {\r\n    captureError(error);\r\n  } else {\r\n    // Ideal path, we report this as an unhandled error,\r\n    // which is thrown on a new call stack.\r\n    reportUnhandledError(error);\r\n  }\r\n}\r\n\r\n/**\r\n * An error handler used when no error handler was supplied\r\n * to the SafeSubscriber -- meaning no error handler was supplied\r\n * do the `subscribe` call on our observable.\r\n * @param err The error to handle\r\n */\r\nfunction defaultErrorHandler(err: any) {\r\n  throw err;\r\n}\r\n\r\n/**\r\n * A handler for notifications that cannot be sent to a stopped subscriber.\r\n * @param notification The notification being sent\r\n * @param subscriber The stopped subscriber\r\n */\r\nfunction handleStoppedNotification(notification: ObservableNotification<any>, subscriber: Subscriber<any>) {\r\n  const { onStoppedNotification } = config;\r\n  onStoppedNotification && timeoutProvider.setTimeout(() => onStoppedNotification(notification, subscriber));\r\n}\r\n\r\n/**\r\n * The observer used as a stub for subscriptions where the user did not\r\n * pass any arguments to `subscribe`. Comes with the default error handling\r\n * behavior.\r\n */\r\nexport const EMPTY_OBSERVER: Readonly<Observer<any>> & { closed: true } = {\r\n  closed: true,\r\n  next: noop,\r\n  error: defaultErrorHandler,\r\n  complete: noop,\r\n};\r\n", "/**\r\n * Symbol.observable or a string \"@@observable\". Used for interop\r\n *\r\n * @deprecated We will no longer be exporting this symbol in upcoming versions of RxJS.\r\n * Instead polyfill and use Symbol.observable directly *or* use https://www.npmjs.com/package/symbol-observable\r\n */\r\nexport const observable: string | symbol = (() => (typeof Symbol === 'function' && Symbol.observable) || '@@observable')();\r\n", "/**\r\n * This function takes one parameter and just returns it. Simply put,\r\n * this is like `<T>(x: T): T => x`.\r\n *\r\n * ## Examples\r\n *\r\n * This is useful in some cases when using things like `mergeMap`\r\n *\r\n * ```ts\r\n * import { interval, take, map, range, mergeMap, identity } from 'rxjs';\r\n *\r\n * const source$ = interval(1000).pipe(take(5));\r\n *\r\n * const result$ = source$.pipe(\r\n *   map(i => range(i)),\r\n *   mergeMap(identity) // same as mergeMap(x => x)\r\n * );\r\n *\r\n * result$.subscribe({\r\n *   next: console.log\r\n * });\r\n * ```\r\n *\r\n * Or when you want to selectively apply an operator\r\n *\r\n * ```ts\r\n * import { interval, take, identity } from 'rxjs';\r\n *\r\n * const shouldLimit = () => Math.random() < 0.5;\r\n *\r\n * const source$ = interval(1000);\r\n *\r\n * const result$ = source$.pipe(shouldLimit() ? take(5) : identity);\r\n *\r\n * result$.subscribe({\r\n *   next: console.log\r\n * });\r\n * ```\r\n *\r\n * @param x Any value that is returned by this function\r\n * @returns The value passed as the first parameter to this function\r\n */\r\nexport function identity<T>(x: T): T {\r\n  return x;\r\n}\r\n", "import { identity } from './identity';\r\nimport { UnaryFunction } from '../types';\r\n\r\nexport function pipe(): typeof identity;\r\nexport function pipe<T, A>(fn1: UnaryFunction<T, A>): UnaryFunction<T, A>;\r\nexport function pipe<T, A, B>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>): UnaryFunction<T, B>;\r\nexport function pipe<T, A, B, C>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>): UnaryFunction<T, C>;\r\nexport function pipe<T, A, B, C, D>(\r\n  fn1: UnaryFunction<T, A>,\r\n  fn2: UnaryFunction<A, B>,\r\n  fn3: UnaryFunction<B, C>,\r\n  fn4: UnaryFunction<C, D>\r\n): UnaryFunction<T, D>;\r\nexport function pipe<T, A, B, C, D, E>(\r\n  fn1: UnaryFunction<T, A>,\r\n  fn2: UnaryFunction<A, B>,\r\n  fn3: UnaryFunction<B, C>,\r\n  fn4: UnaryFunction<C, D>,\r\n  fn5: UnaryFunction<D, E>\r\n): UnaryFunction<T, E>;\r\nexport function pipe<T, A, B, C, D, E, F>(\r\n  fn1: UnaryFunction<T, A>,\r\n  fn2: UnaryFunction<A, B>,\r\n  fn3: UnaryFunction<B, C>,\r\n  fn4: UnaryFunction<C, D>,\r\n  fn5: UnaryFunction<D, E>,\r\n  fn6: UnaryFunction<E, F>\r\n): UnaryFunction<T, F>;\r\nexport function pipe<T, A, B, C, D, E, F, G>(\r\n  fn1: UnaryFunction<T, A>,\r\n  fn2: UnaryFunction<A, B>,\r\n  fn3: UnaryFunction<B, C>,\r\n  fn4: UnaryFunction<C, D>,\r\n  fn5: UnaryFunction<D, E>,\r\n  fn6: UnaryFunction<E, F>,\r\n  fn7: UnaryFunction<F, G>\r\n): UnaryFunction<T, G>;\r\nexport function pipe<T, A, B, C, D, E, F, G, H>(\r\n  fn1: UnaryFunction<T, A>,\r\n  fn2: UnaryFunction<A, B>,\r\n  fn3: UnaryFunction<B, C>,\r\n  fn4: UnaryFunction<C, D>,\r\n  fn5: UnaryFunction<D, E>,\r\n  fn6: UnaryFunction<E, F>,\r\n  fn7: UnaryFunction<F, G>,\r\n  fn8: UnaryFunction<G, H>\r\n): UnaryFunction<T, H>;\r\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(\r\n  fn1: UnaryFunction<T, A>,\r\n  fn2: UnaryFunction<A, B>,\r\n  fn3: UnaryFunction<B, C>,\r\n  fn4: UnaryFunction<C, D>,\r\n  fn5: UnaryFunction<D, E>,\r\n  fn6: UnaryFunction<E, F>,\r\n  fn7: UnaryFunction<F, G>,\r\n  fn8: UnaryFunction<G, H>,\r\n  fn9: UnaryFunction<H, I>\r\n): UnaryFunction<T, I>;\r\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(\r\n  fn1: UnaryFunction<T, A>,\r\n  fn2: UnaryFunction<A, B>,\r\n  fn3: UnaryFunction<B, C>,\r\n  fn4: UnaryFunction<C, D>,\r\n  fn5: UnaryFunction<D, E>,\r\n  fn6: UnaryFunction<E, F>,\r\n  fn7: UnaryFunction<F, G>,\r\n  fn8: UnaryFunction<G, H>,\r\n  fn9: UnaryFunction<H, I>,\r\n  ...fns: UnaryFunction<any, any>[]\r\n): UnaryFunction<T, unknown>;\r\n\r\n/**\r\n * pipe() can be called on one or more functions, each of which can take one argument (\"UnaryFunction\")\r\n * and uses it to return a value.\r\n * It returns a function that takes one argument, passes it to the first UnaryFunction, and then\r\n * passes the result to the next one, passes that result to the next one, and so on.  \r\n */\r\nexport function pipe(...fns: Array<UnaryFunction<any, any>>): UnaryFunction<any, any> {\r\n  return pipeFromArray(fns);\r\n}\r\n\r\n/** @internal */\r\nexport function pipeFromArray<T, R>(fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\r\n  if (fns.length === 0) {\r\n    return identity as UnaryFunction<any, any>;\r\n  }\r\n\r\n  if (fns.length === 1) {\r\n    return fns[0];\r\n  }\r\n\r\n  return function piped(input: T): R {\r\n    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input as any);\r\n  };\r\n}\r\n", "import { Operator } from './Operator';\r\nimport { SafeSubscriber, Subscriber } from './Subscriber';\r\nimport { isSubscription, Subscription } from './Subscription';\r\nimport { TeardownLogic, OperatorFunction, Subscribable, Observer } from './types';\r\nimport { observable as Symbol_observable } from './symbol/observable';\r\nimport { pipeFromArray } from './util/pipe';\r\nimport { config } from './config';\r\nimport { isFunction } from './util/isFunction';\r\nimport { errorContext } from './util/errorContext';\r\n\r\n/**\r\n * A representation of any set of values over any amount of time. This is the most basic building block\r\n * of RxJS.\r\n *\r\n * @class Observable<T>\r\n */\r\nexport class Observable<T> implements Subscribable<T> {\r\n  /**\r\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\r\n   */\r\n  source: Observable<any> | undefined;\r\n\r\n  /**\r\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\r\n   */\r\n  operator: Operator<any, T> | undefined;\r\n\r\n  /**\r\n   * @constructor\r\n   * @param {Function} subscribe the function that is called when the Observable is\r\n   * initially subscribed to. This function is given a Subscriber, to which new values\r\n   * can be `next`ed, or an `error` method can be called to raise an error, or\r\n   * `complete` can be called to notify of a successful completion.\r\n   */\r\n  constructor(subscribe?: (this: Observable<T>, subscriber: Subscriber<T>) => TeardownLogic) {\r\n    if (subscribe) {\r\n      this._subscribe = subscribe;\r\n    }\r\n  }\r\n\r\n  // HACK: Since TypeScript inherits static properties too, we have to\r\n  // fight against TypeScript here so Subject can have a different static create signature\r\n  /**\r\n   * Creates a new Observable by calling the Observable constructor\r\n   * @owner Observable\r\n   * @method create\r\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\r\n   * @return {Observable} a new observable\r\n   * @nocollapse\r\n   * @deprecated Use `new Observable()` instead. Will be removed in v8.\r\n   */\r\n  static create: (...args: any[]) => any = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {\r\n    return new Observable<T>(subscribe);\r\n  };\r\n\r\n  /**\r\n   * Creates a new Observable, with this Observable instance as the source, and the passed\r\n   * operator defined as the new observable's operator.\r\n   * @method lift\r\n   * @param operator the operator defining the operation to take on the observable\r\n   * @return a new observable with the Operator applied\r\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\r\n   * If you have implemented an operator using `lift`, it is recommended that you create an\r\n   * operator by simply returning `new Observable()` directly. See \"Creating new operators from\r\n   * scratch\" section here: https://rxjs.dev/guide/operators\r\n   */\r\n  lift<R>(operator?: Operator<T, R>): Observable<R> {\r\n    const observable = new Observable<R>();\r\n    observable.source = this;\r\n    observable.operator = operator;\r\n    return observable;\r\n  }\r\n\r\n  subscribe(observerOrNext?: Partial<Observer<T>> | ((value: T) => void)): Subscription;\r\n  /** @deprecated Instead of passing separate callback arguments, use an observer argument. Signatures taking separate callback arguments will be removed in v8. Details: https://rxjs.dev/deprecations/subscribe-arguments */\r\n  subscribe(next?: ((value: T) => void) | null, error?: ((error: any) => void) | null, complete?: (() => void) | null): Subscription;\r\n  /**\r\n   * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\r\n   *\r\n   * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\r\n   *\r\n   * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\r\n   * might be for example a function that you passed to Observable's constructor, but most of the time it is\r\n   * a library implementation, which defines what will be emitted by an Observable, and when it be will emitted. This means\r\n   * that calling `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\r\n   * the thought.\r\n   *\r\n   * Apart from starting the execution of an Observable, this method allows you to listen for values\r\n   * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\r\n   * of the following ways.\r\n   *\r\n   * The first way is creating an object that implements {@link Observer} interface. It should have methods\r\n   * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\r\n   * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular, do\r\n   * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\r\n   * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\r\n   * do anything, you can simply omit it. Note however, if the `error` method is not provided and an error happens,\r\n   * it will be thrown asynchronously. Errors thrown asynchronously cannot be caught using `try`/`catch`. Instead,\r\n   * use the {@link onUnhandledError} configuration option or use a runtime handler (like `window.onerror` or\r\n   * `process.on('error)`) to be notified of unhandled errors. Because of this, it's recommended that you provide\r\n   * an `error` method to avoid missing thrown errors.\r\n   *\r\n   * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\r\n   * This means you can provide three functions as arguments to `subscribe`, where the first function is equivalent\r\n   * of a `next` method, the second of an `error` method and the third of a `complete` method. Just as in case of an Observer,\r\n   * if you do not need to listen for something, you can omit a function by passing `undefined` or `null`,\r\n   * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\r\n   * to the `error` function, as with an Observer, if not provided, errors emitted by an Observable will be thrown asynchronously.\r\n   *\r\n   * You can, however, subscribe with no parameters at all. This may be the case where you're not interested in terminal events\r\n   * and you also handled emissions internally by using operators (e.g. using `tap`).\r\n   *\r\n   * Whichever style of calling `subscribe` you use, in both cases it returns a Subscription object.\r\n   * This object allows you to call `unsubscribe` on it, which in turn will stop the work that an Observable does and will clean\r\n   * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\r\n   * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\r\n   *\r\n   * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\r\n   * It is an Observable itself that decides when these functions will be called. For example {@link of}\r\n   * by default emits all its values synchronously. Always check documentation for how given Observable\r\n   * will behave when subscribed and if its default behavior can be modified with a `scheduler`.\r\n   *\r\n   * #### Examples\r\n   *\r\n   * Subscribe with an {@link guide/observer Observer}\r\n   *\r\n   * ```ts\r\n   * import { of } from 'rxjs';\r\n   *\r\n   * const sumObserver = {\r\n   *   sum: 0,\r\n   *   next(value) {\r\n   *     console.log('Adding: ' + value);\r\n   *     this.sum = this.sum + value;\r\n   *   },\r\n   *   error() {\r\n   *     // We actually could just remove this method,\r\n   *     // since we do not really care about errors right now.\r\n   *   },\r\n   *   complete() {\r\n   *     console.log('Sum equals: ' + this.sum);\r\n   *   }\r\n   * };\r\n   *\r\n   * of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\r\n   *   .subscribe(sumObserver);\r\n   *\r\n   * // Logs:\r\n   * // 'Adding: 1'\r\n   * // 'Adding: 2'\r\n   * // 'Adding: 3'\r\n   * // 'Sum equals: 6'\r\n   * ```\r\n   *\r\n   * Subscribe with functions ({@link deprecations/subscribe-arguments deprecated})\r\n   *\r\n   * ```ts\r\n   * import { of } from 'rxjs'\r\n   *\r\n   * let sum = 0;\r\n   *\r\n   * of(1, 2, 3).subscribe(\r\n   *   value => {\r\n   *     console.log('Adding: ' + value);\r\n   *     sum = sum + value;\r\n   *   },\r\n   *   undefined,\r\n   *   () => console.log('Sum equals: ' + sum)\r\n   * );\r\n   *\r\n   * // Logs:\r\n   * // 'Adding: 1'\r\n   * // 'Adding: 2'\r\n   * // 'Adding: 3'\r\n   * // 'Sum equals: 6'\r\n   * ```\r\n   *\r\n   * Cancel a subscription\r\n   *\r\n   * ```ts\r\n   * import { interval } from 'rxjs';\r\n   *\r\n   * const subscription = interval(1000).subscribe({\r\n   *   next(num) {\r\n   *     console.log(num)\r\n   *   },\r\n   *   complete() {\r\n   *     // Will not be called, even when cancelling subscription.\r\n   *     console.log('completed!');\r\n   *   }\r\n   * });\r\n   *\r\n   * setTimeout(() => {\r\n   *   subscription.unsubscribe();\r\n   *   console.log('unsubscribed!');\r\n   * }, 2500);\r\n   *\r\n   * // Logs:\r\n   * // 0 after 1s\r\n   * // 1 after 2s\r\n   * // 'unsubscribed!' after 2.5s\r\n   * ```\r\n   *\r\n   * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\r\n   * or the first of three possible handlers, which is the handler for each value emitted from the subscribed\r\n   * Observable.\r\n   * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\r\n   * the error will be thrown asynchronously as unhandled.\r\n   * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\r\n   * @return {Subscription} a subscription reference to the registered handlers\r\n   * @method subscribe\r\n   */\r\n  subscribe(\r\n    observerOrNext?: Partial<Observer<T>> | ((value: T) => void) | null,\r\n    error?: ((error: any) => void) | null,\r\n    complete?: (() => void) | null\r\n  ): Subscription {\r\n    const subscriber = isSubscriber(observerOrNext) ? observerOrNext : new SafeSubscriber(observerOrNext, error, complete);\r\n\r\n    errorContext(() => {\r\n      const { operator, source } = this;\r\n      subscriber.add(\r\n        operator\r\n          ? // We're dealing with a subscription in the\r\n            // operator chain to one of our lifted operators.\r\n            operator.call(subscriber, source)\r\n          : source\r\n          ? // If `source` has a value, but `operator` does not, something that\r\n            // had intimate knowledge of our API, like our `Subject`, must have\r\n            // set it. We're going to just call `_subscribe` directly.\r\n            this._subscribe(subscriber)\r\n          : // In all other cases, we're likely wrapping a user-provided initializer\r\n            // function, so we need to catch errors and handle them appropriately.\r\n            this._trySubscribe(subscriber)\r\n      );\r\n    });\r\n\r\n    return subscriber;\r\n  }\r\n\r\n  /** @internal */\r\n  protected _trySubscribe(sink: Subscriber<T>): TeardownLogic {\r\n    try {\r\n      return this._subscribe(sink);\r\n    } catch (err) {\r\n      // We don't need to return anything in this case,\r\n      // because it's just going to try to `add()` to a subscription\r\n      // above.\r\n      sink.error(err);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Used as a NON-CANCELLABLE means of subscribing to an observable, for use with\r\n   * APIs that expect promises, like `async/await`. You cannot unsubscribe from this.\r\n   *\r\n   * **WARNING**: Only use this with observables you *know* will complete. If the source\r\n   * observable does not complete, you will end up with a promise that is hung up, and\r\n   * potentially all of the state of an async function hanging out in memory. To avoid\r\n   * this situation, look into adding something like {@link timeout}, {@link take},\r\n   * {@link takeWhile}, or {@link takeUntil} amongst others.\r\n   *\r\n   * #### Example\r\n   *\r\n   * ```ts\r\n   * import { interval, take } from 'rxjs';\r\n   *\r\n   * const source$ = interval(1000).pipe(take(4));\r\n   *\r\n   * async function getTotal() {\r\n   *   let total = 0;\r\n   *\r\n   *   await source$.forEach(value => {\r\n   *     total += value;\r\n   *     console.log('observable -> ' + value);\r\n   *   });\r\n   *\r\n   *   return total;\r\n   * }\r\n   *\r\n   * getTotal().then(\r\n   *   total => console.log('Total: ' + total)\r\n   * );\r\n   *\r\n   * // Expected:\r\n   * // 'observable -> 0'\r\n   * // 'observable -> 1'\r\n   * // 'observable -> 2'\r\n   * // 'observable -> 3'\r\n   * // 'Total: 6'\r\n   * ```\r\n   *\r\n   * @param next a handler for each value emitted by the observable\r\n   * @return a promise that either resolves on observable completion or\r\n   *  rejects with the handled error\r\n   */\r\n  forEach(next: (value: T) => void): Promise<void>;\r\n\r\n  /**\r\n   * @param next a handler for each value emitted by the observable\r\n   * @param promiseCtor a constructor function used to instantiate the Promise\r\n   * @return a promise that either resolves on observable completion or\r\n   *  rejects with the handled error\r\n   * @deprecated Passing a Promise constructor will no longer be available\r\n   * in upcoming versions of RxJS. This is because it adds weight to the library, for very\r\n   * little benefit. If you need this functionality, it is recommended that you either\r\n   * polyfill Promise, or you create an adapter to convert the returned native promise\r\n   * to whatever promise implementation you wanted. Will be removed in v8.\r\n   */\r\n  forEach(next: (value: T) => void, promiseCtor: PromiseConstructorLike): Promise<void>;\r\n\r\n  forEach(next: (value: T) => void, promiseCtor?: PromiseConstructorLike): Promise<void> {\r\n    promiseCtor = getPromiseCtor(promiseCtor);\r\n\r\n    return new promiseCtor<void>((resolve, reject) => {\r\n      const subscriber = new SafeSubscriber<T>({\r\n        next: (value) => {\r\n          try {\r\n            next(value);\r\n          } catch (err) {\r\n            reject(err);\r\n            subscriber.unsubscribe();\r\n          }\r\n        },\r\n        error: reject,\r\n        complete: resolve,\r\n      });\r\n      this.subscribe(subscriber);\r\n    }) as Promise<void>;\r\n  }\r\n\r\n  /** @internal */\r\n  protected _subscribe(subscriber: Subscriber<any>): TeardownLogic {\r\n    return this.source?.subscribe(subscriber);\r\n  }\r\n\r\n  /**\r\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\r\n   * @method Symbol.observable\r\n   * @return {Observable} this instance of the observable\r\n   */\r\n  [Symbol_observable]() {\r\n    return this;\r\n  }\r\n\r\n  /* tslint:disable:max-line-length */\r\n  pipe(): Observable<T>;\r\n  pipe<A>(op1: OperatorFunction<T, A>): Observable<A>;\r\n  pipe<A, B>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>): Observable<B>;\r\n  pipe<A, B, C>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>): Observable<C>;\r\n  pipe<A, B, C, D>(\r\n    op1: OperatorFunction<T, A>,\r\n    op2: OperatorFunction<A, B>,\r\n    op3: OperatorFunction<B, C>,\r\n    op4: OperatorFunction<C, D>\r\n  ): Observable<D>;\r\n  pipe<A, B, C, D, E>(\r\n    op1: OperatorFunction<T, A>,\r\n    op2: OperatorFunction<A, B>,\r\n    op3: OperatorFunction<B, C>,\r\n    op4: OperatorFunction<C, D>,\r\n    op5: OperatorFunction<D, E>\r\n  ): Observable<E>;\r\n  pipe<A, B, C, D, E, F>(\r\n    op1: OperatorFunction<T, A>,\r\n    op2: OperatorFunction<A, B>,\r\n    op3: OperatorFunction<B, C>,\r\n    op4: OperatorFunction<C, D>,\r\n    op5: OperatorFunction<D, E>,\r\n    op6: OperatorFunction<E, F>\r\n  ): Observable<F>;\r\n  pipe<A, B, C, D, E, F, G>(\r\n    op1: OperatorFunction<T, A>,\r\n    op2: OperatorFunction<A, B>,\r\n    op3: OperatorFunction<B, C>,\r\n    op4: OperatorFunction<C, D>,\r\n    op5: OperatorFunction<D, E>,\r\n    op6: OperatorFunction<E, F>,\r\n    op7: OperatorFunction<F, G>\r\n  ): Observable<G>;\r\n  pipe<A, B, C, D, E, F, G, H>(\r\n    op1: OperatorFunction<T, A>,\r\n    op2: OperatorFunction<A, B>,\r\n    op3: OperatorFunction<B, C>,\r\n    op4: OperatorFunction<C, D>,\r\n    op5: OperatorFunction<D, E>,\r\n    op6: OperatorFunction<E, F>,\r\n    op7: OperatorFunction<F, G>,\r\n    op8: OperatorFunction<G, H>\r\n  ): Observable<H>;\r\n  pipe<A, B, C, D, E, F, G, H, I>(\r\n    op1: OperatorFunction<T, A>,\r\n    op2: OperatorFunction<A, B>,\r\n    op3: OperatorFunction<B, C>,\r\n    op4: OperatorFunction<C, D>,\r\n    op5: OperatorFunction<D, E>,\r\n    op6: OperatorFunction<E, F>,\r\n    op7: OperatorFunction<F, G>,\r\n    op8: OperatorFunction<G, H>,\r\n    op9: OperatorFunction<H, I>\r\n  ): Observable<I>;\r\n  pipe<A, B, C, D, E, F, G, H, I>(\r\n    op1: OperatorFunction<T, A>,\r\n    op2: OperatorFunction<A, B>,\r\n    op3: OperatorFunction<B, C>,\r\n    op4: OperatorFunction<C, D>,\r\n    op5: OperatorFunction<D, E>,\r\n    op6: OperatorFunction<E, F>,\r\n    op7: OperatorFunction<F, G>,\r\n    op8: OperatorFunction<G, H>,\r\n    op9: OperatorFunction<H, I>,\r\n    ...operations: OperatorFunction<any, any>[]\r\n  ): Observable<unknown>;\r\n  /* tslint:enable:max-line-length */\r\n\r\n  /**\r\n   * Used to stitch together functional operators into a chain.\r\n   * @method pipe\r\n   * @return {Observable} the Observable result of all of the operators having\r\n   * been called in the order they were passed in.\r\n   *\r\n   * ## Example\r\n   *\r\n   * ```ts\r\n   * import { interval, filter, map, scan } from 'rxjs';\r\n   *\r\n   * interval(1000)\r\n   *   .pipe(\r\n   *     filter(x => x % 2 === 0),\r\n   *     map(x => x + x),\r\n   *     scan((acc, x) => acc + x)\r\n   *   )\r\n   *   .subscribe(x => console.log(x));\r\n   * ```\r\n   */\r\n  pipe(...operations: OperatorFunction<any, any>[]): Observable<any> {\r\n    return pipeFromArray(operations)(this);\r\n  }\r\n\r\n  /* tslint:disable:max-line-length */\r\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\r\n  toPromise(): Promise<T | undefined>;\r\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\r\n  toPromise(PromiseCtor: typeof Promise): Promise<T | undefined>;\r\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\r\n  toPromise(PromiseCtor: PromiseConstructorLike): Promise<T | undefined>;\r\n  /* tslint:enable:max-line-length */\r\n\r\n  /**\r\n   * Subscribe to this Observable and get a Promise resolving on\r\n   * `complete` with the last emission (if any).\r\n   *\r\n   * **WARNING**: Only use this with observables you *know* will complete. If the source\r\n   * observable does not complete, you will end up with a promise that is hung up, and\r\n   * potentially all of the state of an async function hanging out in memory. To avoid\r\n   * this situation, look into adding something like {@link timeout}, {@link take},\r\n   * {@link takeWhile}, or {@link takeUntil} amongst others.\r\n   *\r\n   * @method toPromise\r\n   * @param [promiseCtor] a constructor function used to instantiate\r\n   * the Promise\r\n   * @return A Promise that resolves with the last value emit, or\r\n   * rejects on an error. If there were no emissions, Promise\r\n   * resolves with undefined.\r\n   * @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise\r\n   */\r\n  toPromise(promiseCtor?: PromiseConstructorLike): Promise<T | undefined> {\r\n    promiseCtor = getPromiseCtor(promiseCtor);\r\n\r\n    return new promiseCtor((resolve, reject) => {\r\n      let value: T | undefined;\r\n      this.subscribe(\r\n        (x: T) => (value = x),\r\n        (err: any) => reject(err),\r\n        () => resolve(value)\r\n      );\r\n    }) as Promise<T | undefined>;\r\n  }\r\n}\r\n\r\n/**\r\n * Decides between a passed promise constructor from consuming code,\r\n * A default configured promise constructor, and the native promise\r\n * constructor and returns it. If nothing can be found, it will throw\r\n * an error.\r\n * @param promiseCtor The optional promise constructor to passed by consuming code\r\n */\r\nfunction getPromiseCtor(promiseCtor: PromiseConstructorLike | undefined) {\r\n  return promiseCtor ?? config.Promise ?? Promise;\r\n}\r\n\r\nfunction isObserver<T>(value: any): value is Observer<T> {\r\n  return value && isFunction(value.next) && isFunction(value.error) && isFunction(value.complete);\r\n}\r\n\r\nfunction isSubscriber<T>(value: any): value is Subscriber<T> {\r\n  return (value && value instanceof Subscriber) || (isObserver(value) && isSubscription(value));\r\n}\r\n", "import { Observable } from '../Observable';\r\nimport { Subscriber } from '../Subscriber';\r\nimport { OperatorFunction } from '../types';\r\nimport { isFunction } from './isFunction';\r\n\r\n/**\r\n * Used to determine if an object is an Observable with a lift function.\r\n */\r\nexport function hasLift(source: any): source is { lift: InstanceType<typeof Observable>['lift'] } {\r\n  return isFunction(source?.lift);\r\n}\r\n\r\n/**\r\n * Creates an `OperatorFunction`. Used to define operators throughout the library in a concise way.\r\n * @param init The logic to connect the liftedSource to the subscriber at the moment of subscription.\r\n */\r\nexport function operate<T, R>(\r\n  init: (liftedSource: Observable<T>, subscriber: Subscriber<R>) => (() => void) | void\r\n): OperatorFunction<T, R> {\r\n  return (source: Observable<T>) => {\r\n    if (hasLift(source)) {\r\n      return source.lift(function (this: Subscriber<R>, liftedSource: Observable<T>) {\r\n        try {\r\n          return init(liftedSource, this);\r\n        } catch (err) {\r\n          this.error(err);\r\n        }\r\n      });\r\n    }\r\n    throw new TypeError('Unable to lift unknown Observable type');\r\n  };\r\n}\r\n", "import { Subscriber } from '../Subscriber';\r\n\r\n/**\r\n * Creates an instance of an `OperatorSubscriber`.\r\n * @param destination The downstream subscriber.\r\n * @param onNext Handles next values, only called if this subscriber is not stopped or closed. Any\r\n * error that occurs in this function is caught and sent to the `error` method of this subscriber.\r\n * @param onError Handles errors from the subscription, any errors that occur in this handler are caught\r\n * and send to the `destination` error handler.\r\n * @param onComplete Handles completion notification from the subscription. Any errors that occur in\r\n * this handler are sent to the `destination` error handler.\r\n * @param onFinalize Additional teardown logic here. This will only be called on teardown if the\r\n * subscriber itself is not already closed. This is called after all other teardown logic is executed.\r\n */\r\nexport function createOperatorSubscriber<T>(\r\n  destination: Subscriber<any>,\r\n  onNext?: (value: T) => void,\r\n  onComplete?: () => void,\r\n  onError?: (err: any) => void,\r\n  onFinalize?: () => void\r\n): Subscriber<T> {\r\n  return new OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize);\r\n}\r\n\r\n/**\r\n * A generic helper for allowing operators to be created with a Subscriber and\r\n * use closures to capture necessary state from the operator function itself.\r\n */\r\nexport class OperatorSubscriber<T> extends Subscriber<T> {\r\n  /**\r\n   * Creates an instance of an `OperatorSubscriber`.\r\n   * @param destination The downstream subscriber.\r\n   * @param onNext Handles next values, only called if this subscriber is not stopped or closed. Any\r\n   * error that occurs in this function is caught and sent to the `error` method of this subscriber.\r\n   * @param onError Handles errors from the subscription, any errors that occur in this handler are caught\r\n   * and send to the `destination` error handler.\r\n   * @param onComplete Handles completion notification from the subscription. Any errors that occur in\r\n   * this handler are sent to the `destination` error handler.\r\n   * @param onFinalize Additional finalization logic here. This will only be called on finalization if the\r\n   * subscriber itself is not already closed. This is called after all other finalization logic is executed.\r\n   * @param shouldUnsubscribe An optional check to see if an unsubscribe call should truly unsubscribe.\r\n   * NOTE: This currently **ONLY** exists to support the strange behavior of {@link groupBy}, where unsubscription\r\n   * to the resulting observable does not actually disconnect from the source if there are active subscriptions\r\n   * to any grouped observable. (DO NOT EXPOSE OR USE EXTERNALLY!!!)\r\n   */\r\n  constructor(\r\n    destination: Subscriber<any>,\r\n    onNext?: (value: T) => void,\r\n    onComplete?: () => void,\r\n    onError?: (err: any) => void,\r\n    private onFinalize?: () => void,\r\n    private shouldUnsubscribe?: () => boolean\r\n  ) {\r\n    // It's important - for performance reasons - that all of this class's\r\n    // members are initialized and that they are always initialized in the same\r\n    // order. This will ensure that all OperatorSubscriber instances have the\r\n    // same hidden class in V8. This, in turn, will help keep the number of\r\n    // hidden classes involved in property accesses within the base class as\r\n    // low as possible. If the number of hidden classes involved exceeds four,\r\n    // the property accesses will become megamorphic and performance penalties\r\n    // will be incurred - i.e. inline caches won't be used.\r\n    //\r\n    // The reasons for ensuring all instances have the same hidden class are\r\n    // further discussed in this blog post from Benedikt Meurer:\r\n    // https://benediktmeurer.de/2018/03/23/impact-of-polymorphism-on-component-based-frameworks-like-react/\r\n    super(destination);\r\n    this._next = onNext\r\n      ? function (this: OperatorSubscriber<T>, value: T) {\r\n          try {\r\n            onNext(value);\r\n          } catch (err) {\r\n            destination.error(err);\r\n          }\r\n        }\r\n      : super._next;\r\n    this._error = onError\r\n      ? function (this: OperatorSubscriber<T>, err: any) {\r\n          try {\r\n            onError(err);\r\n          } catch (err) {\r\n            // Send any errors that occur down stream.\r\n            destination.error(err);\r\n          } finally {\r\n            // Ensure finalization.\r\n            this.unsubscribe();\r\n          }\r\n        }\r\n      : super._error;\r\n    this._complete = onComplete\r\n      ? function (this: OperatorSubscriber<T>) {\r\n          try {\r\n            onComplete();\r\n          } catch (err) {\r\n            // Send any errors that occur down stream.\r\n            destination.error(err);\r\n          } finally {\r\n            // Ensure finalization.\r\n            this.unsubscribe();\r\n          }\r\n        }\r\n      : super._complete;\r\n  }\r\n\r\n  unsubscribe() {\r\n    if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {\r\n      const { closed } = this;\r\n      super.unsubscribe();\r\n      // Execute additional teardown if we have any and we didn't already do so.\r\n      !closed && this.onFinalize?.();\r\n    }\r\n  }\r\n}\r\n", "import { ConnectableObservable } from '../observable/ConnectableObservable';\r\nimport { Subscription } from '../Subscription';\r\nimport { MonoTypeOperatorFunction } from '../types';\r\nimport { operate } from '../util/lift';\r\nimport { createOperatorSubscriber } from './OperatorSubscriber';\r\n\r\n/**\r\n * Make a {@link ConnectableObservable} behave like a ordinary observable and automates the way\r\n * you can connect to it.\r\n *\r\n * Internally it counts the subscriptions to the observable and subscribes (only once) to the source if\r\n * the number of subscriptions is larger than 0. If the number of subscriptions is smaller than 1, it\r\n * unsubscribes from the source. This way you can make sure that everything before the *published*\r\n * refCount has only a single subscription independently of the number of subscribers to the target\r\n * observable.\r\n *\r\n * Note that using the {@link share} operator is exactly the same as using the `multicast(() => new Subject())` operator\r\n * (making the observable hot) and the *refCount* operator in a sequence.\r\n *\r\n * ![](refCount.png)\r\n *\r\n * ## Example\r\n *\r\n * In the following example there are two intervals turned into connectable observables\r\n * by using the *publish* operator. The first one uses the *refCount* operator, the\r\n * second one does not use it. You will notice that a connectable observable does nothing\r\n * until you call its connect function.\r\n *\r\n * ```ts\r\n * import { interval, tap, publish, refCount } from 'rxjs';\r\n *\r\n * // Turn the interval observable into a ConnectableObservable (hot)\r\n * const refCountInterval = interval(400).pipe(\r\n *   tap(num => console.log(`refCount ${ num }`)),\r\n *   publish(),\r\n *   refCount()\r\n * );\r\n *\r\n * const publishedInterval = interval(400).pipe(\r\n *   tap(num => console.log(`publish ${ num }`)),\r\n *   publish()\r\n * );\r\n *\r\n * refCountInterval.subscribe();\r\n * refCountInterval.subscribe();\r\n * // 'refCount 0' -----> 'refCount 1' -----> etc\r\n * // All subscriptions will receive the same value and the tap (and\r\n * // every other operator) before the `publish` operator will be executed\r\n * // only once per event independently of the number of subscriptions.\r\n *\r\n * publishedInterval.subscribe();\r\n * // Nothing happens until you call .connect() on the observable.\r\n * ```\r\n *\r\n * @return A function that returns an Observable that automates the connection\r\n * to ConnectableObservable.\r\n * @see {@link ConnectableObservable}\r\n * @see {@link share}\r\n * @see {@link publish}\r\n * @deprecated Replaced with the {@link share} operator. How `share` is used\r\n * will depend on the connectable observable you created just prior to the\r\n * `refCount` operator.\r\n * Details: https://rxjs.dev/deprecations/multicasting\r\n */\r\nexport function refCount<T>(): MonoTypeOperatorFunction<T> {\r\n  return operate((source, subscriber) => {\r\n    let connection: Subscription | null = null;\r\n\r\n    (source as any)._refCount++;\r\n\r\n    const refCounter = createOperatorSubscriber(subscriber, undefined, undefined, undefined, () => {\r\n      if (!source || (source as any)._refCount <= 0 || 0 < --(source as any)._refCount) {\r\n        connection = null;\r\n        return;\r\n      }\r\n\r\n      ///\r\n      // Compare the local RefCountSubscriber's connection Subscription to the\r\n      // connection Subscription on the shared ConnectableObservable. In cases\r\n      // where the ConnectableObservable source synchronously emits values, and\r\n      // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\r\n      // execution continues to here before the RefCountOperator has a chance to\r\n      // supply the RefCountSubscriber with the shared connection Subscription.\r\n      // For example:\r\n      // ```\r\n      // range(0, 10).pipe(\r\n      //   publish(),\r\n      //   refCount(),\r\n      //   take(5),\r\n      // )\r\n      // .subscribe();\r\n      // ```\r\n      // In order to account for this case, RefCountSubscriber should only dispose\r\n      // the ConnectableObservable's shared connection Subscription if the\r\n      // connection Subscription exists, *and* either:\r\n      //   a. RefCountSubscriber doesn't have a reference to the shared connection\r\n      //      Subscription yet, or,\r\n      //   b. RefCountSubscriber's connection Subscription reference is identical\r\n      //      to the shared connection Subscription\r\n      ///\r\n\r\n      const sharedConnection = (source as any)._connection;\r\n      const conn = connection;\r\n      connection = null;\r\n\r\n      if (sharedConnection && (!conn || sharedConnection === conn)) {\r\n        sharedConnection.unsubscribe();\r\n      }\r\n\r\n      subscriber.unsubscribe();\r\n    });\r\n\r\n    source.subscribe(refCounter);\r\n\r\n    if (!refCounter.closed) {\r\n      connection = (source as ConnectableObservable<T>).connect();\r\n    }\r\n  });\r\n}\r\n", "import { Subject } from '../Subject';\r\nimport { Observable } from '../Observable';\r\nimport { Subscriber } from '../Subscriber';\r\nimport { Subscription } from '../Subscription';\r\nimport { refCount as higherOrderRefCount } from '../operators/refCount';\r\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\r\nimport { hasLift } from '../util/lift';\r\n\r\n/**\r\n * @class ConnectableObservable<T>\r\n * @deprecated Will be removed in v8. Use {@link connectable} to create a connectable observable.\r\n * If you are using the `refCount` method of `ConnectableObservable`, use the {@link share} operator\r\n * instead.\r\n * Details: https://rxjs.dev/deprecations/multicasting\r\n */\r\nexport class ConnectableObservable<T> extends Observable<T> {\r\n  protected _subject: Subject<T> | null = null;\r\n  protected _refCount: number = 0;\r\n  protected _connection: Subscription | null = null;\r\n\r\n  /**\r\n   * @param source The source observable\r\n   * @param subjectFactory The factory that creates the subject used internally.\r\n   * @deprecated Will be removed in v8. Use {@link connectable} to create a connectable observable.\r\n   * `new ConnectableObservable(source, factory)` is equivalent to\r\n   * `connectable(source, { connector: factory })`.\r\n   * When the `refCount()` method is needed, the {@link share} operator should be used instead:\r\n   * `new ConnectableObservable(source, factory).refCount()` is equivalent to\r\n   * `source.pipe(share({ connector: factory }))`.\r\n   * Details: https://rxjs.dev/deprecations/multicasting\r\n   */\r\n  constructor(public source: Observable<T>, protected subjectFactory: () => Subject<T>) {\r\n    super();\r\n    // If we have lift, monkey patch that here. This is done so custom observable\r\n    // types will compose through multicast. Otherwise the resulting observable would\r\n    // simply be an instance of `ConnectableObservable`.\r\n    if (hasLift(source)) {\r\n      this.lift = source.lift;\r\n    }\r\n  }\r\n\r\n  /** @internal */\r\n  protected _subscribe(subscriber: Subscriber<T>) {\r\n    return this.getSubject().subscribe(subscriber);\r\n  }\r\n\r\n  protected getSubject(): Subject<T> {\r\n    const subject = this._subject;\r\n    if (!subject || subject.isStopped) {\r\n      this._subject = this.subjectFactory();\r\n    }\r\n    return this._subject!;\r\n  }\r\n\r\n  protected _teardown() {\r\n    this._refCount = 0;\r\n    const { _connection } = this;\r\n    this._subject = this._connection = null;\r\n    _connection?.unsubscribe();\r\n  }\r\n\r\n  /**\r\n   * @deprecated {@link ConnectableObservable} will be removed in v8. Use {@link connectable} instead.\r\n   * Details: https://rxjs.dev/deprecations/multicasting\r\n   */\r\n  connect(): Subscription {\r\n    let connection = this._connection;\r\n    if (!connection) {\r\n      connection = this._connection = new Subscription();\r\n      const subject = this.getSubject();\r\n      connection.add(\r\n        this.source.subscribe(\r\n          createOperatorSubscriber(\r\n            subject as any,\r\n            undefined,\r\n            () => {\r\n              this._teardown();\r\n              subject.complete();\r\n            },\r\n            (err) => {\r\n              this._teardown();\r\n              subject.error(err);\r\n            },\r\n            () => this._teardown()\r\n          )\r\n        )\r\n      );\r\n\r\n      if (connection.closed) {\r\n        this._connection = null;\r\n        connection = Subscription.EMPTY;\r\n      }\r\n    }\r\n    return connection;\r\n  }\r\n\r\n  /**\r\n   * @deprecated {@link ConnectableObservable} will be removed in v8. Use the {@link share} operator instead.\r\n   * Details: https://rxjs.dev/deprecations/multicasting\r\n   */\r\n  refCount(): Observable<T> {\r\n    return higherOrderRefCount()(this) as Observable<T>;\r\n  }\r\n}\r\n", "import { TimestampProvider } from '../types';\r\n\r\ninterface PerformanceTimestampProvider extends TimestampProvider {\r\n  delegate: TimestampProvider | undefined;\r\n}\r\n\r\nexport const performanceTimestampProvider: PerformanceTimestampProvider = {\r\n  now() {\r\n    // Use the variable rather than `this` so that the function can be called\r\n    // without being bound to the provider.\r\n    return (performanceTimestampProvider.delegate || performance).now();\r\n  },\r\n  delegate: undefined,\r\n};\r\n", "import { Subscription } from '../Subscription';\r\n\r\ninterface AnimationFrameProvider {\r\n  schedule(callback: FrameRequestCallback): Subscription;\r\n  requestAnimationFrame: typeof requestAnimationFrame;\r\n  cancelAnimationFrame: typeof cancelAnimationFrame;\r\n  delegate:\r\n    | {\r\n        requestAnimationFrame: typeof requestAnimationFrame;\r\n        cancelAnimationFrame: typeof cancelAnimationFrame;\r\n      }\r\n    | undefined;\r\n}\r\n\r\nexport const animationFrameProvider: AnimationFrameProvider = {\r\n  // When accessing the delegate, use the variable rather than `this` so that\r\n  // the functions can be called without being bound to the provider.\r\n  schedule(callback) {\r\n    let request = requestAnimationFrame;\r\n    let cancel: typeof cancelAnimationFrame | undefined = cancelAnimationFrame;\r\n    const { delegate } = animationFrameProvider;\r\n    if (delegate) {\r\n      request = delegate.requestAnimationFrame;\r\n      cancel = delegate.cancelAnimationFrame;\r\n    }\r\n    const handle = request((timestamp) => {\r\n      // Clear the cancel function. The request has been fulfilled, so\r\n      // attempting to cancel the request upon unsubscription would be\r\n      // pointless.\r\n      cancel = undefined;\r\n      callback(timestamp);\r\n    });\r\n    return new Subscription(() => cancel?.(handle));\r\n  },\r\n  requestAnimationFrame(...args) {\r\n    const { delegate } = animationFrameProvider;\r\n    return (delegate?.requestAnimationFrame || requestAnimationFrame)(...args);\r\n  },\r\n  cancelAnimationFrame(...args) {\r\n    const { delegate } = animationFrameProvider;\r\n    return (delegate?.cancelAnimationFrame || cancelAnimationFrame)(...args);\r\n  },\r\n  delegate: undefined,\r\n};\r\n", "import { Observable } from '../../Observable';\r\nimport { TimestampProvider } from '../../types';\r\nimport { performanceTimestampProvider } from '../../scheduler/performanceTimestampProvider';\r\nimport { animationFrameProvider } from '../../scheduler/animationFrameProvider';\r\n\r\n/**\r\n * An observable of animation frames\r\n *\r\n * Emits the amount of time elapsed since subscription and the timestamp on each animation frame.\r\n * Defaults to milliseconds provided to the requestAnimationFrame's callback. Does not end on its own.\r\n *\r\n * Every subscription will start a separate animation loop. Since animation frames are always scheduled\r\n * by the browser to occur directly before a repaint, scheduling more than one animation frame synchronously\r\n * should not be much different or have more overhead than looping over an array of events during\r\n * a single animation frame. However, if for some reason the developer would like to ensure the\r\n * execution of animation-related handlers are all executed during the same task by the engine,\r\n * the `share` operator can be used.\r\n *\r\n * This is useful for setting up animations with RxJS.\r\n *\r\n * ## Examples\r\n *\r\n * Tweening a div to move it on the screen\r\n *\r\n * ```ts\r\n * import { animationFrames, map, takeWhile, endWith } from 'rxjs';\r\n *\r\n * function tween(start: number, end: number, duration: number) {\r\n *   const diff = end - start;\r\n *   return animationFrames().pipe(\r\n *     // Figure out what percentage of time has passed\r\n *     map(({ elapsed }) => elapsed / duration),\r\n *     // Take the vector while less than 100%\r\n *     takeWhile(v => v < 1),\r\n *     // Finish with 100%\r\n *     endWith(1),\r\n *     // Calculate the distance traveled between start and end\r\n *     map(v => v * diff + start)\r\n *   );\r\n * }\r\n *\r\n * // Setup a div for us to move around\r\n * const div = document.createElement('div');\r\n * document.body.appendChild(div);\r\n * div.style.position = 'absolute';\r\n * div.style.width = '40px';\r\n * div.style.height = '40px';\r\n * div.style.backgroundColor = 'lime';\r\n * div.style.transform = 'translate3d(10px, 0, 0)';\r\n *\r\n * tween(10, 200, 4000).subscribe(x => {\r\n *   div.style.transform = `translate3d(${ x }px, 0, 0)`;\r\n * });\r\n * ```\r\n *\r\n * Providing a custom timestamp provider\r\n *\r\n * ```ts\r\n * import { animationFrames, TimestampProvider } from 'rxjs';\r\n *\r\n * // A custom timestamp provider\r\n * let now = 0;\r\n * const customTSProvider: TimestampProvider = {\r\n *   now() { return now++; }\r\n * };\r\n *\r\n * const source$ = animationFrames(customTSProvider);\r\n *\r\n * // Log increasing numbers 0...1...2... on every animation frame.\r\n * source$.subscribe(({ elapsed }) => console.log(elapsed));\r\n * ```\r\n *\r\n * @param timestampProvider An object with a `now` method that provides a numeric timestamp\r\n */\r\nexport function animationFrames(timestampProvider?: TimestampProvider) {\r\n  return timestampProvider ? animationFramesFactory(timestampProvider) : DEFAULT_ANIMATION_FRAMES;\r\n}\r\n\r\n/**\r\n * Does the work of creating the observable for `animationFrames`.\r\n * @param timestampProvider The timestamp provider to use to create the observable\r\n */\r\nfunction animationFramesFactory(timestampProvider?: TimestampProvider) {\r\n  return new Observable<{ timestamp: number; elapsed: number }>((subscriber) => {\r\n    // If no timestamp provider is specified, use performance.now() - as it\r\n    // will return timestamps 'compatible' with those passed to the run\r\n    // callback and won't be affected by NTP adjustments, etc.\r\n    const provider = timestampProvider || performanceTimestampProvider;\r\n\r\n    // Capture the start time upon subscription, as the run callback can remain\r\n    // queued for a considerable period of time and the elapsed time should\r\n    // represent the time elapsed since subscription - not the time since the\r\n    // first rendered animation frame.\r\n    const start = provider.now();\r\n\r\n    let id = 0;\r\n    const run = () => {\r\n      if (!subscriber.closed) {\r\n        id = animationFrameProvider.requestAnimationFrame((timestamp: DOMHighResTimeStamp | number) => {\r\n          id = 0;\r\n          // Use the provider's timestamp to calculate the elapsed time. Note that\r\n          // this means - if the caller hasn't passed a provider - that\r\n          // performance.now() will be used instead of the timestamp that was\r\n          // passed to the run callback. The reason for this is that the timestamp\r\n          // passed to the callback can be earlier than the start time, as it\r\n          // represents the time at which the browser decided it would render any\r\n          // queued frames - and that time can be earlier the captured start time.\r\n          const now = provider.now();\r\n          subscriber.next({\r\n            timestamp: timestampProvider ? now : timestamp,\r\n            elapsed: now - start,\r\n          });\r\n          run();\r\n        });\r\n      }\r\n    };\r\n\r\n    run();\r\n\r\n    return () => {\r\n      if (id) {\r\n        animationFrameProvider.cancelAnimationFrame(id);\r\n      }\r\n    };\r\n  });\r\n}\r\n\r\n/**\r\n * In the common case, where the timestamp provided by the rAF API is used,\r\n * we use this shared observable to reduce overhead.\r\n */\r\nconst DEFAULT_ANIMATION_FRAMES = animationFramesFactory();\r\n", "import { createErrorClass } from './createErrorClass';\r\n\r\nexport interface ObjectUnsubscribedError extends Error {}\r\n\r\nexport interface ObjectUnsubscribedErrorCtor {\r\n  /**\r\n   * @deprecated Internal implementation detail. Do not construct error instances.\r\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\r\n   */\r\n  new (): ObjectUnsubscribedError;\r\n}\r\n\r\n/**\r\n * An error thrown when an action is invalid because the object has been\r\n * unsubscribed.\r\n *\r\n * @see {@link Subject}\r\n * @see {@link BehaviorSubject}\r\n *\r\n * @class ObjectUnsubscribedError\r\n */\r\nexport const ObjectUnsubscribedError: ObjectUnsubscribedErrorCtor = createErrorClass(\r\n  (_super) =>\r\n    function ObjectUnsubscribedErrorImpl(this: any) {\r\n      _super(this);\r\n      this.name = 'ObjectUnsubscribedError';\r\n      this.message = 'object unsubscribed';\r\n    }\r\n);\r\n", "import { Operator } from './Operator';\r\nimport { Observable } from './Observable';\r\nimport { Subscriber } from './Subscriber';\r\nimport { Subscription, EMPTY_SUBSCRIPTION } from './Subscription';\r\nimport { Observer, SubscriptionLike, TeardownLogic } from './types';\r\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\r\nimport { arrRemove } from './util/arrRemove';\r\nimport { errorContext } from './util/errorContext';\r\n\r\n/**\r\n * A Subject is a special type of Observable that allows values to be\r\n * multicasted to many Observers. Subjects are like EventEmitters.\r\n *\r\n * Every Subject is an Observable and an Observer. You can subscribe to a\r\n * Subject, and you can call next to feed values as well as error and complete.\r\n */\r\nexport class Subject<T> extends Observable<T> implements SubscriptionLike {\r\n  closed = false;\r\n\r\n  private currentObservers: Observer<T>[] | null = null;\r\n\r\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\r\n  observers: Observer<T>[] = [];\r\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\r\n  isStopped = false;\r\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\r\n  hasError = false;\r\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\r\n  thrownError: any = null;\r\n\r\n  /**\r\n   * Creates a \"subject\" by basically gluing an observer to an observable.\r\n   *\r\n   * @nocollapse\r\n   * @deprecated Recommended you do not use. Will be removed at some point in the future. Plans for replacement still under discussion.\r\n   */\r\n  static create: (...args: any[]) => any = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {\r\n    return new AnonymousSubject<T>(destination, source);\r\n  };\r\n\r\n  constructor() {\r\n    // NOTE: This must be here to obscure Observable's constructor.\r\n    super();\r\n  }\r\n\r\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\r\n  lift<R>(operator: Operator<T, R>): Observable<R> {\r\n    const subject = new AnonymousSubject(this, this);\r\n    subject.operator = operator as any;\r\n    return subject as any;\r\n  }\r\n\r\n  /** @internal */\r\n  protected _throwIfClosed() {\r\n    if (this.closed) {\r\n      throw new ObjectUnsubscribedError();\r\n    }\r\n  }\r\n\r\n  next(value: T) {\r\n    errorContext(() => {\r\n      this._throwIfClosed();\r\n      if (!this.isStopped) {\r\n        if (!this.currentObservers) {\r\n          this.currentObservers = Array.from(this.observers);\r\n        }\r\n        for (const observer of this.currentObservers) {\r\n          observer.next(value);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  error(err: any) {\r\n    errorContext(() => {\r\n      this._throwIfClosed();\r\n      if (!this.isStopped) {\r\n        this.hasError = this.isStopped = true;\r\n        this.thrownError = err;\r\n        const { observers } = this;\r\n        while (observers.length) {\r\n          observers.shift()!.error(err);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  complete() {\r\n    errorContext(() => {\r\n      this._throwIfClosed();\r\n      if (!this.isStopped) {\r\n        this.isStopped = true;\r\n        const { observers } = this;\r\n        while (observers.length) {\r\n          observers.shift()!.complete();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  unsubscribe() {\r\n    this.isStopped = this.closed = true;\r\n    this.observers = this.currentObservers = null!;\r\n  }\r\n\r\n  get observed() {\r\n    return this.observers?.length > 0;\r\n  }\r\n\r\n  /** @internal */\r\n  protected _trySubscribe(subscriber: Subscriber<T>): TeardownLogic {\r\n    this._throwIfClosed();\r\n    return super._trySubscribe(subscriber);\r\n  }\r\n\r\n  /** @internal */\r\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\r\n    this._throwIfClosed();\r\n    this._checkFinalizedStatuses(subscriber);\r\n    return this._innerSubscribe(subscriber);\r\n  }\r\n\r\n  /** @internal */\r\n  protected _innerSubscribe(subscriber: Subscriber<any>) {\r\n    const { hasError, isStopped, observers } = this;\r\n    if (hasError || isStopped) {\r\n      return EMPTY_SUBSCRIPTION;\r\n    }\r\n    this.currentObservers = null;\r\n    observers.push(subscriber);\r\n    return new Subscription(() => {\r\n      this.currentObservers = null;\r\n      arrRemove(observers, subscriber);\r\n    });\r\n  }\r\n\r\n  /** @internal */\r\n  protected _checkFinalizedStatuses(subscriber: Subscriber<any>) {\r\n    const { hasError, thrownError, isStopped } = this;\r\n    if (hasError) {\r\n      subscriber.error(thrownError);\r\n    } else if (isStopped) {\r\n      subscriber.complete();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates a new Observable with this Subject as the source. You can do this\r\n   * to create custom Observer-side logic of the Subject and conceal it from\r\n   * code that uses the Observable.\r\n   * @return {Observable} Observable that the Subject casts to\r\n   */\r\n  asObservable(): Observable<T> {\r\n    const observable: any = new Observable<T>();\r\n    observable.source = this;\r\n    return observable;\r\n  }\r\n}\r\n\r\n/**\r\n * @class AnonymousSubject<T>\r\n */\r\nexport class AnonymousSubject<T> extends Subject<T> {\r\n  constructor(\r\n    /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\r\n    public destination?: Observer<T>,\r\n    source?: Observable<T>\r\n  ) {\r\n    super();\r\n    this.source = source;\r\n  }\r\n\r\n  next(value: T) {\r\n    this.destination?.next?.(value);\r\n  }\r\n\r\n  error(err: any) {\r\n    this.destination?.error?.(err);\r\n  }\r\n\r\n  complete() {\r\n    this.destination?.complete?.();\r\n  }\r\n\r\n  /** @internal */\r\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\r\n    return this.source?.subscribe(subscriber) ?? EMPTY_SUBSCRIPTION;\r\n  }\r\n}\r\n", "import { Subject } from './Subject';\r\nimport { Subscriber } from './Subscriber';\r\nimport { Subscription } from './Subscription';\r\n\r\n/**\r\n * A variant of Subject that requires an initial value and emits its current\r\n * value whenever it is subscribed to.\r\n *\r\n * @class BehaviorSubject<T>\r\n */\r\nexport class BehaviorSubject<T> extends Subject<T> {\r\n  constructor(private _value: T) {\r\n    super();\r\n  }\r\n\r\n  get value(): T {\r\n    return this.getValue();\r\n  }\r\n\r\n  /** @internal */\r\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\r\n    const subscription = super._subscribe(subscriber);\r\n    !subscription.closed && subscriber.next(this._value);\r\n    return subscription;\r\n  }\r\n\r\n  getValue(): T {\r\n    const { hasError, thrownError, _value } = this;\r\n    if (hasError) {\r\n      throw thrownError;\r\n    }\r\n    this._throwIfClosed();\r\n    return _value;\r\n  }\r\n\r\n  next(value: T): void {\r\n    super.next((this._value = value));\r\n  }\r\n}\r\n", "import { TimestampProvider } from '../types';\r\n\r\ninterface DateTimestampProvider extends TimestampProvider {\r\n  delegate: TimestampProvider | undefined;\r\n}\r\n\r\nexport const dateTimestampProvider: DateTimestampProvider = {\r\n  now() {\r\n    // Use the variable rather than `this` so that the function can be called\r\n    // without being bound to the provider.\r\n    return (dateTimestampProvider.delegate || Date).now();\r\n  },\r\n  delegate: undefined,\r\n};\r\n", "import { Subject } from './Subject';\r\nimport { TimestampProvider } from './types';\r\nimport { Subscriber } from './Subscriber';\r\nimport { Subscription } from './Subscription';\r\nimport { dateTimestampProvider } from './scheduler/dateTimestampProvider';\r\n\r\n/**\r\n * A variant of {@link Subject} that \"replays\" old values to new subscribers by emitting them when they first subscribe.\r\n *\r\n * `ReplaySubject` has an internal buffer that will store a specified number of values that it has observed. Like `Subject`,\r\n * `ReplaySubject` \"observes\" values by having them passed to its `next` method. When it observes a value, it will store that\r\n * value for a time determined by the configuration of the `ReplaySubject`, as passed to its constructor.\r\n *\r\n * When a new subscriber subscribes to the `ReplaySubject` instance, it will synchronously emit all values in its buffer in\r\n * a First-In-First-Out (FIFO) manner. The `ReplaySubject` will also complete, if it has observed completion; and it will\r\n * error if it has observed an error.\r\n *\r\n * There are two main configuration items to be concerned with:\r\n *\r\n * 1. `bufferSize` - This will determine how many items are stored in the buffer, defaults to infinite.\r\n * 2. `windowTime` - The amount of time to hold a value in the buffer before removing it from the buffer.\r\n *\r\n * Both configurations may exist simultaneously. So if you would like to buffer a maximum of 3 values, as long as the values\r\n * are less than 2 seconds old, you could do so with a `new ReplaySubject(3, 2000)`.\r\n *\r\n * ### Differences with BehaviorSubject\r\n *\r\n * `BehaviorSubject` is similar to `new ReplaySubject(1)`, with a couple of exceptions:\r\n *\r\n * 1. `BehaviorSubject` comes \"primed\" with a single value upon construction.\r\n * 2. `ReplaySubject` will replay values, even after observing an error, where `BehaviorSubject` will not.\r\n *\r\n * @see {@link Subject}\r\n * @see {@link BehaviorSubject}\r\n * @see {@link shareReplay}\r\n */\r\nexport class ReplaySubject<T> extends Subject<T> {\r\n  private _buffer: (T | number)[] = [];\r\n  private _infiniteTimeWindow = true;\r\n\r\n  /**\r\n   * @param bufferSize The size of the buffer to replay on subscription\r\n   * @param windowTime The amount of time the buffered items will stay buffered\r\n   * @param timestampProvider An object with a `now()` method that provides the current timestamp. This is used to\r\n   * calculate the amount of time something has been buffered.\r\n   */\r\n  constructor(\r\n    private _bufferSize = Infinity,\r\n    private _windowTime = Infinity,\r\n    private _timestampProvider: TimestampProvider = dateTimestampProvider\r\n  ) {\r\n    super();\r\n    this._infiniteTimeWindow = _windowTime === Infinity;\r\n    this._bufferSize = Math.max(1, _bufferSize);\r\n    this._windowTime = Math.max(1, _windowTime);\r\n  }\r\n\r\n  next(value: T): void {\r\n    const { isStopped, _buffer, _infiniteTimeWindow, _timestampProvider, _windowTime } = this;\r\n    if (!isStopped) {\r\n      _buffer.push(value);\r\n      !_infiniteTimeWindow && _buffer.push(_timestampProvider.now() + _windowTime);\r\n    }\r\n    this._trimBuffer();\r\n    super.next(value);\r\n  }\r\n\r\n  /** @internal */\r\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\r\n    this._throwIfClosed();\r\n    this._trimBuffer();\r\n\r\n    const subscription = this._innerSubscribe(subscriber);\r\n\r\n    const { _infiniteTimeWindow, _buffer } = this;\r\n    // We use a copy here, so reentrant code does not mutate our array while we're\r\n    // emitting it to a new subscriber.\r\n    const copy = _buffer.slice();\r\n    for (let i = 0; i < copy.length && !subscriber.closed; i += _infiniteTimeWindow ? 1 : 2) {\r\n      subscriber.next(copy[i] as T);\r\n    }\r\n\r\n    this._checkFinalizedStatuses(subscriber);\r\n\r\n    return subscription;\r\n  }\r\n\r\n  private _trimBuffer() {\r\n    const { _bufferSize, _timestampProvider, _buffer, _infiniteTimeWindow } = this;\r\n    // If we don't have an infinite buffer size, and we're over the length,\r\n    // use splice to truncate the old buffer values off. Note that we have to\r\n    // double the size for instances where we're not using an infinite time window\r\n    // because we're storing the values and the timestamps in the same array.\r\n    const adjustedBufferSize = (_infiniteTimeWindow ? 1 : 2) * _bufferSize;\r\n    _bufferSize < Infinity && adjustedBufferSize < _buffer.length && _buffer.splice(0, _buffer.length - adjustedBufferSize);\r\n\r\n    // Now, if we're not in an infinite time window, remove all values where the time is\r\n    // older than what is allowed.\r\n    if (!_infiniteTimeWindow) {\r\n      const now = _timestampProvider.now();\r\n      let last = 0;\r\n      // Search the array for the first timestamp that isn't expired and\r\n      // truncate the buffer up to that point.\r\n      for (let i = 1; i < _buffer.length && (_buffer[i] as number) <= now; i += 2) {\r\n        last = i;\r\n      }\r\n      last && _buffer.splice(0, last + 1);\r\n    }\r\n  }\r\n}\r\n", "import { Subject } from './Subject';\r\nimport { Subscriber } from './Subscriber';\r\n\r\n/**\r\n * A variant of Subject that only emits a value when it completes. It will emit\r\n * its latest value to all its observers on completion.\r\n *\r\n * @class AsyncSubject<T>\r\n */\r\nexport class AsyncSubject<T> extends Subject<T> {\r\n  private _value: T | null = null;\r\n  private _hasValue = false;\r\n  private _isComplete = false;\r\n\r\n  /** @internal */\r\n  protected _checkFinalizedStatuses(subscriber: Subscriber<T>) {\r\n    const { hasError, _hasValue, _value, thrownError, isStopped, _isComplete } = this;\r\n    if (hasError) {\r\n      subscriber.error(thrownError);\r\n    } else if (isStopped || _isComplete) {\r\n      _hasValue && subscriber.next(_value!);\r\n      subscriber.complete();\r\n    }\r\n  }\r\n\r\n  next(value: T): void {\r\n    if (!this.isStopped) {\r\n      this._value = value;\r\n      this._hasValue = true;\r\n    }\r\n  }\r\n\r\n  complete(): void {\r\n    const { _hasValue, _value, _isComplete } = this;\r\n    if (!_isComplete) {\r\n      this._isComplete = true;\r\n      _hasValue && super.next(_value!);\r\n      super.complete();\r\n    }\r\n  }\r\n}\r\n", "import { Scheduler } from '../Scheduler';\r\nimport { Subscription } from '../Subscription';\r\nimport { SchedulerAction } from '../types';\r\n\r\n/**\r\n * A unit of work to be executed in a `scheduler`. An action is typically\r\n * created from within a {@link SchedulerLike} and an RxJS user does not need to concern\r\n * themselves about creating and manipulating an Action.\r\n *\r\n * ```ts\r\n * class Action<T> extends Subscription {\r\n *   new (scheduler: Scheduler, work: (state?: T) => void);\r\n *   schedule(state?: T, delay: number = 0): Subscription;\r\n * }\r\n * ```\r\n *\r\n * @class Action<T>\r\n */\r\nexport class Action<T> extends Subscription {\r\n  constructor(scheduler: Scheduler, work: (this: SchedulerAction<T>, state?: T) => void) {\r\n    super();\r\n  }\r\n  /**\r\n   * Schedules this action on its parent {@link SchedulerLike} for execution. May be passed\r\n   * some context object, `state`. May happen at some point in the future,\r\n   * according to the `delay` parameter, if specified.\r\n   * @param {T} [state] Some contextual data that the `work` function uses when\r\n   * called by the Scheduler.\r\n   * @param {number} [delay] Time to wait before executing the work, where the\r\n   * time unit is implicit and defined by the Scheduler.\r\n   * @return {void}\r\n   */\r\n  public schedule(state?: T, delay: number = 0): Subscription {\r\n    return this;\r\n  }\r\n}\r\n", "import type { TimerHandle } from './timerHandle';\r\ntype SetIntervalFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;\r\ntype ClearIntervalFunction = (handle: TimerHandle) => void;\r\n\r\ninterface IntervalProvider {\r\n  setInterval: SetIntervalFunction;\r\n  clearInterval: ClearIntervalFunction;\r\n  delegate:\r\n    | {\r\n        setInterval: SetIntervalFunction;\r\n        clearInterval: ClearIntervalFunction;\r\n      }\r\n    | undefined;\r\n}\r\n\r\nexport const intervalProvider: IntervalProvider = {\r\n  // When accessing the delegate, use the variable rather than `this` so that\r\n  // the functions can be called without being bound to the provider.\r\n  setInterval(handler: () => void, timeout?: number, ...args) {\r\n    const { delegate } = intervalProvider;\r\n    if (delegate?.setInterval) {\r\n      return delegate.setInterval(handler, timeout, ...args);\r\n    }\r\n    return setInterval(handler, timeout, ...args);\r\n  },\r\n  clearInterval(handle) {\r\n    const { delegate } = intervalProvider;\r\n    return (delegate?.clearInterval || clearInterval)(handle as any);\r\n  },\r\n  delegate: undefined,\r\n};\r\n", "import { Action } from './Action';\r\nimport { SchedulerAction } from '../types';\r\nimport { Subscription } from '../Subscription';\r\nimport { AsyncScheduler } from './AsyncScheduler';\r\nimport { intervalProvider } from './intervalProvider';\r\nimport { arrRemove } from '../util/arrRemove';\r\nimport { TimerHandle } from './timerHandle';\r\n\r\nexport class AsyncAction<T> extends Action<T> {\r\n  public id: TimerHandle | undefined;\r\n  public state?: T;\r\n  // @ts-ignore: Property has no initializer and is not definitely assigned\r\n  public delay: number;\r\n  protected pending: boolean = false;\r\n\r\n  constructor(protected scheduler: AsyncScheduler, protected work: (this: SchedulerAction<T>, state?: T) => void) {\r\n    super(scheduler, work);\r\n  }\r\n\r\n  public schedule(state?: T, delay: number = 0): Subscription {\r\n    if (this.closed) {\r\n      return this;\r\n    }\r\n\r\n    // Always replace the current state with the new state.\r\n    this.state = state;\r\n\r\n    const id = this.id;\r\n    const scheduler = this.scheduler;\r\n\r\n    //\r\n    // Important implementation note:\r\n    //\r\n    // Actions only execute once by default, unless rescheduled from within the\r\n    // scheduled callback. This allows us to implement single and repeat\r\n    // actions via the same code path, without adding API surface area, as well\r\n    // as mimic traditional recursion but across asynchronous boundaries.\r\n    //\r\n    // However, JS runtimes and timers distinguish between intervals achieved by\r\n    // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\r\n    // serial `setTimeout` calls can be individually delayed, which delays\r\n    // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\r\n    // guarantee the interval callback will be invoked more precisely to the\r\n    // interval period, regardless of load.\r\n    //\r\n    // Therefore, we use `setInterval` to schedule single and repeat actions.\r\n    // If the action reschedules itself with the same delay, the interval is not\r\n    // canceled. If the action doesn't reschedule, or reschedules with a\r\n    // different delay, the interval will be canceled after scheduled callback\r\n    // execution.\r\n    //\r\n    if (id != null) {\r\n      this.id = this.recycleAsyncId(scheduler, id, delay);\r\n    }\r\n\r\n    // Set the pending flag indicating that this action has been scheduled, or\r\n    // has recursively rescheduled itself.\r\n    this.pending = true;\r\n\r\n    this.delay = delay;\r\n    // If this action has already an async Id, don't request a new one.\r\n    this.id = this.id ?? this.requestAsyncId(scheduler, this.id, delay);\r\n\r\n    return this;\r\n  }\r\n\r\n  protected requestAsyncId(scheduler: AsyncScheduler, _id?: TimerHandle, delay: number = 0): TimerHandle {\r\n    return intervalProvider.setInterval(scheduler.flush.bind(scheduler, this), delay);\r\n  }\r\n\r\n  protected recycleAsyncId(_scheduler: AsyncScheduler, id?: TimerHandle, delay: number | null = 0): TimerHandle | undefined {\r\n    // If this action is rescheduled with the same delay time, don't clear the interval id.\r\n    if (delay != null && this.delay === delay && this.pending === false) {\r\n      return id;\r\n    }\r\n    // Otherwise, if the action's delay time is different from the current delay,\r\n    // or the action has been rescheduled before it's executed, clear the interval id\r\n    if (id != null) {\r\n      intervalProvider.clearInterval(id);\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n\r\n  /**\r\n   * Immediately executes this action and the `work` it contains.\r\n   * @return {any}\r\n   */\r\n  public execute(state: T, delay: number): any {\r\n    if (this.closed) {\r\n      return new Error('executing a cancelled action');\r\n    }\r\n\r\n    this.pending = false;\r\n    const error = this._execute(state, delay);\r\n    if (error) {\r\n      return error;\r\n    } else if (this.pending === false && this.id != null) {\r\n      // Dequeue if the action didn't reschedule itself. Don't call\r\n      // unsubscribe(), because the action could reschedule later.\r\n      // For example:\r\n      // ```\r\n      // scheduler.schedule(function doWork(counter) {\r\n      //   /* ... I'm a busy worker bee ... */\r\n      //   var originalAction = this;\r\n      //   /* wait 100ms before rescheduling the action */\r\n      //   setTimeout(function () {\r\n      //     originalAction.schedule(counter + 1);\r\n      //   }, 100);\r\n      // }, 1000);\r\n      // ```\r\n      this.id = this.recycleAsyncId(this.scheduler, this.id, null);\r\n    }\r\n  }\r\n\r\n  protected _execute(state: T, _delay: number): any {\r\n    let errored: boolean = false;\r\n    let errorValue: any;\r\n    try {\r\n      this.work(state);\r\n    } catch (e) {\r\n      errored = true;\r\n      // HACK: Since code elsewhere is relying on the \"truthiness\" of the\r\n      // return here, we can't have it return \"\" or 0 or false.\r\n      // TODO: Clean this up when we refactor schedulers mid-version-8 or so.\r\n      errorValue = e ? e : new Error('Scheduled action threw falsy error');\r\n    }\r\n    if (errored) {\r\n      this.unsubscribe();\r\n      return errorValue;\r\n    }\r\n  }\r\n\r\n  unsubscribe() {\r\n    if (!this.closed) {\r\n      const { id, scheduler } = this;\r\n      const { actions } = scheduler;\r\n\r\n      this.work = this.state = this.scheduler = null!;\r\n      this.pending = false;\r\n\r\n      arrRemove(actions, this);\r\n      if (id != null) {\r\n        this.id = this.recycleAsyncId(scheduler, id, null);\r\n      }\r\n\r\n      this.delay = null!;\r\n      super.unsubscribe();\r\n    }\r\n  }\r\n}\r\n", "let nextHandle = 1;\r\n// The promise needs to be created lazily otherwise it won't be patched by Zones\r\nlet resolved: Promise<any>;\r\nconst activeHandles: { [key: number]: any } = {};\r\n\r\n/**\r\n * Finds the handle in the list of active handles, and removes it.\r\n * Returns `true` if found, `false` otherwise. Used both to clear\r\n * Immediate scheduled tasks, and to identify if a task should be scheduled.\r\n */\r\nfunction findAndClearHandle(handle: number): boolean {\r\n  if (handle in activeHandles) {\r\n    delete activeHandles[handle];\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * Helper functions to schedule and unschedule microtasks.\r\n */\r\nexport const Immediate = {\r\n  setImmediate(cb: () => void): number {\r\n    const handle = nextHandle++;\r\n    activeHandles[handle] = true;\r\n    if (!resolved) {\r\n      resolved = Promise.resolve();\r\n    }\r\n    resolved.then(() => findAndClearHandle(handle) && cb());\r\n    return handle;\r\n  },\r\n\r\n  clearImmediate(handle: number): void {\r\n    findAndClearHandle(handle);\r\n  },\r\n};\r\n\r\n/**\r\n * Used for internal testing purposes only. Do not export from library.\r\n */\r\nexport const TestTools = {\r\n  pending() {\r\n    return Object.keys(activeHandles).length;\r\n  }\r\n};\r\n", "import { Immediate } from '../util/Immediate';\r\nimport type { TimerHandle } from './timerHandle';\r\nconst { setImmediate, clearImmediate } = Immediate;\r\n\r\ntype SetImmediateFunction = (handler: () => void, ...args: any[]) => TimerHandle;\r\ntype ClearImmediateFunction = (handle: TimerHandle) => void;\r\n\r\ninterface ImmediateProvider {\r\n  setImmediate: SetImmediateFunction;\r\n  clearImmediate: ClearImmediateFunction;\r\n  delegate:\r\n    | {\r\n        setImmediate: SetImmediateFunction;\r\n        clearImmediate: ClearImmediateFunction;\r\n      }\r\n    | undefined;\r\n}\r\n\r\nexport const immediateProvider: ImmediateProvider = {\r\n  // When accessing the delegate, use the variable rather than `this` so that\r\n  // the functions can be called without being bound to the provider.\r\n  setImmediate(...args) {\r\n    const { delegate } = immediateProvider;\r\n    return (delegate?.setImmediate || setImmediate)(...args);\r\n  },\r\n  clearImmediate(handle) {\r\n    const { delegate } = immediateProvider;\r\n    return (delegate?.clearImmediate || clearImmediate)(handle as any);\r\n  },\r\n  delegate: undefined,\r\n};\r\n", "import { AsyncAction } from './AsyncAction';\r\nimport { AsapScheduler } from './AsapScheduler';\r\nimport { SchedulerAction } from '../types';\r\nimport { immediateProvider } from './immediateProvider';\r\nimport { TimerHandle } from './timerHandle';\r\n\r\nexport class AsapAction<T> extends AsyncAction<T> {\r\n  constructor(protected scheduler: AsapScheduler, protected work: (this: SchedulerAction<T>, state?: T) => void) {\r\n    super(scheduler, work);\r\n  }\r\n\r\n  protected requestAsyncId(scheduler: AsapScheduler, id?: TimerHandle, delay: number = 0): TimerHandle {\r\n    // If delay is greater than 0, request as an async action.\r\n    if (delay !== null && delay > 0) {\r\n      return super.requestAsyncId(scheduler, id, delay);\r\n    }\r\n    // Push the action to the end of the scheduler queue.\r\n    scheduler.actions.push(this);\r\n    // If a microtask has already been scheduled, don't schedule another\r\n    // one. If a microtask hasn't been scheduled yet, schedule one now. Return\r\n    // the current scheduled microtask id.\r\n    return scheduler._scheduled || (scheduler._scheduled = immediateProvider.setImmediate(scheduler.flush.bind(scheduler, undefined)));\r\n  }\r\n\r\n  protected recycleAsyncId(scheduler: AsapScheduler, id?: TimerHandle, delay: number = 0): TimerHandle | undefined {\r\n    // If delay exists and is greater than 0, or if the delay is null (the\r\n    // action wasn't rescheduled) but was originally scheduled as an async\r\n    // action, then recycle as an async action.\r\n    if (delay != null ? delay > 0 : this.delay > 0) {\r\n      return super.recycleAsyncId(scheduler, id, delay);\r\n    }\r\n    // If the scheduler queue has no remaining actions with the same async id,\r\n    // cancel the requested microtask and set the scheduled flag to undefined\r\n    // so the next AsapAction will request its own.\r\n    const { actions } = scheduler;\r\n    if (id != null && actions[actions.length - 1]?.id !== id) {\r\n      immediateProvider.clearImmediate(id);\r\n      if (scheduler._scheduled === id) {\r\n        scheduler._scheduled = undefined;\r\n      }\r\n    }\r\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\r\n    return undefined;\r\n  }\r\n}\r\n", "import { Action } from './scheduler/Action';\r\nimport { Subscription } from './Subscription';\r\nimport { SchedulerLike, SchedulerAction } from './types';\r\nimport { dateTimestampProvider } from './scheduler/dateTimestampProvider';\r\n\r\n/**\r\n * An execution context and a data structure to order tasks and schedule their\r\n * execution. Provides a notion of (potentially virtual) time, through the\r\n * `now()` getter method.\r\n *\r\n * Each unit of work in a Scheduler is called an `Action`.\r\n *\r\n * ```ts\r\n * class Scheduler {\r\n *   now(): number;\r\n *   schedule(work, delay?, state?): Subscription;\r\n * }\r\n * ```\r\n *\r\n * @class Scheduler\r\n * @deprecated Scheduler is an internal implementation detail of RxJS, and\r\n * should not be used directly. Rather, create your own class and implement\r\n * {@link SchedulerLike}. Will be made internal in v8.\r\n */\r\nexport class Scheduler implements SchedulerLike {\r\n  public static now: () => number = dateTimestampProvider.now;\r\n\r\n  constructor(private schedulerActionCtor: typeof Action, now: () => number = Scheduler.now) {\r\n    this.now = now;\r\n  }\r\n\r\n  /**\r\n   * A getter method that returns a number representing the current time\r\n   * (at the time this function was called) according to the scheduler's own\r\n   * internal clock.\r\n   * @return {number} A number that represents the current time. May or may not\r\n   * have a relation to wall-clock time. May or may not refer to a time unit\r\n   * (e.g. milliseconds).\r\n   */\r\n  public now: () => number;\r\n\r\n  /**\r\n   * Schedules a function, `work`, for execution. May happen at some point in\r\n   * the future, according to the `delay` parameter, if specified. May be passed\r\n   * some context object, `state`, which will be passed to the `work` function.\r\n   *\r\n   * The given arguments will be processed an stored as an Action object in a\r\n   * queue of actions.\r\n   *\r\n   * @param {function(state: ?T): ?Subscription} work A function representing a\r\n   * task, or some unit of work to be executed by the Scheduler.\r\n   * @param {number} [delay] Time to wait before executing the work, where the\r\n   * time unit is implicit and defined by the Scheduler itself.\r\n   * @param {T} [state] Some contextual data that the `work` function uses when\r\n   * called by the Scheduler.\r\n   * @return {Subscription} A subscription in order to be able to unsubscribe\r\n   * the scheduled work.\r\n   */\r\n  public schedule<T>(work: (this: SchedulerAction<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\r\n    return new this.schedulerActionCtor<T>(this, work).schedule(state, delay);\r\n  }\r\n}\r\n", "import { Scheduler } from '../Scheduler';\r\nimport { Action } from './Action';\r\nimport { AsyncAction } from './AsyncAction';\r\nimport { TimerHandle } from './timerHandle';\r\n\r\nexport class AsyncScheduler extends Scheduler {\r\n  public actions: Array<AsyncAction<any>> = [];\r\n  /**\r\n   * A flag to indicate whether the Scheduler is currently executing a batch of\r\n   * queued actions.\r\n   * @type {boolean}\r\n   * @internal\r\n   */\r\n  public _active: boolean = false;\r\n  /**\r\n   * An internal ID used to track the latest asynchronous task such as those\r\n   * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\r\n   * others.\r\n   * @type {any}\r\n   * @internal\r\n   */\r\n  public _scheduled: TimerHandle | undefined;\r\n\r\n  constructor(SchedulerAction: typeof Action, now: () => number = Scheduler.now) {\r\n    super(SchedulerAction, now);\r\n  }\r\n\r\n  public flush(action: AsyncAction<any>): void {\r\n    const { actions } = this;\r\n\r\n    if (this._active) {\r\n      actions.push(action);\r\n      return;\r\n    }\r\n\r\n    let error: any;\r\n    this._active = true;\r\n\r\n    do {\r\n      if ((error = action.execute(action.state, action.delay))) {\r\n        break;\r\n      }\r\n    } while ((action = actions.shift()!)); // exhaust the scheduler queue\r\n\r\n    this._active = false;\r\n\r\n    if (error) {\r\n      while ((action = actions.shift()!)) {\r\n        action.unsubscribe();\r\n      }\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n", "import { AsyncAction } from './AsyncAction';\r\nimport { AsyncScheduler } from './AsyncScheduler';\r\n\r\nexport class AsapScheduler extends AsyncScheduler {\r\n  public flush(action?: AsyncAction<any>): void {\r\n    this._active = true;\r\n    // The async id that effects a call to flush is stored in _scheduled.\r\n    // Before executing an action, it's necessary to check the action's async\r\n    // id to determine whether it's supposed to be executed in the current\r\n    // flush.\r\n    // Previous implementations of this method used a count to determine this,\r\n    // but that was unsound, as actions that are unsubscribed - i.e. cancelled -\r\n    // are removed from the actions array and that can shift actions that are\r\n    // scheduled to be executed in a subsequent flush into positions at which\r\n    // they are executed within the current flush.\r\n    const flushId = this._scheduled;\r\n    this._scheduled = undefined;\r\n\r\n    const { actions } = this;\r\n    let error: any;\r\n    action = action || actions.shift()!;\r\n\r\n    do {\r\n      if ((error = action.execute(action.state, action.delay))) {\r\n        break;\r\n      }\r\n    } while ((action = actions[0]) && action.id === flushId && actions.shift());\r\n\r\n    this._active = false;\r\n\r\n    if (error) {\r\n      while ((action = actions[0]) && action.id === flushId && actions.shift()) {\r\n        action.unsubscribe();\r\n      }\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n", "import { AsapAction } from './AsapAction';\r\nimport { AsapScheduler } from './AsapScheduler';\r\n\r\n/**\r\n *\r\n * Asap Scheduler\r\n *\r\n * <span class=\"informal\">Perform task as fast as it can be performed asynchronously</span>\r\n *\r\n * `asap` scheduler behaves the same as {@link asyncScheduler} scheduler when you use it to delay task\r\n * in time. If however you set delay to `0`, `asap` will wait for current synchronously executing\r\n * code to end and then it will try to execute given task as fast as possible.\r\n *\r\n * `asap` scheduler will do its best to minimize time between end of currently executing code\r\n * and start of scheduled task. This makes it best candidate for performing so called \"deferring\".\r\n * Traditionally this was achieved by calling `setTimeout(deferredTask, 0)`, but that technique involves\r\n * some (although minimal) unwanted delay.\r\n *\r\n * Note that using `asap` scheduler does not necessarily mean that your task will be first to process\r\n * after currently executing code. In particular, if some task was also scheduled with `asap` before,\r\n * that task will execute first. That being said, if you need to schedule task asynchronously, but\r\n * as soon as possible, `asap` scheduler is your best bet.\r\n *\r\n * ## Example\r\n * Compare async and asap scheduler<\r\n * ```ts\r\n * import { asapScheduler, asyncScheduler } from 'rxjs';\r\n *\r\n * asyncScheduler.schedule(() => console.log('async')); // scheduling 'async' first...\r\n * asapScheduler.schedule(() => console.log('asap'));\r\n *\r\n * // Logs:\r\n * // \"asap\"\r\n * // \"async\"\r\n * // ... but 'asap' goes first!\r\n * ```\r\n */\r\n\r\nexport const asapScheduler = new AsapScheduler(AsapAction);\r\n\r\n/**\r\n * @deprecated Renamed to {@link asapScheduler}. Will be removed in v8.\r\n */\r\nexport const asap = asapScheduler;\r\n", "import { AsyncAction } from './AsyncAction';\r\nimport { AsyncScheduler } from './AsyncScheduler';\r\n\r\n/**\r\n *\r\n * Async Scheduler\r\n *\r\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\r\n *\r\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\r\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\r\n * in intervals.\r\n *\r\n * If you just want to \"defer\" task, that is to perform it right after currently\r\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\r\n * better choice will be the {@link asapScheduler} scheduler.\r\n *\r\n * ## Examples\r\n * Use async scheduler to delay task\r\n * ```ts\r\n * import { asyncScheduler } from 'rxjs';\r\n *\r\n * const task = () => console.log('it works!');\r\n *\r\n * asyncScheduler.schedule(task, 2000);\r\n *\r\n * // After 2 seconds logs:\r\n * // \"it works!\"\r\n * ```\r\n *\r\n * Use async scheduler to repeat task in intervals\r\n * ```ts\r\n * import { asyncScheduler } from 'rxjs';\r\n *\r\n * function task(state) {\r\n *   console.log(state);\r\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\r\n *                                   // which we reschedule with new state and delay\r\n * }\r\n *\r\n * asyncScheduler.schedule(task, 3000, 0);\r\n *\r\n * // Logs:\r\n * // 0 after 3s\r\n * // 1 after 4s\r\n * // 2 after 5s\r\n * // 3 after 6s\r\n * ```\r\n */\r\n\r\nexport const asyncScheduler = new AsyncScheduler(AsyncAction);\r\n\r\n/**\r\n * @deprecated Renamed to {@link asyncScheduler}. Will be removed in v8.\r\n */\r\nexport const async = asyncScheduler;\r\n", "import { AsyncAction } from './AsyncAction';\r\nimport { Subscription } from '../Subscription';\r\nimport { QueueScheduler } from './QueueScheduler';\r\nimport { SchedulerAction } from '../types';\r\nimport { TimerHandle } from './timerHandle';\r\n\r\nexport class QueueAction<T> extends AsyncAction<T> {\r\n  constructor(protected scheduler: QueueScheduler, protected work: (this: SchedulerAction<T>, state?: T) => void) {\r\n    super(scheduler, work);\r\n  }\r\n\r\n  public schedule(state?: T, delay: number = 0): Subscription {\r\n    if (delay > 0) {\r\n      return super.schedule(state, delay);\r\n    }\r\n    this.delay = delay;\r\n    this.state = state;\r\n    this.scheduler.flush(this);\r\n    return this;\r\n  }\r\n\r\n  public execute(state: T, delay: number): any {\r\n    return delay > 0 || this.closed ? super.execute(state, delay) : this._execute(state, delay);\r\n  }\r\n\r\n  protected requestAsyncId(scheduler: QueueScheduler, id?: TimerHandle, delay: number = 0): TimerHandle {\r\n    // If delay exists and is greater than 0, or if the delay is null (the\r\n    // action wasn't rescheduled) but was originally scheduled as an async\r\n    // action, then recycle as an async action.\r\n\r\n    if ((delay != null && delay > 0) || (delay == null && this.delay > 0)) {\r\n      return super.requestAsyncId(scheduler, id, delay);\r\n    }\r\n\r\n    // Otherwise flush the scheduler starting with this action.\r\n    scheduler.flush(this);\r\n\r\n    // HACK: In the past, this was returning `void`. However, `void` isn't a valid\r\n    // `TimerHandle`, and generally the return value here isn't really used. So the\r\n    // compromise is to return `0` which is both \"falsy\" and a valid `TimerHandle`,\r\n    // as opposed to refactoring every other instanceo of `requestAsyncId`.\r\n    return 0;\r\n  }\r\n}\r\n", "import { AsyncScheduler } from './AsyncScheduler';\r\n\r\nexport class QueueScheduler extends AsyncScheduler {\r\n}\r\n", "import { QueueAction } from './QueueAction';\r\nimport { QueueScheduler } from './QueueScheduler';\r\n\r\n/**\r\n *\r\n * Queue Scheduler\r\n *\r\n * <span class=\"informal\">Put every next task on a queue, instead of executing it immediately</span>\r\n *\r\n * `queue` scheduler, when used with delay, behaves the same as {@link asyncScheduler} scheduler.\r\n *\r\n * When used without delay, it schedules given task synchronously - executes it right when\r\n * it is scheduled. However when called recursively, that is when inside the scheduled task,\r\n * another task is scheduled with queue scheduler, instead of executing immediately as well,\r\n * that task will be put on a queue and wait for current one to finish.\r\n *\r\n * This means that when you execute task with `queue` scheduler, you are sure it will end\r\n * before any other task scheduled with that scheduler will start.\r\n *\r\n * ## Examples\r\n * Schedule recursively first, then do something\r\n * ```ts\r\n * import { queueScheduler } from 'rxjs';\r\n *\r\n * queueScheduler.schedule(() => {\r\n *   queueScheduler.schedule(() => console.log('second')); // will not happen now, but will be put on a queue\r\n *\r\n *   console.log('first');\r\n * });\r\n *\r\n * // Logs:\r\n * // \"first\"\r\n * // \"second\"\r\n * ```\r\n *\r\n * Reschedule itself recursively\r\n * ```ts\r\n * import { queueScheduler } from 'rxjs';\r\n *\r\n * queueScheduler.schedule(function(state) {\r\n *   if (state !== 0) {\r\n *     console.log('before', state);\r\n *     this.schedule(state - 1); // `this` references currently executing Action,\r\n *                               // which we reschedule with new state\r\n *     console.log('after', state);\r\n *   }\r\n * }, 0, 3);\r\n *\r\n * // In scheduler that runs recursively, you would expect:\r\n * // \"before\", 3\r\n * // \"before\", 2\r\n * // \"before\", 1\r\n * // \"after\", 1\r\n * // \"after\", 2\r\n * // \"after\", 3\r\n *\r\n * // But with queue it logs:\r\n * // \"before\", 3\r\n * // \"after\", 3\r\n * // \"before\", 2\r\n * // \"after\", 2\r\n * // \"before\", 1\r\n * // \"after\", 1\r\n * ```\r\n */\r\n\r\nexport const queueScheduler = new QueueScheduler(QueueAction);\r\n\r\n/**\r\n * @deprecated Renamed to {@link queueScheduler}. Will be removed in v8.\r\n */\r\nexport const queue = queueScheduler;\r\n", "import { AsyncAction } from './AsyncAction';\r\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\r\nimport { SchedulerAction } from '../types';\r\nimport { animationFrameProvider } from './animationFrameProvider';\r\nimport { TimerHandle } from './timerHandle';\r\n\r\nexport class AnimationFrameAction<T> extends AsyncAction<T> {\r\n  constructor(protected scheduler: AnimationFrameScheduler, protected work: (this: SchedulerAction<T>, state?: T) => void) {\r\n    super(scheduler, work);\r\n  }\r\n\r\n  protected requestAsyncId(scheduler: AnimationFrameScheduler, id?: TimerHandle, delay: number = 0): TimerHandle {\r\n    // If delay is greater than 0, request as an async action.\r\n    if (delay !== null && delay > 0) {\r\n      return super.requestAsyncId(scheduler, id, delay);\r\n    }\r\n    // Push the action to the end of the scheduler queue.\r\n    scheduler.actions.push(this);\r\n    // If an animation frame has already been requested, don't request another\r\n    // one. If an animation frame hasn't been requested yet, request one. Return\r\n    // the current animation frame request id.\r\n    return scheduler._scheduled || (scheduler._scheduled = animationFrameProvider.requestAnimationFrame(() => scheduler.flush(undefined)));\r\n  }\r\n\r\n  protected recycleAsyncId(scheduler: AnimationFrameScheduler, id?: TimerHandle, delay: number = 0): TimerHandle | undefined {\r\n    // If delay exists and is greater than 0, or if the delay is null (the\r\n    // action wasn't rescheduled) but was originally scheduled as an async\r\n    // action, then recycle as an async action.\r\n    if (delay != null ? delay > 0 : this.delay > 0) {\r\n      return super.recycleAsyncId(scheduler, id, delay);\r\n    }\r\n    // If the scheduler queue has no remaining actions with the same async id,\r\n    // cancel the requested animation frame and set the scheduled flag to\r\n    // undefined so the next AnimationFrameAction will request its own.\r\n    const { actions } = scheduler;\r\n    if (id != null && actions[actions.length - 1]?.id !== id) {\r\n      animationFrameProvider.cancelAnimationFrame(id as number);\r\n      scheduler._scheduled = undefined;\r\n    }\r\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\r\n    return undefined;\r\n  }\r\n}\r\n", "import { AsyncAction } from './AsyncAction';\r\nimport { AsyncScheduler } from './AsyncScheduler';\r\n\r\nexport class AnimationFrameScheduler extends AsyncScheduler {\r\n  public flush(action?: AsyncAction<any>): void {\r\n    this._active = true;\r\n    // The async id that effects a call to flush is stored in _scheduled.\r\n    // Before executing an action, it's necessary to check the action's async\r\n    // id to determine whether it's supposed to be executed in the current\r\n    // flush.\r\n    // Previous implementations of this method used a count to determine this,\r\n    // but that was unsound, as actions that are unsubscribed - i.e. cancelled -\r\n    // are removed from the actions array and that can shift actions that are\r\n    // scheduled to be executed in a subsequent flush into positions at which\r\n    // they are executed within the current flush.\r\n    const flushId = this._scheduled;\r\n    this._scheduled = undefined;\r\n\r\n    const { actions } = this;\r\n    let error: any;\r\n    action = action || actions.shift()!;\r\n\r\n    do {\r\n      if ((error = action.execute(action.state, action.delay))) {\r\n        break;\r\n      }\r\n    } while ((action = actions[0]) && action.id === flushId && actions.shift());\r\n\r\n    this._active = false;\r\n\r\n    if (error) {\r\n      while ((action = actions[0]) && action.id === flushId && actions.shift()) {\r\n        action.unsubscribe();\r\n      }\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n", "import { AnimationFrameAction } from './AnimationFrameAction';\r\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\r\n\r\n/**\r\n *\r\n * Animation Frame Scheduler\r\n *\r\n * <span class=\"informal\">Perform task when `window.requestAnimationFrame` would fire</span>\r\n *\r\n * When `animationFrame` scheduler is used with delay, it will fall back to {@link asyncScheduler} scheduler\r\n * behaviour.\r\n *\r\n * Without delay, `animationFrame` scheduler can be used to create smooth browser animations.\r\n * It makes sure scheduled task will happen just before next browser content repaint,\r\n * thus performing animations as efficiently as possible.\r\n *\r\n * ## Example\r\n * Schedule div height animation\r\n * ```ts\r\n * // html: <div style=\"background: #0ff;\"></div>\r\n * import { animationFrameScheduler } from 'rxjs';\r\n *\r\n * const div = document.querySelector('div');\r\n *\r\n * animationFrameScheduler.schedule(function(height) {\r\n *   div.style.height = height + \"px\";\r\n *\r\n *   this.schedule(height + 1);  // `this` references currently executing Action,\r\n *                               // which we reschedule with new state\r\n * }, 0, 0);\r\n *\r\n * // You will see a div element growing in height\r\n * ```\r\n */\r\n\r\nexport const animationFrameScheduler = new AnimationFrameScheduler(AnimationFrameAction);\r\n\r\n/**\r\n * @deprecated Renamed to {@link animationFrameScheduler}. Will be removed in v8.\r\n */\r\nexport const animationFrame = animationFrameScheduler;\r\n", "import { AsyncAction } from './AsyncAction';\r\nimport { Subscription } from '../Subscription';\r\nimport { AsyncScheduler } from './AsyncScheduler';\r\nimport { SchedulerAction } from '../types';\r\nimport { TimerHandle } from './timerHandle';\r\n\r\nexport class VirtualTimeScheduler extends AsyncScheduler {\r\n  /** @deprecated Not used in VirtualTimeScheduler directly. Will be removed in v8. */\r\n  static frameTimeFactor = 10;\r\n\r\n  /**\r\n   * The current frame for the state of the virtual scheduler instance. The difference\r\n   * between two \"frames\" is synonymous with the passage of \"virtual time units\". So if\r\n   * you record `scheduler.frame` to be `1`, then later, observe `scheduler.frame` to be at `11`,\r\n   * that means `10` virtual time units have passed.\r\n   */\r\n  public frame: number = 0;\r\n\r\n  /**\r\n   * Used internally to examine the current virtual action index being processed.\r\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\r\n   */\r\n  public index: number = -1;\r\n\r\n  /**\r\n   * This creates an instance of a `VirtualTimeScheduler`. Experts only. The signature of\r\n   * this constructor is likely to change in the long run.\r\n   *\r\n   * @param schedulerActionCtor The type of Action to initialize when initializing actions during scheduling.\r\n   * @param maxFrames The maximum number of frames to process before stopping. Used to prevent endless flush cycles.\r\n   */\r\n  constructor(schedulerActionCtor: typeof AsyncAction = VirtualAction as any, public maxFrames: number = Infinity) {\r\n    super(schedulerActionCtor, () => this.frame);\r\n  }\r\n\r\n  /**\r\n   * Prompt the Scheduler to execute all of its queued actions, therefore\r\n   * clearing its queue.\r\n   * @return {void}\r\n   */\r\n  public flush(): void {\r\n    const { actions, maxFrames } = this;\r\n    let error: any;\r\n    let action: AsyncAction<any> | undefined;\r\n\r\n    while ((action = actions[0]) && action.delay <= maxFrames) {\r\n      actions.shift();\r\n      this.frame = action.delay;\r\n\r\n      if ((error = action.execute(action.state, action.delay))) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (error) {\r\n      while ((action = actions.shift())) {\r\n        action.unsubscribe();\r\n      }\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\nexport class VirtualAction<T> extends AsyncAction<T> {\r\n  protected active: boolean = true;\r\n\r\n  constructor(\r\n    protected scheduler: VirtualTimeScheduler,\r\n    protected work: (this: SchedulerAction<T>, state?: T) => void,\r\n    protected index: number = (scheduler.index += 1)\r\n  ) {\r\n    super(scheduler, work);\r\n    this.index = scheduler.index = index;\r\n  }\r\n\r\n  public schedule(state?: T, delay: number = 0): Subscription {\r\n    if (Number.isFinite(delay)) {\r\n      if (!this.id) {\r\n        return super.schedule(state, delay);\r\n      }\r\n      this.active = false;\r\n      // If an action is rescheduled, we save allocations by mutating its state,\r\n      // pushing it to the end of the scheduler queue, and recycling the action.\r\n      // But since the VirtualTimeScheduler is used for testing, VirtualActions\r\n      // must be immutable so they can be inspected later.\r\n      const action = new VirtualAction(this.scheduler, this.work);\r\n      this.add(action);\r\n      return action.schedule(state, delay);\r\n    } else {\r\n      // If someone schedules something with Infinity, it'll never happen. So we\r\n      // don't even schedule it.\r\n      return Subscription.EMPTY;\r\n    }\r\n  }\r\n\r\n  protected requestAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): TimerHandle {\r\n    this.delay = scheduler.frame + delay;\r\n    const { actions } = scheduler;\r\n    actions.push(this);\r\n    (actions as Array<VirtualAction<T>>).sort(VirtualAction.sortActions);\r\n    return 1;\r\n  }\r\n\r\n  protected recycleAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): TimerHandle | undefined {\r\n    return undefined;\r\n  }\r\n\r\n  protected _execute(state: T, delay: number): any {\r\n    if (this.active === true) {\r\n      return super._execute(state, delay);\r\n    }\r\n  }\r\n\r\n  private static sortActions<T>(a: VirtualAction<T>, b: VirtualAction<T>) {\r\n    if (a.delay === b.delay) {\r\n      if (a.index === b.index) {\r\n        return 0;\r\n      } else if (a.index > b.index) {\r\n        return 1;\r\n      } else {\r\n        return -1;\r\n      }\r\n    } else if (a.delay > b.delay) {\r\n      return 1;\r\n    } else {\r\n      return -1;\r\n    }\r\n  }\r\n}\r\n", "import { Observable } from '../Observable';\r\nimport { SchedulerLike } from '../types';\r\n\r\n/**\r\n * A simple Observable that emits no items to the Observer and immediately\r\n * emits a complete notification.\r\n *\r\n * <span class=\"informal\">Just emits 'complete', and nothing else.</span>\r\n *\r\n * ![](empty.png)\r\n *\r\n * A simple Observable that only emits the complete notification. It can be used\r\n * for composing with other Observables, such as in a {@link mergeMap}.\r\n *\r\n * ## Examples\r\n *\r\n * Log complete notification\r\n *\r\n * ```ts\r\n * import { EMPTY } from 'rxjs';\r\n *\r\n * EMPTY.subscribe({\r\n *   next: () => console.log('Next'),\r\n *   complete: () => console.log('Complete!')\r\n * });\r\n *\r\n * // Outputs\r\n * // Complete!\r\n * ```\r\n *\r\n * Emit the number 7, then complete\r\n *\r\n * ```ts\r\n * import { EMPTY, startWith } from 'rxjs';\r\n *\r\n * const result = EMPTY.pipe(startWith(7));\r\n * result.subscribe(x => console.log(x));\r\n *\r\n * // Outputs\r\n * // 7\r\n * ```\r\n *\r\n * Map and flatten only odd numbers to the sequence `'a'`, `'b'`, `'c'`\r\n *\r\n * ```ts\r\n * import { interval, mergeMap, of, EMPTY } from 'rxjs';\r\n *\r\n * const interval$ = interval(1000);\r\n * const result = interval$.pipe(\r\n *   mergeMap(x => x % 2 === 1 ? of('a', 'b', 'c') : EMPTY),\r\n * );\r\n * result.subscribe(x => console.log(x));\r\n *\r\n * // Results in the following to the console:\r\n * // x is equal to the count on the interval, e.g. (0, 1, 2, 3, ...)\r\n * // x will occur every 1000ms\r\n * // if x % 2 is equal to 1, print a, b, c (each on its own)\r\n * // if x % 2 is not equal to 1, nothing will be output\r\n * ```\r\n *\r\n * @see {@link Observable}\r\n * @see {@link NEVER}\r\n * @see {@link of}\r\n * @see {@link throwError}\r\n */\r\nexport const EMPTY = new Observable<never>((subscriber) => subscriber.complete());\r\n\r\n/**\r\n * @param scheduler A {@link SchedulerLike} to use for scheduling\r\n * the emission of the complete notification.\r\n * @deprecated Replaced with the {@link EMPTY} constant or {@link scheduled} (e.g. `scheduled([], scheduler)`). Will be removed in v8.\r\n */\r\nexport function empty(scheduler?: SchedulerLike) {\r\n  return scheduler ? emptyScheduled(scheduler) : EMPTY;\r\n}\r\n\r\nfunction emptyScheduled(scheduler: SchedulerLike) {\r\n  return new Observable<never>((subscriber) => scheduler.schedule(() => subscriber.complete()));\r\n}\r\n", "import { SchedulerLike } from '../types';\r\nimport { isFunction } from './isFunction';\r\n\r\nexport function isScheduler(value: any): value is SchedulerLike {\r\n  return value && isFunction(value.schedule);\r\n}\r\n", "import { SchedulerLike } from '../types';\r\nimport { isFunction } from './isFunction';\r\nimport { isScheduler } from './isScheduler';\r\n\r\nfunction last<T>(arr: T[]): T | undefined {\r\n  return arr[arr.length - 1];\r\n}\r\n\r\nexport function popResultSelector(args: any[]): ((...args: unknown[]) => unknown) | undefined {\r\n  return isFunction(last(args)) ? args.pop() : undefined;\r\n}\r\n\r\nexport function popScheduler(args: any[]): SchedulerLike | undefined {\r\n  return isScheduler(last(args)) ? args.pop() : undefined;\r\n}\r\n\r\nexport function popNumber(args: any[], defaultValue: number): number {\r\n  return typeof last(args) === 'number' ? args.pop()! : defaultValue;\r\n}\r\n", "export const isArrayLike = (<T>(x: any): x is ArrayLike<T> => x && typeof x.length === 'number' && typeof x !== 'function');", "import { isFunction } from \"./isFunction\";\r\n\r\n/**\r\n * Tests to see if the object is \"thennable\".\r\n * @param value the object to test\r\n */\r\nexport function isPromise(value: any): value is PromiseLike<any> {\r\n  return isFunction(value?.then);\r\n}\r\n", "import { InteropObservable } from '../types';\r\nimport { observable as Symbol_observable } from '../symbol/observable';\r\nimport { isFunction } from './isFunction';\r\n\r\n/** Identifies an input as being Observable (but not necessary an Rx Observable) */\r\nexport function isInteropObservable(input: any): input is InteropObservable<any> {\r\n  return isFunction(input[Symbol_observable]);\r\n}\r\n", "import { isFunction } from './isFunction';\r\n\r\nexport function isAsyncIterable<T>(obj: any): obj is AsyncIterable<T> {\r\n  return Symbol.asyncIterator && isFunction(obj?.[Symbol.asyncIterator]);\r\n}\r\n", "/**\r\n * Creates the TypeError to throw if an invalid object is passed to `from` or `scheduled`.\r\n * @param input The object that was passed.\r\n */\r\nexport function createInvalidObservableTypeError(input: any) {\r\n  // TODO: We should create error codes that can be looked up, so this can be less verbose.\r\n  return new TypeError(\r\n    `You provided ${\r\n      input !== null && typeof input === 'object' ? 'an invalid object' : `'${input}'`\r\n    } where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.`\r\n  );\r\n}\r\n", "export function getSymbolIterator(): symbol {\r\n  if (typeof Symbol !== 'function' || !Symbol.iterator) {\r\n    return '@@iterator' as any;\r\n  }\r\n\r\n  return Symbol.iterator;\r\n}\r\n\r\nexport const iterator = getSymbolIterator();\r\n", "import { iterator as Symbol_iterator } from '../symbol/iterator';\r\nimport { isFunction } from './isFunction';\r\n\r\n/** Identifies an input as being an Iterable */\r\nexport function isIterable(input: any): input is Iterable<any> {\r\n  return isFunction(input?.[Symbol_iterator]);\r\n}\r\n", "import { ReadableStreamLike } from '../types';\r\nimport { isFunction } from './isFunction';\r\n\r\nexport async function* readableStreamLikeToAsyncGenerator<T>(readableStream: ReadableStreamLike<T>): AsyncGenerator<T> {\r\n  const reader = readableStream.getReader();\r\n  try {\r\n    while (true) {\r\n      const { value, done } = await reader.read();\r\n      if (done) {\r\n        return;\r\n      }\r\n      yield value!;\r\n    }\r\n  } finally {\r\n    reader.releaseLock();\r\n  }\r\n}\r\n\r\nexport function isReadableStreamLike<T>(obj: any): obj is ReadableStreamLike<T> {\r\n  // We don't want to use instanceof checks because they would return\r\n  // false for instances from another Realm, like an <iframe>.\r\n  return isFunction(obj?.getReader);\r\n}\r\n", "import { isArrayLike } from '../util/isArrayLike';\r\nimport { isPromise } from '../util/isPromise';\r\nimport { Observable } from '../Observable';\r\nimport { ObservableInput, ObservedValueOf, ReadableStreamLike } from '../types';\r\nimport { isInteropObservable } from '../util/isInteropObservable';\r\nimport { isAsyncIterable } from '../util/isAsyncIterable';\r\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\r\nimport { isIterable } from '../util/isIterable';\r\nimport { isReadableStreamLike, readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\r\nimport { Subscriber } from '../Subscriber';\r\nimport { isFunction } from '../util/isFunction';\r\nimport { reportUnhandledError } from '../util/reportUnhandledError';\r\nimport { observable as Symbol_observable } from '../symbol/observable';\r\n\r\nexport function innerFrom<O extends ObservableInput<any>>(input: O): Observable<ObservedValueOf<O>>;\r\nexport function innerFrom<T>(input: ObservableInput<T>): Observable<T> {\r\n  if (input instanceof Observable) {\r\n    return input;\r\n  }\r\n  if (input != null) {\r\n    if (isInteropObservable(input)) {\r\n      return fromInteropObservable(input);\r\n    }\r\n    if (isArrayLike(input)) {\r\n      return fromArrayLike(input);\r\n    }\r\n    if (isPromise(input)) {\r\n      return fromPromise(input);\r\n    }\r\n    if (isAsyncIterable(input)) {\r\n      return fromAsyncIterable(input);\r\n    }\r\n    if (isIterable(input)) {\r\n      return fromIterable(input);\r\n    }\r\n    if (isReadableStreamLike(input)) {\r\n      return fromReadableStreamLike(input);\r\n    }\r\n  }\r\n\r\n  throw createInvalidObservableTypeError(input);\r\n}\r\n\r\n/**\r\n * Creates an RxJS Observable from an object that implements `Symbol.observable`.\r\n * @param obj An object that properly implements `Symbol.observable`.\r\n */\r\nexport function fromInteropObservable<T>(obj: any) {\r\n  return new Observable((subscriber: Subscriber<T>) => {\r\n    const obs = obj[Symbol_observable]();\r\n    if (isFunction(obs.subscribe)) {\r\n      return obs.subscribe(subscriber);\r\n    }\r\n    // Should be caught by observable subscribe function error handling.\r\n    throw new TypeError('Provided object does not correctly implement Symbol.observable');\r\n  });\r\n}\r\n\r\n/**\r\n * Synchronously emits the values of an array like and completes.\r\n * This is exported because there are creation functions and operators that need to\r\n * make direct use of the same logic, and there's no reason to make them run through\r\n * `from` conditionals because we *know* they're dealing with an array.\r\n * @param array The array to emit values from\r\n */\r\nexport function fromArrayLike<T>(array: ArrayLike<T>) {\r\n  return new Observable((subscriber: Subscriber<T>) => {\r\n    // Loop over the array and emit each value. Note two things here:\r\n    // 1. We're making sure that the subscriber is not closed on each loop.\r\n    //    This is so we don't continue looping over a very large array after\r\n    //    something like a `take`, `takeWhile`, or other synchronous unsubscription\r\n    //    has already unsubscribed.\r\n    // 2. In this form, reentrant code can alter that array we're looping over.\r\n    //    This is a known issue, but considered an edge case. The alternative would\r\n    //    be to copy the array before executing the loop, but this has\r\n    //    performance implications.\r\n    for (let i = 0; i < array.length && !subscriber.closed; i++) {\r\n      subscriber.next(array[i]);\r\n    }\r\n    subscriber.complete();\r\n  });\r\n}\r\n\r\nexport function fromPromise<T>(promise: PromiseLike<T>) {\r\n  return new Observable((subscriber: Subscriber<T>) => {\r\n    promise\r\n      .then(\r\n        (value) => {\r\n          if (!subscriber.closed) {\r\n            subscriber.next(value);\r\n            subscriber.complete();\r\n          }\r\n        },\r\n        (err: any) => subscriber.error(err)\r\n      )\r\n      .then(null, reportUnhandledError);\r\n  });\r\n}\r\n\r\nexport function fromIterable<T>(iterable: Iterable<T>) {\r\n  return new Observable((subscriber: Subscriber<T>) => {\r\n    for (const value of iterable) {\r\n      subscriber.next(value);\r\n      if (subscriber.closed) {\r\n        return;\r\n      }\r\n    }\r\n    subscriber.complete();\r\n  });\r\n}\r\n\r\nexport function fromAsyncIterable<T>(asyncIterable: AsyncIterable<T>) {\r\n  return new Observable((subscriber: Subscriber<T>) => {\r\n    process(asyncIterable, subscriber).catch((err) => subscriber.error(err));\r\n  });\r\n}\r\n\r\nexport function fromReadableStreamLike<T>(readableStream: ReadableStreamLike<T>) {\r\n  return fromAsyncIterable(readableStreamLikeToAsyncGenerator(readableStream));\r\n}\r\n\r\nasync function process<T>(asyncIterable: AsyncIterable<T>, subscriber: Subscriber<T>) {\r\n  for await (const value of asyncIterable) {\r\n    subscriber.next(value);\r\n    // A side-effect may have closed our subscriber,\r\n    // check before the next iteration.\r\n    if (subscriber.closed) {\r\n      return;\r\n    }\r\n  }\r\n  subscriber.complete();\r\n}\r\n", "import { Subscription } from '../Subscription';\r\nimport { SchedulerAction, SchedulerLike } from '../types';\r\n\r\nexport function executeSchedule(\r\n  parentSubscription: Subscription,\r\n  scheduler: SchedulerLike,\r\n  work: () => void,\r\n  delay: number,\r\n  repeat: true\r\n): void;\r\nexport function executeSchedule(\r\n  parentSubscription: Subscription,\r\n  scheduler: SchedulerLike,\r\n  work: () => void,\r\n  delay?: number,\r\n  repeat?: false\r\n): Subscription;\r\n\r\nexport function executeSchedule(\r\n  parentSubscription: Subscription,\r\n  scheduler: SchedulerLike,\r\n  work: () => void,\r\n  delay = 0,\r\n  repeat = false\r\n): Subscription | void {\r\n  const scheduleSubscription = scheduler.schedule(function (this: SchedulerAction<any>) {\r\n    work();\r\n    if (repeat) {\r\n      parentSubscription.add(this.schedule(null, delay));\r\n    } else {\r\n      this.unsubscribe();\r\n    }\r\n  }, delay);\r\n\r\n  parentSubscription.add(scheduleSubscription);\r\n\r\n  if (!repeat) {\r\n    // Because user-land scheduler implementations are unlikely to properly reuse\r\n    // Actions for repeat scheduling, we can't trust that the returned subscription\r\n    // will control repeat subscription scenarios. So we're trying to avoid using them\r\n    // incorrectly within this library.\r\n    return scheduleSubscription;\r\n  }\r\n}\r\n", "/** @prettier */\r\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\r\nimport { executeSchedule } from '../util/executeSchedule';\r\nimport { operate } from '../util/lift';\r\nimport { createOperatorSubscriber } from './OperatorSubscriber';\r\n\r\n/**\r\n * Re-emits all notifications from source Observable with specified scheduler.\r\n *\r\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\r\n *\r\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\r\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\r\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\r\n *\r\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\r\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\r\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\r\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\r\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\r\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\r\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\r\n * little bit more, to ensure that they are emitted at expected moments.\r\n *\r\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\r\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\r\n * will delay all notifications - including error notifications - while `delay` will pass through error\r\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\r\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\r\n * for notification emissions in general.\r\n *\r\n * ## Example\r\n *\r\n * Ensure values in subscribe are called just before browser repaint\r\n *\r\n * ```ts\r\n * import { interval, observeOn, animationFrameScheduler } from 'rxjs';\r\n *\r\n * const someDiv = document.createElement('div');\r\n * someDiv.style.cssText = 'width: 200px;background: #09c';\r\n * document.body.appendChild(someDiv);\r\n * const intervals = interval(10);      // Intervals are scheduled\r\n *                                      // with async scheduler by default...\r\n * intervals.pipe(\r\n *   observeOn(animationFrameScheduler) // ...but we will observe on animationFrame\r\n * )                                    // scheduler to ensure smooth animation.\r\n * .subscribe(val => {\r\n *   someDiv.style.height = val + 'px';\r\n * });\r\n * ```\r\n *\r\n * @see {@link delay}\r\n *\r\n * @param scheduler Scheduler that will be used to reschedule notifications from source Observable.\r\n * @param delay Number of milliseconds that states with what delay every notification should be rescheduled.\r\n * @return A function that returns an Observable that emits the same\r\n * notifications as the source Observable, but with provided scheduler.\r\n */\r\nexport function observeOn<T>(scheduler: SchedulerLike, delay = 0): MonoTypeOperatorFunction<T> {\r\n  return operate((source, subscriber) => {\r\n    source.subscribe(\r\n      createOperatorSubscriber(\r\n        subscriber,\r\n        (value) => executeSchedule(subscriber, scheduler, () => subscriber.next(value), delay),\r\n        () => executeSchedule(subscriber, scheduler, () => subscriber.complete(), delay),\r\n        (err) => executeSchedule(subscriber, scheduler, () => subscriber.error(err), delay)\r\n      )\r\n    );\r\n  });\r\n}\r\n", "import { MonoTypeOperatorFunction, SchedulerLike } from '../types';\r\nimport { operate } from '../util/lift';\r\n\r\n/**\r\n * Asynchronously subscribes Observers to this Observable on the specified {@link SchedulerLike}.\r\n *\r\n * With `subscribeOn` you can decide what type of scheduler a specific Observable will be using when it is subscribed to.\r\n *\r\n * Schedulers control the speed and order of emissions to observers from an Observable stream.\r\n *\r\n * ![](subscribeOn.png)\r\n *\r\n * ## Example\r\n *\r\n * Given the following code:\r\n *\r\n * ```ts\r\n * import { of, merge } from 'rxjs';\r\n *\r\n * const a = of(1, 2, 3);\r\n * const b = of(4, 5, 6);\r\n *\r\n * merge(a, b).subscribe(console.log);\r\n *\r\n * // Outputs\r\n * // 1\r\n * // 2\r\n * // 3\r\n * // 4\r\n * // 5\r\n * // 6\r\n * ```\r\n *\r\n * Both Observable `a` and `b` will emit their values directly and synchronously once they are subscribed to.\r\n *\r\n * If we instead use the `subscribeOn` operator declaring that we want to use the {@link asyncScheduler} for values emitted by Observable `a`:\r\n *\r\n * ```ts\r\n * import { of, subscribeOn, asyncScheduler, merge } from 'rxjs';\r\n *\r\n * const a = of(1, 2, 3).pipe(subscribeOn(asyncScheduler));\r\n * const b = of(4, 5, 6);\r\n *\r\n * merge(a, b).subscribe(console.log);\r\n *\r\n * // Outputs\r\n * // 4\r\n * // 5\r\n * // 6\r\n * // 1\r\n * // 2\r\n * // 3\r\n * ```\r\n *\r\n * The reason for this is that Observable `b` emits its values directly and synchronously like before\r\n * but the emissions from `a` are scheduled on the event loop because we are now using the {@link asyncScheduler} for that specific Observable.\r\n *\r\n * @param scheduler The {@link SchedulerLike} to perform subscription actions on.\r\n * @param delay A delay to pass to the scheduler to delay subscriptions\r\n * @return A function that returns an Observable modified so that its\r\n * subscriptions happen on the specified {@link SchedulerLike}.\r\n */\r\nexport function subscribeOn<T>(scheduler: SchedulerLike, delay: number = 0): MonoTypeOperatorFunction<T> {\r\n  return operate((source, subscriber) => {\r\n    subscriber.add(scheduler.schedule(() => source.subscribe(subscriber), delay));\r\n  });\r\n}\r\n", "import { innerFrom } from '../observable/innerFrom';\r\nimport { observeOn } from '../operators/observeOn';\r\nimport { subscribeOn } from '../operators/subscribeOn';\r\nimport { InteropObservable, SchedulerLike } from '../types';\r\n\r\nexport function scheduleObservable<T>(input: InteropObservable<T>, scheduler: SchedulerLike) {\r\n  return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\r\n}\r\n", "import { innerFrom } from '../observable/innerFrom';\r\nimport { observeOn } from '../operators/observeOn';\r\nimport { subscribeOn } from '../operators/subscribeOn';\r\nimport { SchedulerLike } from '../types';\r\n\r\nexport function schedulePromise<T>(input: PromiseLike<T>, scheduler: SchedulerLike) {\r\n  return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\r\n}\r\n", "import { Observable } from '../Observable';\r\nimport { SchedulerLike } from '../types';\r\n\r\nexport function scheduleArray<T>(input: ArrayLike<T>, scheduler: SchedulerLike) {\r\n  return new Observable<T>((subscriber) => {\r\n    // The current array index.\r\n    let i = 0;\r\n    // Start iterating over the array like on a schedule.\r\n    return scheduler.schedule(function () {\r\n      if (i === input.length) {\r\n        // If we have hit the end of the array like in the\r\n        // previous job, we can complete.\r\n        subscriber.complete();\r\n      } else {\r\n        // Otherwise let's next the value at the current index,\r\n        // then increment our index.\r\n        subscriber.next(input[i++]);\r\n        // If the last emission didn't cause us to close the subscriber\r\n        // (via take or some side effect), reschedule the job and we'll\r\n        // make another pass.\r\n        if (!subscriber.closed) {\r\n          this.schedule();\r\n        }\r\n      }\r\n    });\r\n  });\r\n}\r\n", "import { Observable } from '../Observable';\r\nimport { SchedulerLike } from '../types';\r\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\r\nimport { isFunction } from '../util/isFunction';\r\nimport { executeSchedule } from '../util/executeSchedule';\r\n\r\n/**\r\n * Used in {@link scheduled} to create an observable from an Iterable.\r\n * @param input The iterable to create an observable from\r\n * @param scheduler The scheduler to use\r\n */\r\nexport function scheduleIterable<T>(input: Iterable<T>, scheduler: SchedulerLike) {\r\n  return new Observable<T>((subscriber) => {\r\n    let iterator: Iterator<T, T>;\r\n\r\n    // Schedule the initial creation of the iterator from\r\n    // the iterable. This is so the code in the iterable is\r\n    // not called until the scheduled job fires.\r\n    executeSchedule(subscriber, scheduler, () => {\r\n      // Create the iterator.\r\n      iterator = (input as any)[Symbol_iterator]();\r\n\r\n      executeSchedule(\r\n        subscriber,\r\n        scheduler,\r\n        () => {\r\n          let value: T;\r\n          let done: boolean | undefined;\r\n          try {\r\n            // Pull the value out of the iterator\r\n            ({ value, done } = iterator.next());\r\n          } catch (err) {\r\n            // We got an error while pulling from the iterator\r\n            subscriber.error(err);\r\n            return;\r\n          }\r\n\r\n          if (done) {\r\n            // If it is \"done\" we just complete. This mimics the\r\n            // behavior of JavaScript's `for..of` consumption of\r\n            // iterables, which will not emit the value from an iterator\r\n            // result of `{ done: true: value: 'here' }`.\r\n            subscriber.complete();\r\n          } else {\r\n            // The iterable is not done, emit the value.\r\n            subscriber.next(value);\r\n          }\r\n        },\r\n        0,\r\n        true\r\n      );\r\n    });\r\n\r\n    // During finalization, if we see this iterator has a `return` method,\r\n    // then we know it is a Generator, and not just an Iterator. So we call\r\n    // the `return()` function. This will ensure that any `finally { }` blocks\r\n    // inside of the generator we can hit will be hit properly.\r\n    return () => isFunction(iterator?.return) && iterator.return();\r\n  });\r\n}\r\n", "import { SchedulerLike } from '../types';\r\nimport { Observable } from '../Observable';\r\nimport { executeSchedule } from '../util/executeSchedule';\r\n\r\nexport function scheduleAsyncIterable<T>(input: AsyncIterable<T>, scheduler: SchedulerLike) {\r\n  if (!input) {\r\n    throw new Error('Iterable cannot be null');\r\n  }\r\n  return new Observable<T>((subscriber) => {\r\n    executeSchedule(subscriber, scheduler, () => {\r\n      const iterator = input[Symbol.asyncIterator]();\r\n      executeSchedule(\r\n        subscriber,\r\n        scheduler,\r\n        () => {\r\n          iterator.next().then((result) => {\r\n            if (result.done) {\r\n              // This will remove the subscriptions from\r\n              // the parent subscription.\r\n              subscriber.complete();\r\n            } else {\r\n              subscriber.next(result.value);\r\n            }\r\n          });\r\n        },\r\n        0,\r\n        true\r\n      );\r\n    });\r\n  });\r\n}\r\n", "import { SchedulerLike, ReadableStreamLike } from '../types';\r\nimport { Observable } from '../Observable';\r\nimport { scheduleAsyncIterable } from './scheduleAsyncIterable';\r\nimport { readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\r\n\r\nexport function scheduleReadableStreamLike<T>(input: ReadableStreamLike<T>, scheduler: SchedulerLike): Observable<T> {\r\n  return scheduleAsyncIterable(readableStreamLikeToAsyncGenerator(input), scheduler);\r\n}\r\n", "import { scheduleObservable } from './scheduleObservable';\r\nimport { schedulePromise } from './schedulePromise';\r\nimport { scheduleArray } from './scheduleArray';\r\nimport { scheduleIterable } from './scheduleIterable';\r\nimport { scheduleAsyncIterable } from './scheduleAsyncIterable';\r\nimport { isInteropObservable } from '../util/isInteropObservable';\r\nimport { isPromise } from '../util/isPromise';\r\nimport { isArrayLike } from '../util/isArrayLike';\r\nimport { isIterable } from '../util/isIterable';\r\nimport { ObservableInput, SchedulerLike } from '../types';\r\nimport { Observable } from '../Observable';\r\nimport { isAsyncIterable } from '../util/isAsyncIterable';\r\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\r\nimport { isReadableStreamLike } from '../util/isReadableStreamLike';\r\nimport { scheduleReadableStreamLike } from './scheduleReadableStreamLike';\r\n\r\n/**\r\n * Converts from a common {@link ObservableInput} type to an observable where subscription and emissions\r\n * are scheduled on the provided scheduler.\r\n *\r\n * @see {@link from}\r\n * @see {@link of}\r\n *\r\n * @param input The observable, array, promise, iterable, etc you would like to schedule\r\n * @param scheduler The scheduler to use to schedule the subscription and emissions from\r\n * the returned observable.\r\n */\r\nexport function scheduled<T>(input: ObservableInput<T>, scheduler: SchedulerLike): Observable<T> {\r\n  if (input != null) {\r\n    if (isInteropObservable(input)) {\r\n      return scheduleObservable(input, scheduler);\r\n    }\r\n    if (isArrayLike(input)) {\r\n      return scheduleArray(input, scheduler);\r\n    }\r\n    if (isPromise(input)) {\r\n      return schedulePromise(input, scheduler);\r\n    }\r\n    if (isAsyncIterable(input)) {\r\n      return scheduleAsyncIterable(input, scheduler);\r\n    }\r\n    if (isIterable(input)) {\r\n      return scheduleIterable(input, scheduler);\r\n    }\r\n    if (isReadableStreamLike(input)) {\r\n      return scheduleReadableStreamLike(input, scheduler);\r\n    }\r\n  }\r\n  throw createInvalidObservableTypeError(input);\r\n}\r\n", "import { Observable } from '../Observable';\r\nimport { ObservableInput, SchedulerLike, ObservedValueOf } from '../types';\r\nimport { scheduled } from '../scheduled/scheduled';\r\nimport { innerFrom } from './innerFrom';\r\n\r\nexport function from<O extends ObservableInput<any>>(input: O): Observable<ObservedValueOf<O>>;\r\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled`. Details: https://rxjs.dev/deprecations/scheduler-argument */\r\nexport function from<O extends ObservableInput<any>>(input: O, scheduler: SchedulerLike | undefined): Observable<ObservedValueOf<O>>;\r\n\r\n/**\r\n * Creates an Observable from an Array, an array-like object, a Promise, an iterable object, or an Observable-like object.\r\n *\r\n * <span class=\"informal\">Converts almost anything to an Observable.</span>\r\n *\r\n * ![](from.png)\r\n *\r\n * `from` converts various other objects and data types into Observables. It also converts a Promise, an array-like, or an\r\n * <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable\" target=\"_blank\">iterable</a>\r\n * object into an Observable that emits the items in that promise, array, or iterable. A String, in this context, is treated\r\n * as an array of characters. Observable-like objects (contains a function named with the ES2015 Symbol for Observable) can also be\r\n * converted through this operator.\r\n *\r\n * ## Examples\r\n *\r\n * Converts an array to an Observable\r\n *\r\n * ```ts\r\n * import { from } from 'rxjs';\r\n *\r\n * const array = [10, 20, 30];\r\n * const result = from(array);\r\n *\r\n * result.subscribe(x => console.log(x));\r\n *\r\n * // Logs:\r\n * // 10\r\n * // 20\r\n * // 30\r\n * ```\r\n *\r\n * Convert an infinite iterable (from a generator) to an Observable\r\n *\r\n * ```ts\r\n * import { from, take } from 'rxjs';\r\n *\r\n * function* generateDoubles(seed) {\r\n *    let i = seed;\r\n *    while (true) {\r\n *      yield i;\r\n *      i = 2 * i; // double it\r\n *    }\r\n * }\r\n *\r\n * const iterator = generateDoubles(3);\r\n * const result = from(iterator).pipe(take(10));\r\n *\r\n * result.subscribe(x => console.log(x));\r\n *\r\n * // Logs:\r\n * // 3\r\n * // 6\r\n * // 12\r\n * // 24\r\n * // 48\r\n * // 96\r\n * // 192\r\n * // 384\r\n * // 768\r\n * // 1536\r\n * ```\r\n *\r\n * With `asyncScheduler`\r\n *\r\n * ```ts\r\n * import { from, asyncScheduler } from 'rxjs';\r\n *\r\n * console.log('start');\r\n *\r\n * const array = [10, 20, 30];\r\n * const result = from(array, asyncScheduler);\r\n *\r\n * result.subscribe(x => console.log(x));\r\n *\r\n * console.log('end');\r\n *\r\n * // Logs:\r\n * // 'start'\r\n * // 'end'\r\n * // 10\r\n * // 20\r\n * // 30\r\n * ```\r\n *\r\n * @see {@link fromEvent}\r\n * @see {@link fromEventPattern}\r\n *\r\n * @param {ObservableInput<T>} A subscription object, a Promise, an Observable-like,\r\n * an Array, an iterable, or an array-like object to be converted.\r\n * @param {SchedulerLike} An optional {@link SchedulerLike} on which to schedule the emission of values.\r\n * @return {Observable<T>}\r\n */\r\nexport function from<T>(input: ObservableInput<T>, scheduler?: SchedulerLike): Observable<T> {\r\n  return scheduler ? scheduled(input, scheduler) : innerFrom(input);\r\n}\r\n", "import { SchedulerLike, ValueFromArray } from '../types';\r\nimport { Observable } from '../Observable';\r\nimport { popScheduler } from '../util/args';\r\nimport { from } from './from';\r\n\r\n// Devs are more likely to pass null or undefined than they are a scheduler\r\n// without accompanying values. To make things easier for (naughty) devs who\r\n// use the `strictNullChecks: false` TypeScript compiler option, these\r\n// overloads with explicit null and undefined values are included.\r\n\r\nexport function of(value: null): Observable<null>;\r\nexport function of(value: undefined): Observable<undefined>;\r\n\r\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled`. Details: https://rxjs.dev/deprecations/scheduler-argument */\r\nexport function of(scheduler: SchedulerLike): Observable<never>;\r\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled`. Details: https://rxjs.dev/deprecations/scheduler-argument */\r\nexport function of<A extends readonly unknown[]>(...valuesAndScheduler: [...A, SchedulerLike]): Observable<ValueFromArray<A>>;\r\n\r\nexport function of(): Observable<never>;\r\n/** @deprecated Do not specify explicit type parameters. Signatures with type parameters that cannot be inferred will be removed in v8. */\r\nexport function of<T>(): Observable<T>;\r\nexport function of<T>(value: T): Observable<T>;\r\nexport function of<A extends readonly unknown[]>(...values: A): Observable<ValueFromArray<A>>;\r\n\r\n/**\r\n * Converts the arguments to an observable sequence.\r\n *\r\n * <span class=\"informal\">Each argument becomes a `next` notification.</span>\r\n *\r\n * ![](of.png)\r\n *\r\n * Unlike {@link from}, it does not do any flattening and emits each argument in whole\r\n * as a separate `next` notification.\r\n *\r\n * ## Examples\r\n *\r\n * Emit the values `10, 20, 30`\r\n *\r\n * ```ts\r\n * import { of } from 'rxjs';\r\n *\r\n * of(10, 20, 30)\r\n *   .subscribe({\r\n *     next: value => console.log('next:', value),\r\n *     error: err => console.log('error:', err),\r\n *     complete: () => console.log('the end'),\r\n *   });\r\n *\r\n * // Outputs\r\n * // next: 10\r\n * // next: 20\r\n * // next: 30\r\n * // the end\r\n * ```\r\n *\r\n * Emit the array `[1, 2, 3]`\r\n *\r\n * ```ts\r\n * import { of } from 'rxjs';\r\n *\r\n * of([1, 2, 3])\r\n *   .subscribe({\r\n *     next: value => console.log('next:', value),\r\n *     error: err => console.log('error:', err),\r\n *     complete: () => console.log('the end'),\r\n *   });\r\n *\r\n * // Outputs\r\n * // next: [1, 2, 3]\r\n * // the end\r\n * ```\r\n *\r\n * @see {@link from}\r\n * @see {@link range}\r\n *\r\n * @param {...T} values A comma separated list of arguments you want to be emitted\r\n * @return {Observable} An Observable that emits the arguments\r\n * described above and then completes.\r\n */\r\nexport function of<T>(...args: Array<T | SchedulerLike>): Observable<T> {\r\n  const scheduler = popScheduler(args);\r\n  return from(args as T[], scheduler);\r\n}\r\n", "import { Observable } from '../Observable';\r\nimport { Subscriber } from '../Subscriber';\r\nimport { SchedulerLike } from '../types';\r\nimport { isFunction } from '../util/isFunction';\r\n\r\n/**\r\n * Creates an observable that will create an error instance and push it to the consumer as an error\r\n * immediately upon subscription.\r\n *\r\n * <span class=\"informal\">Just errors and does nothing else</span>\r\n *\r\n * ![](throw.png)\r\n *\r\n * This creation function is useful for creating an observable that will create an error and error every\r\n * time it is subscribed to. Generally, inside of most operators when you might want to return an errored\r\n * observable, this is unnecessary. In most cases, such as in the inner return of {@link concatMap},\r\n * {@link mergeMap}, {@link defer}, and many others, you can simply throw the error, and RxJS will pick\r\n * that up and notify the consumer of the error.\r\n *\r\n * ## Example\r\n *\r\n * Create a simple observable that will create a new error with a timestamp and log it\r\n * and the message every time you subscribe to it\r\n *\r\n * ```ts\r\n * import { throwError } from 'rxjs';\r\n *\r\n * let errorCount = 0;\r\n *\r\n * const errorWithTimestamp$ = throwError(() => {\r\n *   const error: any = new Error(`This is error number ${ ++errorCount }`);\r\n *   error.timestamp = Date.now();\r\n *   return error;\r\n * });\r\n *\r\n * errorWithTimestamp$.subscribe({\r\n *   error: err => console.log(err.timestamp, err.message)\r\n * });\r\n *\r\n * errorWithTimestamp$.subscribe({\r\n *   error: err => console.log(err.timestamp, err.message)\r\n * });\r\n *\r\n * // Logs the timestamp and a new error message for each subscription\r\n * ```\r\n *\r\n * ### Unnecessary usage\r\n *\r\n * Using `throwError` inside of an operator or creation function\r\n * with a callback, is usually not necessary\r\n *\r\n * ```ts\r\n * import { of, concatMap, timer, throwError } from 'rxjs';\r\n *\r\n * const delays$ = of(1000, 2000, Infinity, 3000);\r\n *\r\n * delays$.pipe(\r\n *   concatMap(ms => {\r\n *     if (ms < 10000) {\r\n *       return timer(ms);\r\n *     } else {\r\n *       // This is probably overkill.\r\n *       return throwError(() => new Error(`Invalid time ${ ms }`));\r\n *     }\r\n *   })\r\n * )\r\n * .subscribe({\r\n *   next: console.log,\r\n *   error: console.error\r\n * });\r\n * ```\r\n *\r\n * You can just throw the error instead\r\n *\r\n * ```ts\r\n * import { of, concatMap, timer } from 'rxjs';\r\n *\r\n * const delays$ = of(1000, 2000, Infinity, 3000);\r\n *\r\n * delays$.pipe(\r\n *   concatMap(ms => {\r\n *     if (ms < 10000) {\r\n *       return timer(ms);\r\n *     } else {\r\n *       // Cleaner and easier to read for most folks.\r\n *       throw new Error(`Invalid time ${ ms }`);\r\n *     }\r\n *   })\r\n * )\r\n * .subscribe({\r\n *   next: console.log,\r\n *   error: console.error\r\n * });\r\n * ```\r\n *\r\n * @param errorFactory A factory function that will create the error instance that is pushed.\r\n */\r\nexport function throwError(errorFactory: () => any): Observable<never>;\r\n\r\n/**\r\n * Returns an observable that will error with the specified error immediately upon subscription.\r\n *\r\n * @param error The error instance to emit\r\n * @deprecated Support for passing an error value will be removed in v8. Instead, pass a factory function to `throwError(() => new Error('test'))`. This is\r\n * because it will create the error at the moment it should be created and capture a more appropriate stack trace. If\r\n * for some reason you need to create the error ahead of time, you can still do that: `const err = new Error('test'); throwError(() => err);`.\r\n */\r\nexport function throwError(error: any): Observable<never>;\r\n\r\n/**\r\n * Notifies the consumer of an error using a given scheduler by scheduling it at delay `0` upon subscription.\r\n *\r\n * @param errorOrErrorFactory An error instance or error factory\r\n * @param scheduler A scheduler to use to schedule the error notification\r\n * @deprecated The `scheduler` parameter will be removed in v8.\r\n * Use `throwError` in combination with {@link observeOn}: `throwError(() => new Error('test')).pipe(observeOn(scheduler));`.\r\n * Details: https://rxjs.dev/deprecations/scheduler-argument\r\n */\r\nexport function throwError(errorOrErrorFactory: any, scheduler: SchedulerLike): Observable<never>;\r\n\r\nexport function throwError(errorOrErrorFactory: any, scheduler?: SchedulerLike): Observable<never> {\r\n  const errorFactory = isFunction(errorOrErrorFactory) ? errorOrErrorFactory : () => errorOrErrorFactory;\r\n  const init = (subscriber: Subscriber<never>) => subscriber.error(errorFactory());\r\n  return new Observable(scheduler ? (subscriber) => scheduler.schedule(init as any, 0, subscriber) : init);\r\n}\r\n", "import { PartialObserver, ObservableNotification, CompleteNotification, NextNotification, ErrorNotification } from './types';\r\nimport { Observable } from './Observable';\r\nimport { EMPTY } from './observable/empty';\r\nimport { of } from './observable/of';\r\nimport { throwError } from './observable/throwError';\r\nimport { isFunction } from './util/isFunction';\r\n\r\n// TODO: When this enum is removed, replace it with a type alias. See #4556.\r\n/**\r\n * @deprecated Use a string literal instead. `NotificationKind` will be replaced with a type alias in v8.\r\n * It will not be replaced with a const enum as those are not compatible with isolated modules.\r\n */\r\nexport enum NotificationKind {\r\n  NEXT = 'N',\r\n  ERROR = 'E',\r\n  COMPLETE = 'C',\r\n}\r\n\r\n/**\r\n * Represents a push-based event or value that an {@link Observable} can emit.\r\n * This class is particularly useful for operators that manage notifications,\r\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\r\n * others. Besides wrapping the actual delivered value, it also annotates it\r\n * with metadata of, for instance, what type of push message it is (`next`,\r\n * `error`, or `complete`).\r\n *\r\n * @see {@link materialize}\r\n * @see {@link dematerialize}\r\n * @see {@link observeOn}\r\n * @deprecated It is NOT recommended to create instances of `Notification` directly.\r\n * Rather, try to create POJOs matching the signature outlined in {@link ObservableNotification}.\r\n * For example: `{ kind: 'N', value: 1 }`, `{ kind: 'E', error: new Error('bad') }`, or `{ kind: 'C' }`.\r\n * Will be removed in v8.\r\n */\r\nexport class Notification<T> {\r\n  /**\r\n   * A value signifying that the notification will \"next\" if observed. In truth,\r\n   * This is really synonymous with just checking `kind === \"N\"`.\r\n   * @deprecated Will be removed in v8. Instead, just check to see if the value of `kind` is `\"N\"`.\r\n   */\r\n  readonly hasValue: boolean;\r\n\r\n  /**\r\n   * Creates a \"Next\" notification object.\r\n   * @param kind Always `'N'`\r\n   * @param value The value to notify with if observed.\r\n   * @deprecated Internal implementation detail. Use {@link Notification#createNext createNext} instead.\r\n   */\r\n  constructor(kind: 'N', value?: T);\r\n  /**\r\n   * Creates an \"Error\" notification object.\r\n   * @param kind Always `'E'`\r\n   * @param value Always `undefined`\r\n   * @param error The error to notify with if observed.\r\n   * @deprecated Internal implementation detail. Use {@link Notification#createError createError} instead.\r\n   */\r\n  constructor(kind: 'E', value: undefined, error: any);\r\n  /**\r\n   * Creates a \"completion\" notification object.\r\n   * @param kind Always `'C'`\r\n   * @deprecated Internal implementation detail. Use {@link Notification#createComplete createComplete} instead.\r\n   */\r\n  constructor(kind: 'C');\r\n  constructor(public readonly kind: 'N' | 'E' | 'C', public readonly value?: T, public readonly error?: any) {\r\n    this.hasValue = kind === 'N';\r\n  }\r\n\r\n  /**\r\n   * Executes the appropriate handler on a passed `observer` given the `kind` of notification.\r\n   * If the handler is missing it will do nothing. Even if the notification is an error, if\r\n   * there is no error handler on the observer, an error will not be thrown, it will noop.\r\n   * @param observer The observer to notify.\r\n   */\r\n  observe(observer: PartialObserver<T>): void {\r\n    return observeNotification(this as ObservableNotification<T>, observer);\r\n  }\r\n\r\n  /**\r\n   * Executes a notification on the appropriate handler from a list provided.\r\n   * If a handler is missing for the kind of notification, nothing is called\r\n   * and no error is thrown, it will be a noop.\r\n   * @param next A next handler\r\n   * @param error An error handler\r\n   * @param complete A complete handler\r\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\r\n   */\r\n  do(next: (value: T) => void, error: (err: any) => void, complete: () => void): void;\r\n  /**\r\n   * Executes a notification on the appropriate handler from a list provided.\r\n   * If a handler is missing for the kind of notification, nothing is called\r\n   * and no error is thrown, it will be a noop.\r\n   * @param next A next handler\r\n   * @param error An error handler\r\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\r\n   */\r\n  do(next: (value: T) => void, error: (err: any) => void): void;\r\n  /**\r\n   * Executes the next handler if the Notification is of `kind` `\"N\"`. Otherwise\r\n   * this will not error, and it will be a noop.\r\n   * @param next The next handler\r\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\r\n   */\r\n  do(next: (value: T) => void): void;\r\n  do(nextHandler: (value: T) => void, errorHandler?: (err: any) => void, completeHandler?: () => void): void {\r\n    const { kind, value, error } = this;\r\n    return kind === 'N' ? nextHandler?.(value!) : kind === 'E' ? errorHandler?.(error) : completeHandler?.();\r\n  }\r\n\r\n  /**\r\n   * Executes a notification on the appropriate handler from a list provided.\r\n   * If a handler is missing for the kind of notification, nothing is called\r\n   * and no error is thrown, it will be a noop.\r\n   * @param next A next handler\r\n   * @param error An error handler\r\n   * @param complete A complete handler\r\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\r\n   */\r\n  accept(next: (value: T) => void, error: (err: any) => void, complete: () => void): void;\r\n  /**\r\n   * Executes a notification on the appropriate handler from a list provided.\r\n   * If a handler is missing for the kind of notification, nothing is called\r\n   * and no error is thrown, it will be a noop.\r\n   * @param next A next handler\r\n   * @param error An error handler\r\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\r\n   */\r\n  accept(next: (value: T) => void, error: (err: any) => void): void;\r\n  /**\r\n   * Executes the next handler if the Notification is of `kind` `\"N\"`. Otherwise\r\n   * this will not error, and it will be a noop.\r\n   * @param next The next handler\r\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\r\n   */\r\n  accept(next: (value: T) => void): void;\r\n\r\n  /**\r\n   * Executes the appropriate handler on a passed `observer` given the `kind` of notification.\r\n   * If the handler is missing it will do nothing. Even if the notification is an error, if\r\n   * there is no error handler on the observer, an error will not be thrown, it will noop.\r\n   * @param observer The observer to notify.\r\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\r\n   */\r\n  accept(observer: PartialObserver<T>): void;\r\n  accept(nextOrObserver: PartialObserver<T> | ((value: T) => void), error?: (err: any) => void, complete?: () => void) {\r\n    return isFunction((nextOrObserver as any)?.next)\r\n      ? this.observe(nextOrObserver as PartialObserver<T>)\r\n      : this.do(nextOrObserver as (value: T) => void, error as any, complete as any);\r\n  }\r\n\r\n  /**\r\n   * Returns a simple Observable that just delivers the notification represented\r\n   * by this Notification instance.\r\n   *\r\n   * @deprecated Will be removed in v8. To convert a `Notification` to an {@link Observable},\r\n   * use {@link of} and {@link dematerialize}: `of(notification).pipe(dematerialize())`.\r\n   */\r\n  toObservable(): Observable<T> {\r\n    const { kind, value, error } = this;\r\n    // Select the observable to return by `kind`\r\n    const result =\r\n      kind === 'N'\r\n        ? // Next kind. Return an observable of that value.\r\n          of(value!)\r\n        : //\r\n        kind === 'E'\r\n        ? // Error kind. Return an observable that emits the error.\r\n          throwError(() => error)\r\n        : //\r\n        kind === 'C'\r\n        ? // Completion kind. Kind is \"C\", return an observable that just completes.\r\n          EMPTY\r\n        : // Unknown kind, return falsy, so we error below.\r\n          0;\r\n    if (!result) {\r\n      // TODO: consider removing this check. The only way to cause this would be to\r\n      // use the Notification constructor directly in a way that is not type-safe.\r\n      // and direct use of the Notification constructor is deprecated.\r\n      throw new TypeError(`Unexpected notification kind ${kind}`);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  private static completeNotification = new Notification('C') as Notification<never> & CompleteNotification;\r\n  /**\r\n   * A shortcut to create a Notification instance of the type `next` from a\r\n   * given value.\r\n   * @param {T} value The `next` value.\r\n   * @return {Notification<T>} The \"next\" Notification representing the\r\n   * argument.\r\n   * @nocollapse\r\n   * @deprecated It is NOT recommended to create instances of `Notification` directly.\r\n   * Rather, try to create POJOs matching the signature outlined in {@link ObservableNotification}.\r\n   * For example: `{ kind: 'N', value: 1 }`, `{ kind: 'E', error: new Error('bad') }`, or `{ kind: 'C' }`.\r\n   * Will be removed in v8.\r\n   */\r\n  static createNext<T>(value: T) {\r\n    return new Notification('N', value) as Notification<T> & NextNotification<T>;\r\n  }\r\n\r\n  /**\r\n   * A shortcut to create a Notification instance of the type `error` from a\r\n   * given error.\r\n   * @param {any} [err] The `error` error.\r\n   * @return {Notification<T>} The \"error\" Notification representing the\r\n   * argument.\r\n   * @nocollapse\r\n   * @deprecated It is NOT recommended to create instances of `Notification` directly.\r\n   * Rather, try to create POJOs matching the signature outlined in {@link ObservableNotification}.\r\n   * For example: `{ kind: 'N', value: 1 }`, `{ kind: 'E', error: new Error('bad') }`, or `{ kind: 'C' }`.\r\n   * Will be removed in v8.\r\n   */\r\n  static createError(err?: any) {\r\n    return new Notification('E', undefined, err) as Notification<never> & ErrorNotification;\r\n  }\r\n\r\n  /**\r\n   * A shortcut to create a Notification instance of the type `complete`.\r\n   * @return {Notification<any>} The valueless \"complete\" Notification.\r\n   * @nocollapse\r\n   * @deprecated It is NOT recommended to create instances of `Notification` directly.\r\n   * Rather, try to create POJOs matching the signature outlined in {@link ObservableNotification}.\r\n   * For example: `{ kind: 'N', value: 1 }`, `{ kind: 'E', error: new Error('bad') }`, or `{ kind: 'C' }`.\r\n   * Will be removed in v8.\r\n   */\r\n  static createComplete(): Notification<never> & CompleteNotification {\r\n    return Notification.completeNotification;\r\n  }\r\n}\r\n\r\n/**\r\n * Executes the appropriate handler on a passed `observer` given the `kind` of notification.\r\n * If the handler is missing it will do nothing. Even if the notification is an error, if\r\n * there is no error handler on the observer, an error will not be thrown, it will noop.\r\n * @param notification The notification object to observe.\r\n * @param observer The observer to notify.\r\n */\r\nexport function observeNotification<T>(notification: ObservableNotification<T>, observer: PartialObserver<T>) {\r\n  const { kind, value, error } = notification as any;\r\n  if (typeof kind !== 'string') {\r\n    throw new TypeError('Invalid notification, missing \"kind\"');\r\n  }\r\n  kind === 'N' ? observer.next?.(value!) : kind === 'E' ? observer.error?.(error) : observer.complete?.();\r\n}\r\n", "import { createErrorClass } from './createErrorClass';\r\n\r\nexport interface EmptyError extends Error {}\r\n\r\nexport interface EmptyErrorCtor {\r\n  /**\r\n   * @deprecated Internal implementation detail. Do not construct error instances.\r\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\r\n   */\r\n  new (): EmptyError;\r\n}\r\n\r\n/**\r\n * An error thrown when an Observable or a sequence was queried but has no\r\n * elements.\r\n *\r\n * @see {@link first}\r\n * @see {@link last}\r\n * @see {@link single}\r\n * @see {@link firstValueFrom}\r\n * @see {@link lastValueFrom}\r\n *\r\n * @class EmptyError\r\n */\r\nexport const EmptyError: EmptyErrorCtor = createErrorClass((_super) => function EmptyErrorImpl(this: any) {\r\n  _super(this);\r\n  this.name = 'EmptyError';\r\n  this.message = 'no elements in sequence';\r\n});\r\n", "import { createErrorClass } from './createErrorClass';\r\n\r\nexport interface ArgumentOutOfRangeError extends Error {}\r\n\r\nexport interface ArgumentOutOfRangeErrorCtor {\r\n  /**\r\n   * @deprecated Internal implementation detail. Do not construct error instances.\r\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\r\n   */\r\n  new (): ArgumentOutOfRangeError;\r\n}\r\n\r\n/**\r\n * An error thrown when an element was queried at a certain index of an\r\n * Observable, but no such index or position exists in that sequence.\r\n *\r\n * @see {@link elementAt}\r\n * @see {@link take}\r\n * @see {@link takeLast}\r\n *\r\n * @class ArgumentOutOfRangeError\r\n */\r\nexport const ArgumentOutOfRangeError: ArgumentOutOfRangeErrorCtor = createErrorClass(\r\n  (_super) =>\r\n    function ArgumentOutOfRangeErrorImpl(this: any) {\r\n      _super(this);\r\n      this.name = 'ArgumentOutOfRangeError';\r\n      this.message = 'argument out of range';\r\n    }\r\n);\r\n", "import { createErrorClass } from './createErrorClass';\r\n\r\nexport interface NotFoundError extends Error {}\r\n\r\nexport interface NotFoundErrorCtor {\r\n  /**\r\n   * @deprecated Internal implementation detail. Do not construct error instances.\r\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\r\n   */\r\n  new (message: string): NotFoundError;\r\n}\r\n\r\n/**\r\n * An error thrown when a value or values are missing from an\r\n * observable sequence.\r\n *\r\n * @see {@link operators/single}\r\n *\r\n * @class NotFoundError\r\n */\r\nexport const NotFoundError: NotFoundErrorCtor = createErrorClass(\r\n  (_super) =>\r\n    function NotFoundErrorImpl(this: any, message: string) {\r\n      _super(this);\r\n      this.name = 'NotFoundError';\r\n      this.message = message;\r\n    }\r\n);\r\n", "import { createErrorClass } from './createErrorClass';\r\n\r\nexport interface SequenceError extends Error {}\r\n\r\nexport interface SequenceErrorCtor {\r\n  /**\r\n   * @deprecated Internal implementation detail. Do not construct error instances.\r\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\r\n   */\r\n  new (message: string): SequenceError;\r\n}\r\n\r\n/**\r\n * An error thrown when something is wrong with the sequence of\r\n * values arriving on the observable.\r\n *\r\n * @see {@link operators/single}\r\n *\r\n * @class SequenceError\r\n */\r\nexport const SequenceError: SequenceErrorCtor = createErrorClass(\r\n  (_super) =>\r\n    function SequenceErrorImpl(this: any, message: string) {\r\n      _super(this);\r\n      this.name = 'SequenceError';\r\n      this.message = message;\r\n    }\r\n);\r\n", "import { asyncScheduler } from '../scheduler/async';\r\nimport { MonoTypeOperatorFunction, SchedulerLike, OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\r\nimport { isValidDate } from '../util/isDate';\r\nimport { Subscription } from '../Subscription';\r\nimport { operate } from '../util/lift';\r\nimport { Observable } from '../Observable';\r\nimport { innerFrom } from '../observable/innerFrom';\r\nimport { createErrorClass } from '../util/createErrorClass';\r\nimport { createOperatorSubscriber } from './OperatorSubscriber';\r\nimport { executeSchedule } from '../util/executeSchedule';\r\n\r\nexport interface TimeoutConfig<T, O extends ObservableInput<unknown> = ObservableInput<T>, M = unknown> {\r\n  /**\r\n   * The time allowed between values from the source before timeout is triggered.\r\n   */\r\n  each?: number;\r\n\r\n  /**\r\n   * The relative time as a `number` in milliseconds, or a specific time as a `Date` object,\r\n   * by which the first value must arrive from the source before timeout is triggered.\r\n   */\r\n  first?: number | Date;\r\n\r\n  /**\r\n   * The scheduler to use with time-related operations within this operator. Defaults to {@link asyncScheduler}\r\n   */\r\n  scheduler?: SchedulerLike;\r\n\r\n  /**\r\n   * A factory used to create observable to switch to when timeout occurs. Provides\r\n   * a {@link TimeoutInfo} about the source observable's emissions and what delay or\r\n   * exact time triggered the timeout.\r\n   */\r\n  with?: (info: TimeoutInfo<T, M>) => O;\r\n\r\n  /**\r\n   * Optional additional metadata you can provide to code that handles\r\n   * the timeout, will be provided through the {@link TimeoutError}.\r\n   * This can be used to help identify the source of a timeout or pass along\r\n   * other information related to the timeout.\r\n   */\r\n  meta?: M;\r\n}\r\n\r\nexport interface TimeoutInfo<T, M = unknown> {\r\n  /** Optional metadata that was provided to the timeout configuration. */\r\n  readonly meta: M;\r\n  /** The number of messages seen before the timeout */\r\n  readonly seen: number;\r\n  /** The last message seen */\r\n  readonly lastValue: T | null;\r\n}\r\n\r\n/**\r\n * An error emitted when a timeout occurs.\r\n */\r\nexport interface TimeoutError<T = unknown, M = unknown> extends Error {\r\n  /**\r\n   * The information provided to the error by the timeout\r\n   * operation that created the error. Will be `null` if\r\n   * used directly in non-RxJS code with an empty constructor.\r\n   * (Note that using this constructor directly is not recommended,\r\n   * you should create your own errors)\r\n   */\r\n  info: TimeoutInfo<T, M> | null;\r\n}\r\n\r\nexport interface TimeoutErrorCtor {\r\n  /**\r\n   * @deprecated Internal implementation detail. Do not construct error instances.\r\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\r\n   */\r\n  new <T = unknown, M = unknown>(info?: TimeoutInfo<T, M>): TimeoutError<T, M>;\r\n}\r\n\r\n/**\r\n * An error thrown by the {@link timeout} operator.\r\n *\r\n * Provided so users can use as a type and do quality comparisons.\r\n * We recommend you do not subclass this or create instances of this class directly.\r\n * If you have need of a error representing a timeout, you should\r\n * create your own error class and use that.\r\n *\r\n * @see {@link timeout}\r\n *\r\n * @class TimeoutError\r\n */\r\nexport const TimeoutError: TimeoutErrorCtor = createErrorClass(\r\n  (_super) =>\r\n    function TimeoutErrorImpl(this: any, info: TimeoutInfo<any> | null = null) {\r\n      _super(this);\r\n      this.message = 'Timeout has occurred';\r\n      this.name = 'TimeoutError';\r\n      this.info = info;\r\n    }\r\n);\r\n\r\n/**\r\n * If `with` is provided, this will return an observable that will switch to a different observable if the source\r\n * does not push values within the specified time parameters.\r\n *\r\n * <span class=\"informal\">The most flexible option for creating a timeout behavior.</span>\r\n *\r\n * The first thing to know about the configuration is if you do not provide a `with` property to the configuration,\r\n * when timeout conditions are met, this operator will emit a {@link TimeoutError}. Otherwise, it will use the factory\r\n * function provided by `with`, and switch your subscription to the result of that. Timeout conditions are provided by\r\n * the settings in `first` and `each`.\r\n *\r\n * The `first` property can be either a `Date` for a specific time, a `number` for a time period relative to the\r\n * point of subscription, or it can be skipped. This property is to check timeout conditions for the arrival of\r\n * the first value from the source _only_. The timings of all subsequent values  from the source will be checked\r\n * against the time period provided by `each`, if it was provided.\r\n *\r\n * The `each` property can be either a `number` or skipped. If a value for `each` is provided, it represents the amount of\r\n * time the resulting observable will wait between the arrival of values from the source before timing out. Note that if\r\n * `first` is _not_ provided, the value from `each` will be used to check timeout conditions for the arrival of the first\r\n * value and all subsequent values. If `first` _is_ provided, `each` will only be use to check all values after the first.\r\n *\r\n * ## Examples\r\n *\r\n * Emit a custom error if there is too much time between values\r\n *\r\n * ```ts\r\n * import { interval, timeout, throwError } from 'rxjs';\r\n *\r\n * class CustomTimeoutError extends Error {\r\n *   constructor() {\r\n *     super('It was too slow');\r\n *     this.name = 'CustomTimeoutError';\r\n *   }\r\n * }\r\n *\r\n * const slow$ = interval(900);\r\n *\r\n * slow$.pipe(\r\n *   timeout({\r\n *     each: 1000,\r\n *     with: () => throwError(() => new CustomTimeoutError())\r\n *   })\r\n * )\r\n * .subscribe({\r\n *   error: console.error\r\n * });\r\n * ```\r\n *\r\n * Switch to a faster observable if your source is slow.\r\n *\r\n * ```ts\r\n * import { interval, timeout } from 'rxjs';\r\n *\r\n * const slow$ = interval(900);\r\n * const fast$ = interval(500);\r\n *\r\n * slow$.pipe(\r\n *   timeout({\r\n *     each: 1000,\r\n *     with: () => fast$,\r\n *   })\r\n * )\r\n * .subscribe(console.log);\r\n * ```\r\n * @param config The configuration for the timeout.\r\n */\r\nexport function timeout<T, O extends ObservableInput<unknown>, M = unknown>(\r\n  config: TimeoutConfig<T, O, M> & { with: (info: TimeoutInfo<T, M>) => O }\r\n): OperatorFunction<T, T | ObservedValueOf<O>>;\r\n\r\n/**\r\n * Returns an observable that will error or switch to a different observable if the source does not push values\r\n * within the specified time parameters.\r\n *\r\n * <span class=\"informal\">The most flexible option for creating a timeout behavior.</span>\r\n *\r\n * The first thing to know about the configuration is if you do not provide a `with` property to the configuration,\r\n * when timeout conditions are met, this operator will emit a {@link TimeoutError}. Otherwise, it will use the factory\r\n * function provided by `with`, and switch your subscription to the result of that. Timeout conditions are provided by\r\n * the settings in `first` and `each`.\r\n *\r\n * The `first` property can be either a `Date` for a specific time, a `number` for a time period relative to the\r\n * point of subscription, or it can be skipped. This property is to check timeout conditions for the arrival of\r\n * the first value from the source _only_. The timings of all subsequent values  from the source will be checked\r\n * against the time period provided by `each`, if it was provided.\r\n *\r\n * The `each` property can be either a `number` or skipped. If a value for `each` is provided, it represents the amount of\r\n * time the resulting observable will wait between the arrival of values from the source before timing out. Note that if\r\n * `first` is _not_ provided, the value from `each` will be used to check timeout conditions for the arrival of the first\r\n * value and all subsequent values. If `first` _is_ provided, `each` will only be use to check all values after the first.\r\n *\r\n * ### Handling TimeoutErrors\r\n *\r\n * If no `with` property was provided, subscriptions to the resulting observable may emit an error of {@link TimeoutError}.\r\n * The timeout error provides useful information you can examine when you're handling the error. The most common way to handle\r\n * the error would be with {@link catchError}, although you could use {@link tap} or just the error handler in your `subscribe` call\r\n * directly, if your error handling is only a side effect (such as notifying the user, or logging).\r\n *\r\n * In this case, you would check the error for `instanceof TimeoutError` to validate that the error was indeed from `timeout`, and\r\n * not from some other source. If it's not from `timeout`, you should probably rethrow it if you're in a `catchError`.\r\n *\r\n * ## Examples\r\n *\r\n * Emit a {@link TimeoutError} if the first value, and _only_ the first value, does not arrive within 5 seconds\r\n *\r\n * ```ts\r\n * import { interval, timeout } from 'rxjs';\r\n *\r\n * // A random interval that lasts between 0 and 10 seconds per tick\r\n * const source$ = interval(Math.round(Math.random() * 10_000));\r\n *\r\n * source$.pipe(\r\n *   timeout({ first: 5_000 })\r\n * )\r\n * .subscribe({\r\n *   next: console.log,\r\n *   error: console.error\r\n * });\r\n * ```\r\n *\r\n * Emit a {@link TimeoutError} if the source waits longer than 5 seconds between any two values or the first value\r\n * and subscription.\r\n *\r\n * ```ts\r\n * import { timer, timeout, expand } from 'rxjs';\r\n *\r\n * const getRandomTime = () => Math.round(Math.random() * 10_000);\r\n *\r\n * // An observable that waits a random amount of time between each delivered value\r\n * const source$ = timer(getRandomTime())\r\n *   .pipe(expand(() => timer(getRandomTime())));\r\n *\r\n * source$\r\n *   .pipe(timeout({ each: 5_000 }))\r\n *   .subscribe({\r\n *     next: console.log,\r\n *     error: console.error\r\n *   });\r\n * ```\r\n *\r\n * Emit a {@link TimeoutError} if the source does not emit before 7 seconds, _or_ if the source waits longer than\r\n * 5 seconds between any two values after the first.\r\n *\r\n * ```ts\r\n * import { timer, timeout, expand } from 'rxjs';\r\n *\r\n * const getRandomTime = () => Math.round(Math.random() * 10_000);\r\n *\r\n * // An observable that waits a random amount of time between each delivered value\r\n * const source$ = timer(getRandomTime())\r\n *   .pipe(expand(() => timer(getRandomTime())));\r\n *\r\n * source$\r\n *   .pipe(timeout({ first: 7_000, each: 5_000 }))\r\n *   .subscribe({\r\n *     next: console.log,\r\n *     error: console.error\r\n *   });\r\n * ```\r\n */\r\nexport function timeout<T, M = unknown>(config: Omit<TimeoutConfig<T, any, M>, 'with'>): OperatorFunction<T, T>;\r\n\r\n/**\r\n * Returns an observable that will error if the source does not push its first value before the specified time passed as a `Date`.\r\n * This is functionally the same as `timeout({ first: someDate })`.\r\n *\r\n * <span class=\"informal\">Errors if the first value doesn't show up before the given date and time</span>\r\n *\r\n * ![](timeout.png)\r\n *\r\n * @param first The date to at which the resulting observable will timeout if the source observable\r\n * does not emit at least one value.\r\n * @param scheduler The scheduler to use. Defaults to {@link asyncScheduler}.\r\n */\r\nexport function timeout<T>(first: Date, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\r\n\r\n/**\r\n * Returns an observable that will error if the source does not push a value within the specified time in milliseconds.\r\n * This is functionally the same as `timeout({ each: milliseconds })`.\r\n *\r\n * <span class=\"informal\">Errors if it waits too long between any value</span>\r\n *\r\n * ![](timeout.png)\r\n *\r\n * @param each The time allowed between each pushed value from the source before the resulting observable\r\n * will timeout.\r\n * @param scheduler The scheduler to use. Defaults to {@link asyncScheduler}.\r\n */\r\nexport function timeout<T>(each: number, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\r\n\r\n/**\r\n *\r\n * Errors if Observable does not emit a value in given time span.\r\n *\r\n * <span class=\"informal\">Timeouts on Observable that doesn't emit values fast enough.</span>\r\n *\r\n * ![](timeout.png)\r\n *\r\n * @see {@link timeoutWith}\r\n *\r\n * @return A function that returns an Observable that mirrors behaviour of the\r\n * source Observable, unless timeout happens when it throws an error.\r\n */\r\nexport function timeout<T, O extends ObservableInput<any>, M>(\r\n  config: number | Date | TimeoutConfig<T, O, M>,\r\n  schedulerArg?: SchedulerLike\r\n): OperatorFunction<T, T | ObservedValueOf<O>> {\r\n  // Intentionally terse code.\r\n  // If the first argument is a valid `Date`, then we use it as the `first` config.\r\n  // Otherwise, if the first argument is a `number`, then we use it as the `each` config.\r\n  // Otherwise, it can be assumed the first argument is the configuration object itself, and\r\n  // we destructure that into what we're going to use, setting important defaults as we do.\r\n  // NOTE: The default for `scheduler` will be the `scheduler` argument if it exists, or\r\n  // it will default to the `asyncScheduler`.\r\n  const {\r\n    first,\r\n    each,\r\n    with: _with = timeoutErrorFactory,\r\n    scheduler = schedulerArg ?? asyncScheduler,\r\n    meta = null!,\r\n  } = (isValidDate(config) ? { first: config } : typeof config === 'number' ? { each: config } : config) as TimeoutConfig<T, O, M>;\r\n\r\n  if (first == null && each == null) {\r\n    // Ensure timeout was provided at runtime.\r\n    throw new TypeError('No timeout provided.');\r\n  }\r\n\r\n  return operate((source, subscriber) => {\r\n    // This subscription encapsulates our subscription to the\r\n    // source for this operator. We're capturing it separately,\r\n    // because if there is a `with` observable to fail over to,\r\n    // we want to unsubscribe from our original subscription, and\r\n    // hand of the subscription to that one.\r\n    let originalSourceSubscription: Subscription;\r\n    // The subscription for our timeout timer. This changes\r\n    // every time we get a new value.\r\n    let timerSubscription: Subscription;\r\n    // A bit of state we pass to our with and error factories to\r\n    // tell what the last value we saw was.\r\n    let lastValue: T | null = null;\r\n    // A bit of state we pass to the with and error factories to\r\n    // tell how many values we have seen so far.\r\n    let seen = 0;\r\n    const startTimer = (delay: number) => {\r\n      timerSubscription = executeSchedule(\r\n        subscriber,\r\n        scheduler,\r\n        () => {\r\n          try {\r\n            originalSourceSubscription.unsubscribe();\r\n            innerFrom(\r\n              _with!({\r\n                meta,\r\n                lastValue,\r\n                seen,\r\n              })\r\n            ).subscribe(subscriber);\r\n          } catch (err) {\r\n            subscriber.error(err);\r\n          }\r\n        },\r\n        delay\r\n      );\r\n    };\r\n\r\n    originalSourceSubscription = source.subscribe(\r\n      createOperatorSubscriber(\r\n        subscriber,\r\n        (value: T) => {\r\n          // clear the timer so we can emit and start another one.\r\n          timerSubscription?.unsubscribe();\r\n          seen++;\r\n          // Emit\r\n          subscriber.next((lastValue = value));\r\n          // null | undefined are both < 0. Thanks, JavaScript.\r\n          each! > 0 && startTimer(each!);\r\n        },\r\n        undefined,\r\n        undefined,\r\n        () => {\r\n          if (!timerSubscription?.closed) {\r\n            timerSubscription?.unsubscribe();\r\n          }\r\n          // Be sure not to hold the last value in memory after unsubscription\r\n          // it could be quite large.\r\n          lastValue = null;\r\n        }\r\n      )\r\n    );\r\n\r\n    // Intentionally terse code.\r\n    // If we've `seen` a value, that means the \"first\" clause was met already, if it existed.\r\n    //   it also means that a timer was already started for \"each\" (in the next handler above).\r\n    // If `first` was provided, and it's a number, then use it.\r\n    // If `first` was provided and it's not a number, it's a Date, and we get the difference between it and \"now\".\r\n    // If `first` was not provided at all, then our first timer will be the value from `each`.\r\n    !seen && startTimer(first != null ? (typeof first === 'number' ? first : +first - scheduler!.now()) : each!);\r\n  });\r\n}\r\n\r\n/**\r\n * The default function to use to emit an error when timeout occurs and a `with` function\r\n * is not specified.\r\n * @param info The information about the timeout to pass along to the error\r\n */\r\nfunction timeoutErrorFactory(info: TimeoutInfo<any>): Observable<never> {\r\n  throw new TimeoutError(info);\r\n}\r\n", "import { OperatorFunction } from \"../types\";\r\nimport { map } from \"../operators/map\";\r\n\r\nconst { isArray } = Array;\r\n\r\nfunction callOrApply<T, R>(fn: ((...values: T[]) => R), args: T|T[]): R {\r\n    return isArray(args) ? fn(...args) : fn(args);\r\n}\r\n\r\n/**\r\n * Used in several -- mostly deprecated -- situations where we need to \r\n * apply a list of arguments or a single argument to a result selector.\r\n */\r\nexport function mapOneOrManyArgs<T, R>(fn: ((...values: T[]) => R)): OperatorFunction<T|T[], R> {\r\n    return map(args => callOrApply(fn, args))\r\n}", "const { isArray } = Array;\r\nconst { getPrototypeOf, prototype: objectProto, keys: getKeys } = Object;\r\n\r\n/**\r\n * Used in functions where either a list of arguments, a single array of arguments, or a\r\n * dictionary of arguments can be returned. Returns an object with an `args` property with\r\n * the arguments in an array, if it is a dictionary, it will also return the `keys` in another\r\n * property.\r\n */\r\nexport function argsArgArrayOrObject<T, O extends Record<string, T>>(args: T[] | [O] | [T[]]): { args: T[]; keys: string[] | null } {\r\n  if (args.length === 1) {\r\n    const first = args[0];\r\n    if (isArray(first)) {\r\n      return { args: first, keys: null };\r\n    }\r\n    if (isPOJO(first)) {\r\n      const keys = getKeys(first);\r\n      return {\r\n        args: keys.map((key) => first[key]),\r\n        keys,\r\n      };\r\n    }\r\n  }\r\n\r\n  return { args: args as T[], keys: null };\r\n}\r\n\r\nfunction isPOJO(obj: any): obj is object {\r\n  return obj && typeof obj === 'object' && getPrototypeOf(obj) === objectProto;\r\n}\r\n", "import { Observable } from '../Observable';\r\nimport { noop } from '../util/noop';\r\n\r\n/**\r\n * An Observable that emits no items to the Observer and never completes.\r\n *\r\n * ![](never.png)\r\n *\r\n * A simple Observable that emits neither values nor errors nor the completion\r\n * notification. It can be used for testing purposes or for composing with other\r\n * Observables. Please note that by never emitting a complete notification, this\r\n * Observable keeps the subscription from being disposed automatically.\r\n * Subscriptions need to be manually disposed.\r\n *\r\n * ##  Example\r\n *\r\n * Emit the number 7, then never emit anything else (not even complete)\r\n *\r\n * ```ts\r\n * import { NEVER, startWith } from 'rxjs';\r\n *\r\n * const info = () => console.log('Will not be called');\r\n *\r\n * const result = NEVER.pipe(startWith(7));\r\n * result.subscribe({\r\n *   next: x => console.log(x),\r\n *   error: info,\r\n *   complete: info\r\n * });\r\n * ```\r\n *\r\n * @see {@link Observable}\r\n * @see {@link EMPTY}\r\n * @see {@link of}\r\n * @see {@link throwError}\r\n */\r\nexport const NEVER = new Observable<never>(noop);\r\n\r\n/**\r\n * @deprecated Replaced with the {@link NEVER} constant. Will be removed in v8.\r\n */\r\nexport function never() {\r\n  return NEVER;\r\n}\r\n", "const { isArray } = Array;\r\n\r\n/**\r\n * Used in operators and functions that accept either a list of arguments, or an array of arguments\r\n * as a single argument.\r\n */\r\nexport function argsOrArgArray<T>(args: (T | T[])[]): T[] {\r\n  return args.length === 1 && isArray(args[0]) ? args[0] : (args as T[]);\r\n}\r\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport const isWebWorker = () => {\n    if (typeof self === 'undefined') {\n        return false;\n    }\n    const selfContext = self;\n    return (typeof selfContext.WorkerGlobalScope !== 'undefined' &&\n        self instanceof selfContext.WorkerGlobalScope);\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Observable, from } from 'rxjs';\nimport { isWebWorker } from '../utils';\nexport class Reachability {\n    networkMonitor(_) {\n        const globalObj = isWebWorker()\n            ? self\n            : typeof window !== 'undefined' && window;\n        if (!globalObj) {\n            return from([{ online: true }]);\n        }\n        return new Observable(observer => {\n            observer.next({ online: globalObj.navigator.onLine });\n            const notifyOnline = () => {\n                observer.next({ online: true });\n            };\n            const notifyOffline = () => {\n                observer.next({ online: false });\n            };\n            globalObj.addEventListener('online', notifyOnline);\n            globalObj.addEventListener('offline', notifyOffline);\n            Reachability._observers.push(observer);\n            return () => {\n                globalObj.removeEventListener('online', notifyOnline);\n                globalObj.removeEventListener('offline', notifyOffline);\n                Reachability._observers = Reachability._observers.filter(_observer => _observer !== observer);\n            };\n        });\n    }\n    // expose observers to simulate offline mode for integration testing\n    static _observerOverride(status) {\n        for (const observer of this._observers) {\n            if (observer.closed) {\n                this._observers = this._observers.filter(_observer => _observer !== observer);\n                continue;\n            }\n            observer?.next && observer.next(status);\n        }\n    }\n}\nReachability._observers = [];\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport const isBrowser = () => typeof window !== 'undefined' && typeof window.document !== 'undefined';\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { isBrowser } from '../isBrowser';\nconst stateChangeListeners = new Set();\nexport class SessionListener {\n    constructor() {\n        this.listenerActive = false;\n        this.handleVisibilityChange = this.handleVisibilityChange.bind(this);\n        // Setup state listeners\n        if (isBrowser()) {\n            document.addEventListener('visibilitychange', this.handleVisibilityChange, false);\n            this.listenerActive = true;\n        }\n    }\n    addStateChangeListener(listener, notifyOnAdd = false) {\n        // No-op if document listener is not active\n        if (!this.listenerActive) {\n            return;\n        }\n        stateChangeListeners.add(listener);\n        // Notify new handlers of the current status on add\n        if (notifyOnAdd) {\n            listener(this.getSessionState());\n        }\n    }\n    removeStateChangeListener(handler) {\n        // No-op if document listener is not active\n        if (!this.listenerActive) {\n            return;\n        }\n        stateChangeListeners.delete(handler);\n    }\n    handleVisibilityChange() {\n        this.notifyHandlers();\n    }\n    notifyHandlers() {\n        const sessionState = this.getSessionState();\n        stateChangeListeners.forEach(listener => {\n            listener(sessionState);\n        });\n    }\n    getSessionState() {\n        if (isBrowser() && document.visibilityState !== 'hidden') {\n            return 'started';\n        }\n        // If, for any reason, document is undefined the session will never start\n        return 'ended';\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { SessionListener } from './SessionListener';\nexport { SESSION_START_EVENT, SESSION_STOP_EVENT } from './constants';\nexport const sessionListener = new SessionListener();\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AMPLIFY_SYMBOL, Hub } from '../Hub';\nimport { deepFreeze } from '../utils';\nimport { parseAmplifyConfig } from '../libraryUtils';\nimport { AuthClass } from './Auth';\nimport { ADD_OAUTH_LISTENER } from './constants';\nexport class AmplifyClass {\n    constructor() {\n        this.oAuthListener = undefined;\n        this.resourcesConfig = {};\n        this.libraryOptions = {};\n        this.Auth = new AuthClass();\n    }\n    /**\n     * Configures Amplify for use with your back-end resources.\n     *\n     * @remarks\n     * This API does not perform any merging of either `resourcesConfig` or `libraryOptions`. The most recently\n     * provided values will be used after configuration.\n     *\n     * @remarks\n     * `configure` can be used to specify additional library options where available for supported categories.\n     *\n     * @param resourceConfig - Back-end resource configuration. Typically provided via the `aws-exports.js` file.\n     * @param libraryOptions - Additional options for customizing the behavior of the library.\n     */\n    configure(resourcesConfig, libraryOptions) {\n        const resolvedResourceConfig = parseAmplifyConfig(resourcesConfig);\n        this.resourcesConfig = resolvedResourceConfig;\n        if (libraryOptions) {\n            this.libraryOptions = libraryOptions;\n        }\n        // Make resource config immutable\n        this.resourcesConfig = deepFreeze(this.resourcesConfig);\n        this.Auth.configure(this.resourcesConfig.Auth, this.libraryOptions.Auth);\n        Hub.dispatch('core', {\n            event: 'configure',\n            data: this.resourcesConfig,\n        }, 'Configure', AMPLIFY_SYMBOL);\n        this.notifyOAuthListener();\n    }\n    /**\n     * Provides access to the current back-end resource configuration for the Library.\n     *\n     * @returns Returns the immutable back-end resource configuration.\n     */\n    getConfig() {\n        return this.resourcesConfig;\n    }\n    /** @internal */\n    [ADD_OAUTH_LISTENER](listener) {\n        if (this.resourcesConfig.Auth?.Cognito.loginWith?.oauth) {\n            // when Amplify has been configured with a valid OAuth config while adding the listener, run it directly\n            listener(this.resourcesConfig.Auth?.Cognito);\n        }\n        else {\n            // otherwise register the listener and run it later when Amplify gets configured with a valid oauth config\n            this.oAuthListener = listener;\n        }\n    }\n    notifyOAuthListener() {\n        if (!this.resourcesConfig.Auth?.Cognito.loginWith?.oauth ||\n            !this.oAuthListener) {\n            return;\n        }\n        this.oAuthListener(this.resourcesConfig.Auth?.Cognito);\n        // the listener should only be notified once with a valid oauth config\n        this.oAuthListener = undefined;\n    }\n}\n/**\n * The `Amplify` utility is used to configure the library.\n *\n * @remarks\n * `Amplify` orchestrates cross-category communication within the library.\n */\nexport const Amplify = new AmplifyClass();\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport const fetchAuthSession = (amplify, options) => {\n    return amplify.Auth.fetchAuthSession(options);\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify } from '../Amplify';\nimport { fetchAuthSession as fetchAuthSessionInternal } from './internal/fetchAuthSession';\n/**\n * Fetch the auth session including the tokens and credentials if they are available. By default it\n * does not refresh the auth tokens or credentials if they are loaded in storage already. You can force a refresh\n * with `{ forceRefresh: true }` input.\n *\n * @param options - Options configuring the fetch behavior.\n * @throws {@link AuthError} - Throws error when session information cannot be refreshed.\n * @returns Promise<AuthSession>\n */\nexport const fetchAuthSession = (options) => {\n    return fetchAuthSessionInternal(Amplify, options);\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify } from '../Amplify';\nexport function clearCredentials() {\n    return Amplify.Auth.clearCredentials();\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport const parseMetadata = (response) => {\n    const { headers, statusCode } = response;\n    return {\n        ...(isMetadataBearer(response) ? response.$metadata : {}),\n        httpStatusCode: statusCode,\n        requestId: headers['x-amzn-requestid'] ??\n            headers['x-amzn-request-id'] ??\n            headers['x-amz-request-id'],\n        extendedRequestId: headers['x-amz-id-2'],\n        cfId: headers['x-amz-cf-id'],\n    };\n};\nconst isMetadataBearer = (response) => typeof response?.$metadata === 'object';\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { parseMetadata } from './responseInfo';\n/**\n * Utility functions for serializing and deserializing of JSON protocol in general(including: REST-JSON, JSON-RPC, etc.)\n */\n/**\n * Error parser for AWS JSON protocol.\n */\nexport const parseJsonError = async (response) => {\n    if (!response || response.statusCode < 300) {\n        return;\n    }\n    const body = await parseJsonBody(response);\n    const sanitizeErrorCode = (rawValue) => {\n        const [cleanValue] = rawValue.toString().split(/[,:]+/);\n        if (cleanValue.includes('#')) {\n            return cleanValue.split('#')[1];\n        }\n        return cleanValue;\n    };\n    const code = sanitizeErrorCode(response.headers['x-amzn-errortype'] ??\n        body.code ??\n        body.__type ??\n        'UnknownError');\n    const message = body.message ?? body.Message ?? 'Unknown error';\n    const error = new Error(message);\n    return Object.assign(error, {\n        name: code,\n        $metadata: parseMetadata(response),\n    });\n};\n/**\n * Parse JSON response body to JavaScript object.\n */\nexport const parseJsonBody = async (response) => {\n    if (!response.body) {\n        throw new Error('Missing response payload');\n    }\n    const output = await response.body.json();\n    return Object.assign(output, {\n        $metadata: parseMetadata(response),\n    });\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport const composeServiceApi = (transferHandler, serializer, deserializer, defaultConfig) => {\n    return async (config, input) => {\n        const resolvedConfig = {\n            ...defaultConfig,\n            ...config,\n        };\n        // We may want to allow different endpoints from given config(other than region) and input.\n        // Currently S3 supports additional `useAccelerateEndpoint` option to use accelerate endpoint.\n        const endpoint = await resolvedConfig.endpointResolver(resolvedConfig, input);\n        // Unlike AWS SDK clients, a serializer should NOT populate the `host` or `content-length` headers.\n        // Both of these headers are prohibited per Spec(https://developer.mozilla.org/en-US/docs/Glossary/Forbidden_header_name).\n        // They will be populated automatically by browser, or node-fetch polyfill.\n        const request = await serializer(input, endpoint);\n        const response = await transferHandler(request, {\n            ...resolvedConfig,\n        });\n        return deserializer(response);\n    };\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Default partition for AWS services. This is used when the region is not provided or the region is not recognized.\n *\n * @internal\n */\nexport const defaultPartition = {\n    id: 'aws',\n    outputs: {\n        dnsSuffix: 'amazonaws.com',\n    },\n    regionRegex: '^(us|eu|ap|sa|ca|me|af)\\\\-\\\\w+\\\\-\\\\d+$',\n    regions: ['aws-global'],\n};\n/**\n * This data is adapted from the partition file from AWS SDK shared utilities but remove some contents for bundle size\n * concern. Information removed are `dualStackDnsSuffix`, `supportDualStack`, `supportFIPS`, restricted partitions, and\n * list of regions for each partition other than global regions.\n *\n * * Ref: https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints\n * * Ref: https://github.com/aws/aws-sdk-js-v3/blob/0201baef03c2379f1f6f7150b9d401d4b230d488/packages/util-endpoints/src/lib/aws/partitions.json#L1\n *\n * @internal\n */\nexport const partitionsInfo = {\n    partitions: [\n        defaultPartition,\n        {\n            id: 'aws-cn',\n            outputs: {\n                dnsSuffix: 'amazonaws.com.cn',\n            },\n            regionRegex: '^cn\\\\-\\\\w+\\\\-\\\\d+$',\n            regions: ['aws-cn-global'],\n        },\n    ],\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { defaultPartition, partitionsInfo } from './partitions';\n/**\n * Get the AWS Services endpoint URL's DNS suffix for a given region. A typical AWS regional service endpoint URL will\n * follow this pattern: {endpointPrefix}.{region}.{dnsSuffix}. For example, the endpoint URL for Cognito Identity in\n * us-east-1 will be cognito-identity.us-east-1.amazonaws.com. Here the DnsSuffix is `amazonaws.com`.\n *\n * @param region\n * @returns The DNS suffix\n *\n * @internal\n */\nexport const getDnsSuffix = (region) => {\n    const { partitions } = partitionsInfo;\n    for (const { regions, outputs, regionRegex } of partitions) {\n        const regex = new RegExp(regionRegex);\n        if (regions.includes(region) || regex.test(region)) {\n            return outputs.dnsSuffix;\n        }\n    }\n    return defaultPartition.outputs.dnsSuffix;\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst DEFAULT_RETRY_ATTEMPTS = 3;\n/**\n * Retry middleware\n */\nexport const retryMiddlewareFactory = ({ maxAttempts = DEFAULT_RETRY_ATTEMPTS, retryDecider, computeDelay, abortSignal, }) => {\n    if (maxAttempts < 1) {\n        throw new Error('maxAttempts must be greater than 0');\n    }\n    return (next, context) => async function retryMiddleware(request) {\n        let error;\n        let attemptsCount = context.attemptsCount ?? 0;\n        let response;\n        // When retry is not needed or max attempts is reached, either error or response will be set. This function handles either cases.\n        const handleTerminalErrorOrResponse = () => {\n            if (response) {\n                addOrIncrementMetadataAttempts(response, attemptsCount);\n                return response;\n            }\n            else {\n                addOrIncrementMetadataAttempts(error, attemptsCount);\n                throw error;\n            }\n        };\n        while (!abortSignal?.aborted && attemptsCount < maxAttempts) {\n            try {\n                response = await next(request);\n                error = undefined;\n            }\n            catch (e) {\n                error = e;\n                response = undefined;\n            }\n            // context.attemptsCount may be updated after calling next handler which may retry the request by itself.\n            attemptsCount =\n                (context.attemptsCount ?? 0) > attemptsCount\n                    ? (context.attemptsCount ?? 0)\n                    : attemptsCount + 1;\n            context.attemptsCount = attemptsCount;\n            if (await retryDecider(response, error)) {\n                if (!abortSignal?.aborted && attemptsCount < maxAttempts) {\n                    // prevent sleep for last attempt or cancelled request;\n                    const delay = computeDelay(attemptsCount);\n                    await cancellableSleep(delay, abortSignal);\n                }\n                continue;\n            }\n            else {\n                return handleTerminalErrorOrResponse();\n            }\n        }\n        if (abortSignal?.aborted) {\n            throw new Error('Request aborted.');\n        }\n        else {\n            return handleTerminalErrorOrResponse();\n        }\n    };\n};\nconst cancellableSleep = (timeoutMs, abortSignal) => {\n    if (abortSignal?.aborted) {\n        return Promise.resolve();\n    }\n    let timeoutId;\n    let sleepPromiseResolveFn;\n    const sleepPromise = new Promise(resolve => {\n        sleepPromiseResolveFn = resolve;\n        timeoutId = setTimeout(resolve, timeoutMs);\n    });\n    abortSignal?.addEventListener('abort', function cancelSleep(_) {\n        clearTimeout(timeoutId);\n        abortSignal?.removeEventListener('abort', cancelSleep);\n        sleepPromiseResolveFn();\n    });\n    return sleepPromise;\n};\nconst addOrIncrementMetadataAttempts = (nextHandlerOutput, attempts) => {\n    if (Object.prototype.toString.call(nextHandlerOutput) !== '[object Object]') {\n        return;\n    }\n    nextHandlerOutput.$metadata = {\n        ...(nextHandlerOutput.$metadata ?? {}),\n        attempts,\n    };\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Middleware injects user agent string to specified header(default to 'x-amz-user-agent'),\n * if the header is not set already.\n *\n * TODO: incorporate new user agent design\n */\nexport const userAgentMiddlewareFactory = ({ userAgentHeader = 'x-amz-user-agent', userAgentValue = '', }) => next => {\n    return async function userAgentMiddleware(request) {\n        if (userAgentValue.trim().length === 0) {\n            const result = await next(request);\n            return result;\n        }\n        else {\n            const headerName = userAgentHeader.toLowerCase();\n            request.headers[headerName] = request.headers[headerName]\n                ? `${request.headers[headerName]} ${userAgentValue}`\n                : userAgentValue;\n            const response = await next(request);\n            return response;\n        }\n    };\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Compose a transfer handler with a core transfer handler and a list of middleware.\n * @param coreHandler Core transfer handler\n * @param middleware\tList of middleware\n * @returns A transfer handler whose option type is the union of the core\n * \ttransfer handler's option type and the middleware's option type.\n * @internal\n */\nexport const composeTransferHandler = (coreHandler, middleware) => (request, options) => {\n    const context = {};\n    let composedHandler = (composeHandlerRequest) => coreHandler(composeHandlerRequest, options);\n    for (let i = middleware.length - 1; i >= 0; i--) {\n        const m = middleware[i];\n        const resolvedMiddleware = m(options);\n        composedHandler = resolvedMiddleware(composedHandler, context);\n    }\n    return composedHandler(request);\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Cache the payload of a response body. It allows multiple calls to the body,\n * for example, when reading the body in both retry decider and error deserializer.\n * Caching body is allowed here because we call the body accessor(blob(), json(),\n * etc.) when body is small or streaming implementation is not available(RN).\n *\n * @internal\n */\nexport const withMemoization = (payloadAccessor) => {\n    let cached;\n    return () => {\n        if (!cached) {\n            // Explicitly not awaiting. Intermediate await would add overhead and\n            // introduce a possible race in the event that this wrapper is called\n            // again before the first `payloadAccessor` call resolves.\n            cached = payloadAccessor();\n        }\n        return cached;\n    };\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AmplifyError } from '../../errors';\nimport { withMemoization } from '../utils/memoization';\nimport { AmplifyErrorCode } from '../../types';\nconst shouldSendBody = (method) => !['HEAD', 'GET', 'DELETE'].includes(method.toUpperCase());\n// TODO[AllanZhengYP]: we need to provide isCanceledError utility\nexport const fetchTransferHandler = async ({ url, method, headers, body }, { abortSignal, cache, withCrossDomainCredentials }) => {\n    let resp;\n    try {\n        resp = await fetch(url, {\n            method,\n            headers,\n            body: shouldSendBody(method) ? body : undefined,\n            signal: abortSignal,\n            cache,\n            credentials: withCrossDomainCredentials ? 'include' : 'same-origin',\n        });\n    }\n    catch (e) {\n        if (e instanceof TypeError) {\n            throw new AmplifyError({\n                name: AmplifyErrorCode.NetworkError,\n                message: 'A network error has occurred.',\n                underlyingError: e,\n            });\n        }\n        throw e;\n    }\n    const responseHeaders = {};\n    resp.headers?.forEach((value, key) => {\n        responseHeaders[key.toLowerCase()] = value;\n    });\n    const httpResponse = {\n        statusCode: resp.status,\n        headers: responseHeaders,\n        body: null,\n    };\n    // resp.body is a ReadableStream according to Fetch API spec, but React Native\n    // does not implement it.\n    const bodyWithMixin = Object.assign(resp.body ?? {}, {\n        text: withMemoization(() => resp.text()),\n        blob: withMemoization(() => resp.blob()),\n        json: withMemoization(() => resp.json()),\n    });\n    return {\n        ...httpResponse,\n        body: bodyWithMixin,\n    };\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { retryMiddlewareFactory } from '../middleware/retry';\nimport { userAgentMiddlewareFactory, } from '../middleware/userAgent';\nimport { composeTransferHandler } from '../internal/composeTransferHandler';\nimport { fetchTransferHandler } from './fetch';\nexport const unauthenticatedHandler = composeTransferHandler(fetchTransferHandler, [userAgentMiddlewareFactory, retryMiddlewareFactory]);\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport const MAX_DELAY_MS = 5 * 60 * 1000;\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { MAX_DELAY_MS } from './constants';\n/**\n * @private\n * Internal use of Amplify only\n */\nexport function jitteredBackoff(maxDelayMs = MAX_DELAY_MS) {\n    const BASE_TIME_MS = 100;\n    const JITTER_FACTOR = 100;\n    return attempt => {\n        const delay = 2 ** attempt * BASE_TIME_MS + JITTER_FACTOR * Math.random();\n        return delay > maxDelayMs ? false : delay;\n    };\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { jitteredBackoff as jitteredBackoffUtil } from '../../../utils';\n// TODO: [v6] The separate retry utility is used by Data packages now and will replaced by retry middleware.\nconst DEFAULT_MAX_DELAY_MS = 5 * 60 * 1000;\nexport const jitteredBackoff = attempt => {\n    const delayFunction = jitteredBackoffUtil(DEFAULT_MAX_DELAY_MS);\n    const delay = delayFunction(attempt);\n    // The delayFunction returns false when the delay is greater than the max delay(5 mins).\n    // In this case, the retry middleware will delay 5 mins instead, as a ceiling of the delay.\n    return delay === false ? DEFAULT_MAX_DELAY_MS : delay;\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// via https://github.com/aws/aws-sdk-js-v3/blob/ab0e7be36e7e7f8a0c04834357aaad643c7912c3/packages/service-error-classification/src/constants.ts#L8\nconst CLOCK_SKEW_ERROR_CODES = [\n    'AuthFailure',\n    'InvalidSignatureException',\n    'RequestExpired',\n    'RequestInTheFuture',\n    'RequestTimeTooSkewed',\n    'SignatureDoesNotMatch',\n    'BadRequestException', // API Gateway\n];\n/**\n * Given an error code, returns true if it is related to a clock skew error.\n *\n * @param errorCode String representation of some error.\n * @returns True if given error is present in `CLOCK_SKEW_ERROR_CODES`, false otherwise.\n *\n * @internal\n */\nexport const isClockSkewError = (errorCode) => !!errorCode && CLOCK_SKEW_ERROR_CODES.includes(errorCode);\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { isClockSkewError } from './isClockSkewError';\n/**\n * Get retry decider function\n * @param errorParser Function to load JavaScript error from HTTP response\n */\nexport const getRetryDecider = (errorParser) => async (response, error) => {\n    const parsedError = error ??\n        (await errorParser(response)) ??\n        undefined;\n    const errorCode = parsedError?.code || parsedError?.name;\n    const statusCode = response?.statusCode;\n    return (isConnectionError(error) ||\n        isThrottlingError(statusCode, errorCode) ||\n        isClockSkewError(errorCode) ||\n        isServerSideError(statusCode, errorCode));\n};\n// reference: https://github.com/aws/aws-sdk-js-v3/blob/ab0e7be36e7e7f8a0c04834357aaad643c7912c3/packages/service-error-classification/src/constants.ts#L22-L37\nconst THROTTLING_ERROR_CODES = [\n    'BandwidthLimitExceeded',\n    'EC2ThrottledException',\n    'LimitExceededException',\n    'PriorRequestNotComplete',\n    'ProvisionedThroughputExceededException',\n    'RequestLimitExceeded',\n    'RequestThrottled',\n    'RequestThrottledException',\n    'SlowDown',\n    'ThrottledException',\n    'Throttling',\n    'ThrottlingException',\n    'TooManyRequestsException',\n];\nconst TIMEOUT_ERROR_CODES = [\n    'TimeoutError',\n    'RequestTimeout',\n    'RequestTimeoutException',\n];\nconst isThrottlingError = (statusCode, errorCode) => statusCode === 429 ||\n    (!!errorCode && THROTTLING_ERROR_CODES.includes(errorCode));\nconst isConnectionError = (error) => error?.name === 'Network error';\nconst isServerSideError = (statusCode, errorCode) => (!!statusCode && [500, 502, 503, 504].includes(statusCode)) ||\n    (!!errorCode && TIMEOUT_ERROR_CODES.includes(errorCode));\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst AmplifyUrl = URL;\nconst AmplifyUrlSearchParams = URLSearchParams;\nexport { AmplifyUrl, AmplifyUrlSearchParams };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { getDnsSuffix, parseJsonError, unauthenticatedHandler, } from '../../clients';\nimport { composeTransferHandler } from '../../clients/internal/composeTransferHandler';\nimport { getRetryDecider, jitteredBackoff, } from '../../clients/middleware/retry';\nimport { getAmplifyUserAgent } from '../../Platform';\nimport { observeFrameworkChanges } from '../../Platform/detectFramework';\nimport { AmplifyUrl } from '../../utils/amplifyUrl';\n/**\n * The service name used to sign requests if the API requires authentication.\n */\nconst SERVICE_NAME = 'cognito-identity';\n/**\n * The endpoint resolver function that returns the endpoint URL for a given region.\n */\nconst endpointResolver = ({ region }) => ({\n    url: new AmplifyUrl(`https://cognito-identity.${region}.${getDnsSuffix(region)}`),\n});\n/**\n * A Cognito Identity-specific middleware that disables caching for all requests.\n */\nconst disableCacheMiddlewareFactory = () => next => async function disableCacheMiddleware(request) {\n    request.headers['cache-control'] = 'no-store';\n    return next(request);\n};\n/**\n * A Cognito Identity-specific transfer handler that does NOT sign requests, and\n * disables caching.\n *\n * @internal\n */\nexport const cognitoIdentityTransferHandler = composeTransferHandler(unauthenticatedHandler, [disableCacheMiddlewareFactory]);\n/**\n * @internal\n */\nexport const defaultConfig = {\n    service: SERVICE_NAME,\n    endpointResolver,\n    retryDecider: getRetryDecider(parseJsonError),\n    computeDelay: jitteredBackoff,\n    userAgentValue: getAmplifyUserAgent(),\n    cache: 'no-store',\n};\nobserveFrameworkChanges(() => {\n    defaultConfig.userAgentValue = getAmplifyUserAgent();\n});\n/**\n * @internal\n */\nexport const getSharedHeaders = (operation) => ({\n    'content-type': 'application/x-amz-json-1.1',\n    'x-amz-target': `AWSCognitoIdentityService.${operation}`,\n});\n/**\n * @internal\n */\nexport const buildHttpRpcRequest = ({ url }, headers, body) => ({\n    headers,\n    url,\n    body,\n    method: 'POST',\n});\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { parseJsonBody, parseJsonError, parseMetadata, } from '../../clients';\nimport { composeServiceApi } from '../../clients/internal';\nimport { buildHttpRpcRequest, cognitoIdentityTransferHandler, defaultConfig, getSharedHeaders, } from './base';\nconst getIdSerializer = (input, endpoint) => {\n    const headers = getSharedHeaders('GetId');\n    const body = JSON.stringify(input);\n    return buildHttpRpcRequest(endpoint, headers, body);\n};\nconst getIdDeserializer = async (response) => {\n    if (response.statusCode >= 300) {\n        const error = await parseJsonError(response);\n        throw error;\n    }\n    else {\n        const body = await parseJsonBody(response);\n        return {\n            IdentityId: body.IdentityId,\n            $metadata: parseMetadata(response),\n        };\n    }\n};\n/**\n * @internal\n */\nexport const getId = composeServiceApi(cognitoIdentityTransferHandler, getIdSerializer, getIdDeserializer, defaultConfig);\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { parseJsonBody, parseJsonError, parseMetadata, } from '../../clients';\nimport { composeServiceApi } from '../../clients/internal';\nimport { buildHttpRpcRequest, cognitoIdentityTransferHandler, defaultConfig, getSharedHeaders, } from './base';\nconst getCredentialsForIdentitySerializer = (input, endpoint) => {\n    const headers = getSharedHeaders('GetCredentialsForIdentity');\n    const body = JSON.stringify(input);\n    return buildHttpRpcRequest(endpoint, headers, body);\n};\nconst getCredentialsForIdentityDeserializer = async (response) => {\n    if (response.statusCode >= 300) {\n        const error = await parseJsonError(response);\n        throw error;\n    }\n    else {\n        const body = await parseJsonBody(response);\n        return {\n            IdentityId: body.IdentityId,\n            Credentials: deserializeCredentials(body.Credentials),\n            $metadata: parseMetadata(response),\n        };\n    }\n};\nconst deserializeCredentials = ({ AccessKeyId, SecretKey, SessionToken, Expiration, } = {}) => {\n    return {\n        AccessKeyId,\n        SecretKey,\n        SessionToken,\n        Expiration: Expiration && new Date(Expiration * 1000),\n    };\n};\n/**\n * @internal\n */\nexport const getCredentialsForIdentity = composeServiceApi(cognitoIdentityTransferHandler, getCredentialsForIdentitySerializer, getCredentialsForIdentityDeserializer, defaultConfig);\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AmplifyErrorCode } from '../types';\nimport { AmplifyError } from './AmplifyError';\nexport class PlatformNotSupportedError extends AmplifyError {\n    constructor() {\n        super({\n            name: AmplifyErrorCode.PlatformNotSupported,\n            message: 'Function not supported on current platform',\n        });\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { PlatformNotSupportedError } from '../errors';\n/**\n * @internal\n */\nexport class KeyValueStorage {\n    constructor(storage) {\n        this.storage = storage;\n    }\n    /**\n     * This is used to set a specific item in storage\n     * @param {string} key - the key for the item\n     * @param {object} value - the value\n     * @returns {string} value that was set\n     */\n    async setItem(key, value) {\n        if (!this.storage)\n            throw new PlatformNotSupportedError();\n        this.storage.setItem(key, value);\n    }\n    /**\n     * This is used to get a specific key from storage\n     * @param {string} key - the key for the item\n     * This is used to clear the storage\n     * @returns {string} the data item\n     */\n    async getItem(key) {\n        if (!this.storage)\n            throw new PlatformNotSupportedError();\n        return this.storage.getItem(key);\n    }\n    /**\n     * This is used to remove an item from storage\n     * @param {string} key - the key being set\n     * @returns {string} value - value that was deleted\n     */\n    async removeItem(key) {\n        if (!this.storage)\n            throw new PlatformNotSupportedError();\n        this.storage.removeItem(key);\n    }\n    /**\n     * This is used to clear the storage\n     * @returns {string} nothing\n     */\n    async clear() {\n        if (!this.storage)\n            throw new PlatformNotSupportedError();\n        this.storage.clear();\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * @internal\n */\nexport class InMemoryStorage {\n    constructor() {\n        this.storage = new Map();\n    }\n    get length() {\n        return this.storage.size;\n    }\n    key(index) {\n        if (index > this.length - 1) {\n            return null;\n        }\n        return Array.from(this.storage.keys())[index];\n    }\n    setItem(key, value) {\n        this.storage.set(key, value);\n    }\n    getItem(key) {\n        return this.storage.get(key) ?? null;\n    }\n    removeItem(key) {\n        this.storage.delete(key);\n    }\n    clear() {\n        this.storage.clear();\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { InMemoryStorage } from './InMemoryStorage';\n/**\n * @internal\n * @returns Either a reference to window.localStorage or an in-memory storage as fallback\n */\nexport const getLocalStorageWithFallback = () => typeof window !== 'undefined' && window.localStorage\n    ? window.localStorage\n    : new InMemoryStorage();\n/**\n * @internal\n * @returns Either a reference to window.sessionStorage or an in-memory storage as fallback\n */\nexport const getSessionStorageWithFallback = () => typeof window !== 'undefined' && window.sessionStorage\n    ? window.sessionStorage\n    : new InMemoryStorage();\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { KeyValueStorage } from './KeyValueStorage';\nimport { getLocalStorageWithFallback } from './utils';\n/**\n * @internal\n */\nexport class DefaultStorage extends KeyValueStorage {\n    constructor() {\n        super(getLocalStorageWithFallback());\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { KeyValueStorage } from './KeyValueStorage';\nimport { getSessionStorageWithFallback } from './utils';\n/**\n * @internal\n */\nexport class SessionStorage extends KeyValueStorage {\n    constructor() {\n        super(getSessionStorageWithFallback());\n    }\n}\n", "/*! js-cookie v3.0.5 | MIT */\r\n/* eslint-disable no-var */\r\nfunction assign (target) {\r\n  for (var i = 1; i < arguments.length; i++) {\r\n    var source = arguments[i];\r\n    for (var key in source) {\r\n      target[key] = source[key];\r\n    }\r\n  }\r\n  return target\r\n}\r\n/* eslint-enable no-var */\r\n\r\n/* eslint-disable no-var */\r\nvar defaultConverter = {\r\n  read: function (value) {\r\n    if (value[0] === '\"') {\r\n      value = value.slice(1, -1);\r\n    }\r\n    return value.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent)\r\n  },\r\n  write: function (value) {\r\n    return encodeURIComponent(value).replace(\r\n      /%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g,\r\n      decodeURIComponent\r\n    )\r\n  }\r\n};\r\n/* eslint-enable no-var */\r\n\r\n/* eslint-disable no-var */\r\n\r\nfunction init (converter, defaultAttributes) {\r\n  function set (name, value, attributes) {\r\n    if (typeof document === 'undefined') {\r\n      return\r\n    }\r\n\r\n    attributes = assign({}, defaultAttributes, attributes);\r\n\r\n    if (typeof attributes.expires === 'number') {\r\n      attributes.expires = new Date(Date.now() + attributes.expires * 864e5);\r\n    }\r\n    if (attributes.expires) {\r\n      attributes.expires = attributes.expires.toUTCString();\r\n    }\r\n\r\n    name = encodeURIComponent(name)\r\n      .replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent)\r\n      .replace(/[()]/g, escape);\r\n\r\n    var stringifiedAttributes = '';\r\n    for (var attributeName in attributes) {\r\n      if (!attributes[attributeName]) {\r\n        continue\r\n      }\r\n\r\n      stringifiedAttributes += '; ' + attributeName;\r\n\r\n      if (attributes[attributeName] === true) {\r\n        continue\r\n      }\r\n\r\n      // Considers RFC 6265 section 5.2:\r\n      // ...\r\n      // 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\r\n      //     character:\r\n      // Consume the characters of the unparsed-attributes up to,\r\n      // not including, the first %x3B (\";\") character.\r\n      // ...\r\n      stringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\r\n    }\r\n\r\n    return (document.cookie =\r\n      name + '=' + converter.write(value, name) + stringifiedAttributes)\r\n  }\r\n\r\n  function get (name) {\r\n    if (typeof document === 'undefined' || (arguments.length && !name)) {\r\n      return\r\n    }\r\n\r\n    // To prevent the for loop in the first place assign an empty array\r\n    // in case there are no cookies at all.\r\n    var cookies = document.cookie ? document.cookie.split('; ') : [];\r\n    var jar = {};\r\n    for (var i = 0; i < cookies.length; i++) {\r\n      var parts = cookies[i].split('=');\r\n      var value = parts.slice(1).join('=');\r\n\r\n      try {\r\n        var found = decodeURIComponent(parts[0]);\r\n        jar[found] = converter.read(value, found);\r\n\r\n        if (name === found) {\r\n          break\r\n        }\r\n      } catch (e) {}\r\n    }\r\n\r\n    return name ? jar[name] : jar\r\n  }\r\n\r\n  return Object.create(\r\n    {\r\n      set,\r\n      get,\r\n      remove: function (name, attributes) {\r\n        set(\r\n          name,\r\n          '',\r\n          assign({}, attributes, {\r\n            expires: -1\r\n          })\r\n        );\r\n      },\r\n      withAttributes: function (attributes) {\r\n        return init(this.converter, assign({}, this.attributes, attributes))\r\n      },\r\n      withConverter: function (converter) {\r\n        return init(assign({}, this.converter, converter), this.attributes)\r\n      }\r\n    },\r\n    {\r\n      attributes: { value: Object.freeze(defaultAttributes) },\r\n      converter: { value: Object.freeze(converter) }\r\n    }\r\n  )\r\n}\r\n\r\nvar api = init(defaultConverter, { path: '/' });\r\n/* eslint-enable no-var */\r\n\r\nexport { api as default };\r\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport JsCookie from 'js-cookie';\nexport class CookieStorage {\n    constructor(data = {}) {\n        const { path, domain, expires, sameSite, secure } = data;\n        this.domain = domain;\n        this.path = path || '/';\n        this.expires = Object.prototype.hasOwnProperty.call(data, 'expires')\n            ? expires\n            : 365;\n        this.secure = Object.prototype.hasOwnProperty.call(data, 'secure')\n            ? secure\n            : true;\n        if (Object.prototype.hasOwnProperty.call(data, 'sameSite')) {\n            if (!sameSite || !['strict', 'lax', 'none'].includes(sameSite)) {\n                throw new Error('The sameSite value of cookieStorage must be \"lax\", \"strict\" or \"none\".');\n            }\n            if (sameSite === 'none' && !this.secure) {\n                throw new Error('sameSite = None requires the Secure attribute in latest browser versions.');\n            }\n            this.sameSite = sameSite;\n        }\n    }\n    async setItem(key, value) {\n        JsCookie.set(key, value, this.getData());\n    }\n    async getItem(key) {\n        const item = JsCookie.get(key);\n        return item ?? null;\n    }\n    async removeItem(key) {\n        JsCookie.remove(key, this.getData());\n    }\n    async clear() {\n        const cookie = JsCookie.get();\n        const promises = Object.keys(cookie).map(key => this.removeItem(key));\n        await Promise.all(promises);\n    }\n    getData() {\n        return {\n            path: this.path,\n            expires: this.expires,\n            domain: this.domain,\n            secure: this.secure,\n            ...(this.sameSite && { sameSite: this.sameSite }),\n        };\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { DefaultStorage } from './DefaultStorage';\nimport { InMemoryStorage } from './InMemoryStorage';\nimport { KeyValueStorage } from './KeyValueStorage';\nimport { SessionStorage } from './SessionStorage';\nexport { CookieStorage } from './CookieStorage';\nexport const defaultStorage = new DefaultStorage();\nexport const sessionStorage = new SessionStorage();\nexport const sharedInMemoryStorage = new KeyValueStorage(new InMemoryStorage());\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Default cache config\n */\nexport const defaultConfig = {\n    keyPrefix: 'aws-amplify-cache',\n    capacityInBytes: 1048576,\n    itemMaxSize: 210000,\n    defaultTTL: 259200000,\n    defaultPriority: 5,\n    warningThreshold: 0.8,\n};\nexport const currentSizeKey = 'CurSize';\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { currentSizeKey } from '../constants';\n/**\n * return the byte size of the string\n * @param str\n */\nexport function getByteLength(str) {\n    let ret = 0;\n    ret = str.length;\n    for (let i = str.length; i >= 0; i -= 1) {\n        const charCode = str.charCodeAt(i);\n        if (charCode > 0x7f && charCode <= 0x7ff) {\n            ret += 1;\n        }\n        else if (charCode > 0x7ff && charCode <= 0xffff) {\n            ret += 2;\n        }\n        // trail surrogate\n        if (charCode >= 0xdc00 && charCode <= 0xdfff) {\n            i -= 1;\n        }\n    }\n    return ret;\n}\n/**\n * get current time\n */\nexport function getCurrentTime() {\n    const currentTime = new Date();\n    return currentTime.getTime();\n}\n/**\n * check if passed value is an integer\n */\nexport function isInteger(value) {\n    if (Number.isInteger) {\n        return Number.isInteger(value);\n    }\n    return (typeof value === 'number' && isFinite(value) && Math.floor(value) === value);\n}\nexport const getCurrentSizeKey = (keyPrefix) => `${keyPrefix}${currentSizeKey}`;\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { createAssertionFunction } from '../../errors';\nexport var CacheErrorCode;\n(function (CacheErrorCode) {\n    CacheErrorCode[\"NoCacheItem\"] = \"NoCacheItem\";\n    CacheErrorCode[\"NullNextNode\"] = \"NullNextNode\";\n    CacheErrorCode[\"NullPreviousNode\"] = \"NullPreviousNode\";\n})(CacheErrorCode || (CacheErrorCode = {}));\nconst cacheErrorMap = {\n    [CacheErrorCode.NoCacheItem]: {\n        message: 'Item not found in the cache storage.',\n    },\n    [CacheErrorCode.NullNextNode]: {\n        message: 'Next node is null.',\n    },\n    [CacheErrorCode.NullPreviousNode]: {\n        message: 'Previous node is null.',\n    },\n};\nexport const assert = createAssertionFunction(cacheErrorMap);\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ConsoleLogger } from '../Logger';\nimport { currentSizeKey, defaultConfig } from './constants';\nimport { getByteLength, getCurrentSizeKey, getCurrentTime } from './utils';\nimport { CacheErrorCode, assert } from './utils/errorHelpers';\nconst logger = new ConsoleLogger('StorageCache');\n/**\n * Initialization of the cache\n *\n */\nexport class StorageCacheCommon {\n    /**\n     * Initialize the cache\n     *\n     * @param config - Custom configuration for this instance.\n     */\n    constructor({ config, keyValueStorage, }) {\n        this.config = {\n            ...defaultConfig,\n            ...config,\n        };\n        this.keyValueStorage = keyValueStorage;\n        this.sanitizeConfig();\n    }\n    getModuleName() {\n        return 'Cache';\n    }\n    /**\n     * Set custom configuration for the cache instance.\n     *\n     * @param config - customized configuration (without keyPrefix, which can't be changed)\n     *\n     * @return - the current configuration\n     */\n    configure(config) {\n        if (config) {\n            if (config.keyPrefix) {\n                logger.warn('keyPrefix can not be re-configured on an existing Cache instance.');\n            }\n            this.config = {\n                ...this.config,\n                ...config,\n            };\n        }\n        this.sanitizeConfig();\n        return this.config;\n    }\n    /**\n     * return the current size of the cache\n     * @return {Promise}\n     */\n    async getCurrentCacheSize() {\n        let size = await this.getStorage().getItem(getCurrentSizeKey(this.config.keyPrefix));\n        if (!size) {\n            await this.getStorage().setItem(getCurrentSizeKey(this.config.keyPrefix), '0');\n            size = '0';\n        }\n        return Number(size);\n    }\n    /**\n     * Set item into cache. You can put number, string, boolean or object.\n     * The cache will first check whether has the same key.\n     * If it has, it will delete the old item and then put the new item in\n     * The cache will pop out items if it is full\n     * You can specify the cache item options. The cache will abort and output a warning:\n     * If the key is invalid\n     * If the size of the item exceeds itemMaxSize.\n     * If the value is undefined\n     * If incorrect cache item configuration\n     * If error happened with browser storage\n     *\n     * @param {String} key - the key of the item\n     * @param {Object} value - the value of the item\n     * @param {Object} [options] - optional, the specified meta-data\n     *\n     * @return {Promise}\n     */\n    async setItem(key, value, options) {\n        logger.debug(`Set item: key is ${key}, value is ${value} with options: ${options}`);\n        if (!key || key === currentSizeKey) {\n            logger.warn(`Invalid key: should not be empty or reserved key: '${currentSizeKey}'`);\n            return;\n        }\n        if (typeof value === 'undefined') {\n            logger.warn(`The value of item should not be undefined!`);\n            return;\n        }\n        const cacheItemOptions = {\n            priority: options?.priority !== undefined\n                ? options.priority\n                : this.config.defaultPriority,\n            expires: options?.expires !== undefined\n                ? options.expires\n                : this.config.defaultTTL + getCurrentTime(),\n        };\n        if (cacheItemOptions.priority < 1 || cacheItemOptions.priority > 5) {\n            logger.warn(`Invalid parameter: priority due to out or range. It should be within 1 and 5.`);\n            return;\n        }\n        const prefixedKey = `${this.config.keyPrefix}${key}`;\n        const item = this.fillCacheItem(prefixedKey, value, cacheItemOptions);\n        // check whether this item is too big;\n        if (item.byteSize > this.config.itemMaxSize) {\n            logger.warn(`Item with key: ${key} you are trying to put into is too big!`);\n            return;\n        }\n        try {\n            // first look into the storage, if it exists, delete it.\n            const val = await this.getStorage().getItem(prefixedKey);\n            if (val) {\n                await this.removeCacheItem(prefixedKey, JSON.parse(val).byteSize);\n            }\n            // check whether the cache is full\n            if (await this.isCacheFull(item.byteSize)) {\n                const validKeys = await this.clearInvalidAndGetRemainingKeys();\n                if (await this.isCacheFull(item.byteSize)) {\n                    const sizeToPop = await this.sizeToPop(item.byteSize);\n                    await this.popOutItems(validKeys, sizeToPop);\n                }\n            }\n            // put item in the cache\n            return this.setCacheItem(prefixedKey, item);\n        }\n        catch (e) {\n            logger.warn(`setItem failed! ${e}`);\n        }\n    }\n    /**\n     * Get item from cache. It will return null if item doesn’t exist or it has been expired.\n     * If you specified callback function in the options,\n     * then the function will be executed if no such item in the cache\n     * and finally put the return value into cache.\n     * Please make sure the callback function will return the value you want to put into the cache.\n     * The cache will abort output a warning:\n     * If the key is invalid\n     * If error happened with AsyncStorage\n     *\n     * @param {String} key - the key of the item\n     * @param {Object} [options] - the options of callback function\n     *\n     * @return {Promise} - return a promise resolves to be the value of the item\n     */\n    async getItem(key, options) {\n        logger.debug(`Get item: key is ${key} with options ${options}`);\n        let cached;\n        if (!key || key === currentSizeKey) {\n            logger.warn(`Invalid key: should not be empty or reserved key: '${currentSizeKey}'`);\n            return null;\n        }\n        const prefixedKey = `${this.config.keyPrefix}${key}`;\n        try {\n            cached = await this.getStorage().getItem(prefixedKey);\n            if (cached != null) {\n                if (await this.isExpired(prefixedKey)) {\n                    // if expired, remove that item and return null\n                    await this.removeCacheItem(prefixedKey, JSON.parse(cached).byteSize);\n                }\n                else {\n                    // if not expired, update its visitedTime and return the value\n                    const item = await this.updateVisitedTime(JSON.parse(cached), prefixedKey);\n                    return item.data;\n                }\n            }\n            if (options?.callback) {\n                const val = options.callback();\n                if (val !== null) {\n                    await this.setItem(key, val, options);\n                }\n                return val;\n            }\n            return null;\n        }\n        catch (e) {\n            logger.warn(`getItem failed! ${e}`);\n            return null;\n        }\n    }\n    /**\n     * remove item from the cache\n     * The cache will abort output a warning:\n     * If error happened with AsyncStorage\n     * @param {String} key - the key of the item\n     * @return {Promise}\n     */\n    async removeItem(key) {\n        logger.debug(`Remove item: key is ${key}`);\n        if (!key || key === currentSizeKey) {\n            logger.warn(`Invalid key: should not be empty or reserved key: '${currentSizeKey}'`);\n            return;\n        }\n        const prefixedKey = `${this.config.keyPrefix}${key}`;\n        try {\n            const val = await this.getStorage().getItem(prefixedKey);\n            if (val) {\n                await this.removeCacheItem(prefixedKey, JSON.parse(val).byteSize);\n            }\n        }\n        catch (e) {\n            logger.warn(`removeItem failed! ${e}`);\n        }\n    }\n    /**\n     * Return all the keys owned by this cache.\n     * Will return an empty array if error occurred.\n     *\n     * @return {Promise}\n     */\n    async getAllKeys() {\n        try {\n            return await this.getAllCacheKeys();\n        }\n        catch (e) {\n            logger.warn(`getAllkeys failed! ${e}`);\n            return [];\n        }\n    }\n    getStorage() {\n        return this.keyValueStorage;\n    }\n    /**\n     * check whether item is expired\n     *\n     * @param key - the key of the item\n     *\n     * @return true if the item is expired.\n     */\n    async isExpired(key) {\n        const text = await this.getStorage().getItem(key);\n        assert(text !== null, CacheErrorCode.NoCacheItem, `Key: ${key}`);\n        const item = JSON.parse(text);\n        if (getCurrentTime() >= item.expires) {\n            return true;\n        }\n        return false;\n    }\n    /**\n     * delete item from cache\n     *\n     * @param prefixedKey - the key of the item\n     * @param size - optional, the byte size of the item\n     */\n    async removeCacheItem(prefixedKey, size) {\n        const item = await this.getStorage().getItem(prefixedKey);\n        assert(item !== null, CacheErrorCode.NoCacheItem, `Key: ${prefixedKey}`);\n        const itemSize = size ?? JSON.parse(item).byteSize;\n        // first try to update the current size of the cache\n        await this.decreaseCurrentSizeInBytes(itemSize);\n        // try to remove the item from cache\n        try {\n            await this.getStorage().removeItem(prefixedKey);\n        }\n        catch (removeItemError) {\n            // if some error happened, we need to rollback the current size\n            await this.increaseCurrentSizeInBytes(itemSize);\n            logger.error(`Failed to remove item: ${removeItemError}`);\n        }\n    }\n    /**\n     * produce a JSON object with meta-data and data value\n     * @param value - the value of the item\n     * @param options - optional, the specified meta-data\n     *\n     * @return - the item which has the meta-data and the value\n     */\n    fillCacheItem(key, value, options) {\n        const item = {\n            key,\n            data: value,\n            timestamp: getCurrentTime(),\n            visitedTime: getCurrentTime(),\n            priority: options.priority ?? 0,\n            expires: options.expires ?? 0,\n            type: typeof value,\n            byteSize: 0,\n        };\n        // calculate byte size\n        item.byteSize = getByteLength(JSON.stringify(item));\n        // re-calculate using cache item with updated byteSize property\n        item.byteSize = getByteLength(JSON.stringify(item));\n        return item;\n    }\n    sanitizeConfig() {\n        if (this.config.itemMaxSize > this.config.capacityInBytes) {\n            logger.error('Invalid parameter: itemMaxSize. It should be smaller than capacityInBytes. Setting back to default.');\n            this.config.itemMaxSize = defaultConfig.itemMaxSize;\n        }\n        if (this.config.defaultPriority > 5 || this.config.defaultPriority < 1) {\n            logger.error('Invalid parameter: defaultPriority. It should be between 1 and 5. Setting back to default.');\n            this.config.defaultPriority = defaultConfig.defaultPriority;\n        }\n        if (Number(this.config.warningThreshold) > 1 ||\n            Number(this.config.warningThreshold) < 0) {\n            logger.error('Invalid parameter: warningThreshold. It should be between 0 and 1. Setting back to default.');\n            this.config.warningThreshold = defaultConfig.warningThreshold;\n        }\n        // Set 5MB limit\n        const cacheLimit = 5 * 1024 * 1024;\n        if (this.config.capacityInBytes > cacheLimit) {\n            logger.error('Cache Capacity should be less than 5MB. Setting back to default. Setting back to default.');\n            this.config.capacityInBytes = defaultConfig.capacityInBytes;\n        }\n    }\n    /**\n     * increase current size of the cache\n     *\n     * @param amount - the amount of the cache szie which need to be increased\n     */\n    async increaseCurrentSizeInBytes(amount) {\n        const size = await this.getCurrentCacheSize();\n        await this.getStorage().setItem(getCurrentSizeKey(this.config.keyPrefix), (size + amount).toString());\n    }\n    /**\n     * decrease current size of the cache\n     *\n     * @param amount - the amount of the cache size which needs to be decreased\n     */\n    async decreaseCurrentSizeInBytes(amount) {\n        const size = await this.getCurrentCacheSize();\n        await this.getStorage().setItem(getCurrentSizeKey(this.config.keyPrefix), (size - amount).toString());\n    }\n    /**\n     * update the visited time if item has been visited\n     *\n     * @param item - the item which need to be updated\n     * @param prefixedKey - the key of the item\n     *\n     * @return the updated item\n     */\n    async updateVisitedTime(item, prefixedKey) {\n        item.visitedTime = getCurrentTime();\n        await this.getStorage().setItem(prefixedKey, JSON.stringify(item));\n        return item;\n    }\n    /**\n     * put item into cache\n     *\n     * @param prefixedKey - the key of the item\n     * @param itemData - the value of the item\n     * @param itemSizeInBytes - the byte size of the item\n     */\n    async setCacheItem(prefixedKey, item) {\n        // first try to update the current size of the cache.\n        await this.increaseCurrentSizeInBytes(item.byteSize);\n        // try to add the item into cache\n        try {\n            await this.getStorage().setItem(prefixedKey, JSON.stringify(item));\n        }\n        catch (setItemErr) {\n            // if some error happened, we need to rollback the current size\n            await this.decreaseCurrentSizeInBytes(item.byteSize);\n            logger.error(`Failed to set item ${setItemErr}`);\n        }\n    }\n    /**\n     * total space needed when poping out items\n     *\n     * @param itemSize\n     *\n     * @return total space needed\n     */\n    async sizeToPop(itemSize) {\n        const cur = await this.getCurrentCacheSize();\n        const spaceItemNeed = cur + itemSize - this.config.capacityInBytes;\n        const cacheThresholdSpace = (1 - this.config.warningThreshold) * this.config.capacityInBytes;\n        return spaceItemNeed > cacheThresholdSpace\n            ? spaceItemNeed\n            : cacheThresholdSpace;\n    }\n    /**\n     * see whether cache is full\n     *\n     * @param itemSize\n     *\n     * @return true if cache is full\n     */\n    async isCacheFull(itemSize) {\n        const cur = await this.getCurrentCacheSize();\n        return itemSize + cur > this.config.capacityInBytes;\n    }\n    /**\n     * get all the items we have, sort them by their priority,\n     * if priority is same, sort them by their last visited time\n     * pop out items from the low priority (5 is the lowest)\n     * @private\n     * @param keys - all the keys in this cache\n     * @param sizeToPop - the total size of the items which needed to be poped out\n     */\n    async popOutItems(keys, sizeToPop) {\n        const items = [];\n        let remainedSize = sizeToPop;\n        for (const key of keys) {\n            const val = await this.getStorage().getItem(key);\n            if (val != null) {\n                const item = JSON.parse(val);\n                items.push(item);\n            }\n        }\n        // first compare priority\n        // then compare visited time\n        items.sort((a, b) => {\n            if (a.priority > b.priority) {\n                return -1;\n            }\n            else if (a.priority < b.priority) {\n                return 1;\n            }\n            else {\n                if (a.visitedTime < b.visitedTime) {\n                    return -1;\n                }\n                else\n                    return 1;\n            }\n        });\n        for (const item of items) {\n            // pop out items until we have enough room for new item\n            await this.removeCacheItem(item.key, item.byteSize);\n            remainedSize -= item.byteSize;\n            if (remainedSize <= 0) {\n                return;\n            }\n        }\n    }\n    /**\n     * Scan the storage and combine the following operations for efficiency\n     *   1. Clear out all expired keys owned by this cache, not including the size key.\n     *   2. Return the remaining keys.\n     *\n     * @return The remaining valid keys\n     */\n    async clearInvalidAndGetRemainingKeys() {\n        const remainingKeys = [];\n        const keys = await this.getAllCacheKeys({\n            omitSizeKey: true,\n        });\n        for (const key of keys) {\n            if (await this.isExpired(key)) {\n                await this.removeCacheItem(key);\n            }\n            else {\n                remainingKeys.push(key);\n            }\n        }\n        return remainingKeys;\n    }\n    /**\n     * clear the entire cache\n     * The cache will abort and output a warning if error occurs\n     * @return {Promise}\n     */\n    async clear() {\n        logger.debug(`Clear Cache`);\n        try {\n            const keys = await this.getAllKeys();\n            for (const key of keys) {\n                await this.getStorage().removeItem(key);\n            }\n        }\n        catch (e) {\n            logger.warn(`clear failed! ${e}`);\n        }\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ConsoleLogger } from '../Logger';\nimport { KeyValueStorage } from '../storage/KeyValueStorage';\nimport { getLocalStorageWithFallback } from '../storage/utils';\nimport { defaultConfig } from './constants';\nimport { StorageCacheCommon } from './StorageCacheCommon';\nimport { getCurrentSizeKey, getCurrentTime } from './utils';\nconst logger = new ConsoleLogger('StorageCache');\n/**\n * Customized storage based on the SessionStorage or LocalStorage with LRU implemented\n */\nexport class StorageCache extends StorageCacheCommon {\n    /**\n     * initialize the cache\n     * @param config - the configuration of the cache\n     */\n    constructor(config) {\n        const storage = getLocalStorageWithFallback();\n        super({ config, keyValueStorage: new KeyValueStorage(storage) });\n        this.storage = storage;\n        this.getItem = this.getItem.bind(this);\n        this.setItem = this.setItem.bind(this);\n        this.removeItem = this.removeItem.bind(this);\n    }\n    async getAllCacheKeys(options) {\n        const { omitSizeKey } = options ?? {};\n        const keys = [];\n        for (let i = 0; i < this.storage.length; i++) {\n            const key = this.storage.key(i);\n            if (omitSizeKey && key === getCurrentSizeKey(this.config.keyPrefix)) {\n                continue;\n            }\n            if (key?.startsWith(this.config.keyPrefix)) {\n                keys.push(key.substring(this.config.keyPrefix.length));\n            }\n        }\n        return keys;\n    }\n    /**\n     * Return a new instance of cache with customized configuration.\n     * @param {Object} config - the customized configuration\n     * @return {Object} - the new instance of Cache\n     */\n    createInstance(config) {\n        if (!config.keyPrefix || config.keyPrefix === defaultConfig.keyPrefix) {\n            logger.error('invalid keyPrefix, setting keyPrefix with timeStamp');\n            config.keyPrefix = getCurrentTime.toString();\n        }\n        return new StorageCache(config);\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { StorageCache } from './StorageCache';\nexport const Cache = new StorageCache();\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ConsoleLogger } from '../Logger';\nconst logger = new ConsoleLogger('I18n');\n/**\n * Language translation utility.\n */\nexport class I18n {\n    constructor() {\n        /**\n         * @private\n         */\n        this._options = null;\n        /**\n         * @private\n         */\n        this._lang = null;\n        /**\n         * @private\n         */\n        this._dict = {};\n    }\n    /**\n     * Sets the default language from the configuration when required.\n     */\n    setDefaultLanguage() {\n        // Default to window language if not set in instance\n        if (!this._lang &&\n            typeof window !== 'undefined' &&\n            window &&\n            window.navigator) {\n            this._lang = window.navigator.language;\n        }\n        logger.debug(this._lang);\n    }\n    /**\n     * @method\n     * Explicitly setting language\n     * @param {String} lang\n     */\n    setLanguage(lang) {\n        this._lang = lang;\n    }\n    /**\n     * @method\n     * Get value\n     * @param {String} key\n     * @param {String} defVal - Default value\n     */\n    get(key, defVal = undefined) {\n        this.setDefaultLanguage();\n        if (!this._lang) {\n            return typeof defVal !== 'undefined' ? defVal : key;\n        }\n        const lang = this._lang;\n        let val = this.getByLanguage(key, lang);\n        if (val) {\n            return val;\n        }\n        if (lang.indexOf('-') > 0) {\n            val = this.getByLanguage(key, lang.split('-')[0]);\n        }\n        if (val) {\n            return val;\n        }\n        return typeof defVal !== 'undefined' ? defVal : key;\n    }\n    /**\n     * @method\n     * Get value according to specified language\n     * @param {String} key\n     * @param {String} language - Specified langurage to be used\n     * @param {String} defVal - Default value\n     */\n    getByLanguage(key, language, defVal = null) {\n        if (!language) {\n            return defVal;\n        }\n        const langDict = this._dict[language];\n        if (!langDict) {\n            return defVal;\n        }\n        return langDict[key];\n    }\n    /**\n     * @method\n     * Add vocabularies for one language\n     * @param {String} language - Language of the dictionary\n     * @param {Object} vocabularies - Object that has key-value as dictionary entry\n     */\n    putVocabulariesForLanguage(language, vocabularies) {\n        let langDict = this._dict[language];\n        if (!langDict) {\n            langDict = this._dict[language] = {};\n        }\n        this._dict[language] = { ...langDict, ...vocabularies };\n    }\n    /**\n     * @method\n     * Add vocabularies for one language\n     * @param {Object} vocabularies - Object that has language as key,\n     *                                vocabularies of each language as value\n     */\n    putVocabularies(vocabularies) {\n        Object.keys(vocabularies).forEach(key => {\n            this.putVocabulariesForLanguage(key, vocabularies[key]);\n        });\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { createAssertionFunction } from '../errors';\nexport var I18nErrorCode;\n(function (I18nErrorCode) {\n    I18nErrorCode[\"NotConfigured\"] = \"NotConfigured\";\n})(I18nErrorCode || (I18nErrorCode = {}));\nconst i18nErrorMap = {\n    [I18nErrorCode.NotConfigured]: {\n        message: 'i18n is not configured.',\n    },\n};\nexport const assert = createAssertionFunction(i18nErrorMap);\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ConsoleLogger } from '../Logger';\nimport { I18n as I18nClass } from './I18n';\nimport { I18nErrorCode, assert } from './errorHelpers';\nconst logger = new ConsoleLogger('I18n');\nlet _config = { language: null };\nlet _i18n = null;\n/**\n * Export I18n APIs\n */\nexport class I18n {\n    /**\n     * @static\n     * @method\n     * Configure I18n part\n     * @param {Object} config - Configuration of the I18n\n     */\n    static configure(config) {\n        logger.debug('configure I18n');\n        if (!config) {\n            return _config;\n        }\n        _config = Object.assign({}, _config, config.I18n || config);\n        I18n.createInstance();\n        return _config;\n    }\n    static getModuleName() {\n        return 'I18n';\n    }\n    /**\n     * @static\n     * @method\n     * Create an instance of I18n for the library\n     */\n    static createInstance() {\n        logger.debug('create I18n instance');\n        if (_i18n) {\n            return;\n        }\n        _i18n = new I18nClass();\n    }\n    /**\n     * @static @method\n     * Explicitly setting language\n     * @param {String} lang\n     */\n    static setLanguage(lang) {\n        I18n.checkConfig();\n        assert(!!_i18n, I18nErrorCode.NotConfigured);\n        _i18n.setLanguage(lang);\n    }\n    /**\n     * @static @method\n     * Get value\n     * @param {String} key\n     * @param {String} defVal - Default value\n     */\n    static get(key, defVal) {\n        if (!I18n.checkConfig()) {\n            return typeof defVal === 'undefined' ? key : defVal;\n        }\n        assert(!!_i18n, I18nErrorCode.NotConfigured);\n        return _i18n.get(key, defVal);\n    }\n    /**\n     * @static\n     * @method\n     * Add vocabularies for one language\n     * @param {String} language - Language of the dictionary\n     * @param {Object} vocabularies - Object that has key-value as dictionary entry\n     */\n    static putVocabulariesForLanguage(language, vocabularies) {\n        I18n.checkConfig();\n        assert(!!_i18n, I18nErrorCode.NotConfigured);\n        _i18n.putVocabulariesForLanguage(language, vocabularies);\n    }\n    /**\n     * @static\n     * @method\n     * Add vocabularies for one language\n     * @param {Object} vocabularies - Object that has language as key,\n     *                                vocabularies of each language as value\n     */\n    static putVocabularies(vocabularies) {\n        I18n.checkConfig();\n        assert(!!_i18n, I18nErrorCode.NotConfigured);\n        _i18n.putVocabularies(vocabularies);\n    }\n    static checkConfig() {\n        if (!_i18n) {\n            I18n.createInstance();\n        }\n        return true;\n    }\n}\n// Create an instance of I18n in the static class\nI18n.createInstance();\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { getDnsSuffix } from '../../clients/endpoints';\nimport { getRetryDecider, jitteredBackoff, } from '../../clients/middleware/retry';\nimport { parseJsonError } from '../../clients/serde/json';\nimport { getAmplifyUserAgent } from '../../Platform';\nimport { AmplifyUrl } from '../../utils/amplifyUrl';\n/**\n * The service name used to sign requests if the API requires authentication.\n */\nconst SERVICE_NAME = 'mobiletargeting';\n/**\n * The endpoint resolver function that returns the endpoint URL for a given region.\n */\nconst endpointResolver = ({ region }) => ({\n    url: new AmplifyUrl(`https://pinpoint.${region}.${getDnsSuffix(region)}`),\n});\n/**\n * @internal\n */\nexport const defaultConfig = {\n    service: SERVICE_NAME,\n    endpointResolver,\n    retryDecider: getRetryDecider(parseJsonError),\n    computeDelay: jitteredBackoff,\n    userAgentValue: getAmplifyUserAgent(),\n};\n/**\n * @internal\n */\nexport const getSharedHeaders = () => ({\n    'content-type': 'application/json',\n});\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { createAssertionFunction } from '../../errors';\nexport var PinpointValidationErrorCode;\n(function (PinpointValidationErrorCode) {\n    PinpointValidationErrorCode[\"NoAppId\"] = \"NoAppId\";\n})(PinpointValidationErrorCode || (PinpointValidationErrorCode = {}));\nconst pinpointValidationErrorMap = {\n    [PinpointValidationErrorCode.NoAppId]: {\n        message: 'Missing application id.',\n    },\n};\nexport const assert = createAssertionFunction(pinpointValidationErrorMap);\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns signed headers.\n *\n * @param headers `headers` from the request.\n * @returns List of headers included in canonical headers, separated by semicolons (;). This indicates which headers\n * are part of the signing process. Header names must use lowercase characters and must appear in alphabetical order.\n *\n * @internal\n */\nexport const getSignedHeaders = (headers) => Object.keys(headers)\n    .map(key => key.toLowerCase())\n    .sort()\n    .join(';');\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// query params\nexport const ALGORITHM_QUERY_PARAM = 'X-Amz-Algorithm';\nexport const AMZ_DATE_QUERY_PARAM = 'X-Amz-Date';\nexport const CREDENTIAL_QUERY_PARAM = 'X-Amz-Credential';\nexport const EXPIRES_QUERY_PARAM = 'X-Amz-Expires';\nexport const REGION_SET_PARAM = 'X-Amz-Region-Set';\nexport const SIGNATURE_QUERY_PARAM = 'X-Amz-Signature';\nexport const SIGNED_HEADERS_QUERY_PARAM = 'X-Amz-SignedHeaders';\nexport const TOKEN_QUERY_PARAM = 'X-Amz-Security-Token';\n// headers\nexport const AUTH_HEADER = 'authorization';\nexport const HOST_HEADER = 'host';\nexport const AMZ_DATE_HEADER = AMZ_DATE_QUERY_PARAM.toLowerCase();\nexport const TOKEN_HEADER = TOKEN_QUERY_PARAM.toLowerCase();\n// identifiers\nexport const KEY_TYPE_IDENTIFIER = 'aws4_request';\nexport const SHA256_ALGORITHM_IDENTIFIER = 'AWS4-HMAC-SHA256';\nexport const SIGNATURE_IDENTIFIER = 'AWS4';\n// preset values\nexport const EMPTY_HASH = 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855';\nexport const UNSIGNED_PAYLOAD = 'UNSIGNED-PAYLOAD';\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { KEY_TYPE_IDENTIFIER } from '../constants';\n/**\n * Returns the credential scope which restricts the resulting signature to the specified region and service.\n *\n * @param date Current date in the format 'YYYYMMDD'.\n * @param region AWS region in which the service resides.\n * @param service Service to which the signed request is being sent.\n *\n * @returns  A string representing the credential scope with format 'YYYYMMDD/region/service/aws4_request'.\n *\n * @internal\n */\nexport const getCredentialScope = (date, region, service) => `${date}/${region}/${service}/${KEY_TYPE_IDENTIFIER}`;\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns expected date strings to be used in signing.\n *\n * @param date JavaScript `Date` object.\n * @returns `FormattedDates` object containing the following:\n * - longDate: A date string in 'YYYYMMDDThhmmssZ' format\n * - shortDate: A date string in 'YYYYMMDD' format\n *\n * @internal\n */\nexport const getFormattedDates = (date) => {\n    const longDate = date.toISOString().replace(/[:-]|\\.\\d{3}/g, '');\n    return {\n        longDate,\n        shortDate: longDate.slice(0, 8),\n    };\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { getCredentialScope } from './getCredentialScope';\nimport { getFormattedDates } from './getFormattedDates';\n/**\n * Extracts common values used for signing both requests and urls.\n *\n * @param options `SignRequestOptions` object containing values used to construct the signature.\n * @returns Common `SigningValues` used for signing.\n *\n * @internal\n */\nexport const getSigningValues = ({ credentials, signingDate = new Date(), signingRegion, signingService, uriEscapePath = true, }) => {\n    // get properties from credentials\n    const { accessKeyId, secretAccessKey, sessionToken } = credentials;\n    // get formatted dates for signing\n    const { longDate, shortDate } = getFormattedDates(signingDate);\n    // copy header and set signing properties\n    const credentialScope = getCredentialScope(shortDate, signingRegion, signingService);\n    return {\n        accessKeyId,\n        credentialScope,\n        longDate,\n        secretAccessKey,\n        sessionToken,\n        shortDate,\n        signingRegion,\n        signingService,\n        uriEscapePath,\n    };\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// TODO: V6 update to different crypto dependency?\nimport { Sha256 } from '@aws-crypto/sha256-js';\nimport { toHex } from '@smithy/util-hex-encoding';\n/**\n * Returns the hashed data a `Uint8Array`.\n *\n * @param key `SourceData` to be used as hashing key.\n * @param data Hashable `SourceData`.\n * @returns `Uint8Array` created from the data as input to a hash function.\n */\nexport const getHashedData = (key, data) => {\n    const sha256 = new Sha256(key ?? undefined);\n    sha256.update(data);\n    // TODO: V6 flip to async digest\n    const hashedData = sha256.digestSync();\n    return hashedData;\n};\n/**\n * Returns the hashed data as a hex string.\n *\n * @param key `SourceData` to be used as hashing key.\n * @param data Hashable `SourceData`.\n * @returns String using lowercase hexadecimal characters created from the data as input to a hash function.\n *\n * @internal\n */\nexport const getHashedDataAsHex = (key, data) => {\n    const hashedData = getHashedData(key, data);\n    return toHex(hashedData);\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns canonical headers.\n *\n * @param headers Headers from the request.\n * @returns Request headers that will be signed, and their values, separated by newline characters. Header names must\n * use lowercase characters, must appear in alphabetical order, and must be followed by a colon (:). For the values,\n * trim any leading or trailing spaces, convert sequential spaces to a single space, and separate the values\n * for a multi-value header using commas.\n *\n * @internal\n */\nexport const getCanonicalHeaders = (headers) => Object.entries(headers)\n    .map(([key, value]) => ({\n    key: key.toLowerCase(),\n    value: value?.trim().replace(/\\s+/g, ' ') ?? '',\n}))\n    .sort((a, b) => (a.key < b.key ? -1 : 1))\n    .map(entry => `${entry.key}:${entry.value}\\n`)\n    .join('');\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns a canonical query string.\n *\n * @param searchParams `searchParams` from the request url.\n * @returns URL-encoded query string parameters, separated by ampersands (&). Percent-encode reserved characters,\n * including the space character. Encode names and values separately. If there are empty parameters, append the equals\n * sign to the parameter name before encoding. After encoding, sort the parameters alphabetically by key name. If there\n * is no query string, use an empty string (\"\").\n *\n * @internal\n */\nexport const getCanonicalQueryString = (searchParams) => Array.from(searchParams)\n    .sort(([keyA, valA], [keyB, valB]) => {\n    if (keyA === keyB) {\n        return valA < valB ? -1 : 1;\n    }\n    return keyA < keyB ? -1 : 1;\n})\n    .map(([key, val]) => `${escapeUri(key)}=${escapeUri(val)}`)\n    .join('&');\nconst escapeUri = (uri) => encodeURIComponent(uri).replace(/[!'()*]/g, hexEncode);\nconst hexEncode = (c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`;\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns a canonical uri.\n *\n * @param pathname `pathname` from request url.\n * @param uriEscapePath Whether to uri encode the path as part of canonical uri. It's used for S3 only where the\n *   pathname is already uri encoded, and the signing process is not expected to uri encode it again. Defaults to true.\n * @returns URI-encoded version of the absolute path component URL (everything between the host and the question mark\n * character (?) that starts the query string parameters). If the absolute path is empty, a forward slash character (/).\n *\n * @internal\n */\nexport const getCanonicalUri = (pathname, uriEscapePath = true) => pathname\n    ? uriEscapePath\n        ? encodeURIComponent(pathname).replace(/%2F/g, '/')\n        : pathname\n    : '/';\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { EMPTY_HASH, UNSIGNED_PAYLOAD } from '../constants';\nimport { getHashedDataAsHex } from './dataHashHelpers';\n/**\n * Returns the hashed payload.\n *\n * @param body `body` (payload) from the request.\n * @returns String created using the payload in the body of the HTTP request as input to a hash function. This string\n * uses lowercase hexadecimal characters. If the payload is empty, return precalculated result of an empty hash.\n *\n * @internal\n */\nexport const getHashedPayload = (body) => {\n    // return precalculated empty hash if body is undefined or null\n    if (body == null) {\n        return EMPTY_HASH;\n    }\n    if (isSourceData(body)) {\n        const hashedData = getHashedDataAsHex(null, body);\n        return hashedData;\n    }\n    // Defined body is not signable. Return unsigned payload which may or may not be accepted by the service.\n    return UNSIGNED_PAYLOAD;\n};\nconst isSourceData = (body) => typeof body === 'string' || ArrayBuffer.isView(body) || isArrayBuffer(body);\nconst isArrayBuffer = (arg) => (typeof ArrayBuffer === 'function' && arg instanceof ArrayBuffer) ||\n    Object.prototype.toString.call(arg) === '[object ArrayBuffer]';\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { getCanonicalHeaders } from './getCanonicalHeaders';\nimport { getCanonicalQueryString } from './getCanonicalQueryString';\nimport { getCanonicalUri } from './getCanonicalUri';\nimport { getHashedPayload } from './getHashedPayload';\nimport { getSignedHeaders } from './getSignedHeaders';\n/**\n * Returns a canonical request.\n *\n * @param request `HttpRequest` from which to create the canonical request from.\n * @param uriEscapePath Whether to uri encode the path as part of canonical uri. It's used for S3 only where the\n *   pathname is already uri encoded, and the signing process is not expected to uri encode it again. Defaults to true.\n * @returns String created by by concatenating the following strings, separated by newline characters:\n * - HTTPMethod\n * - CanonicalUri\n * - CanonicalQueryString\n * - CanonicalHeaders\n * - SignedHeaders\n * - HashedPayload\n *\n * @internal\n */\nexport const getCanonicalRequest = ({ body, headers, method, url }, uriEscapePath = true) => [\n    method,\n    getCanonicalUri(url.pathname, uriEscapePath),\n    getCanonicalQueryString(url.searchParams),\n    getCanonicalHeaders(headers),\n    getSignedHeaders(headers),\n    getHashedPayload(body),\n].join('\\n');\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { KEY_TYPE_IDENTIFIER, SIGNATURE_IDENTIFIER } from '../constants';\nimport { getHashedData } from './dataHashHelpers';\n/**\n * Returns a signing key to be used for signing requests.\n *\n * @param secretAccessKey AWS secret access key from credentials.\n * @param date Current date in the format 'YYYYMMDD'.\n * @param region AWS region in which the service resides.\n * @param service Service to which the signed request is being sent.\n *\n * @returns `Uint8Array` calculated from its composite parts.\n *\n * @internal\n */\nexport const getSigningKey = (secretAccessKey, date, region, service) => {\n    const key = `${SIGNATURE_IDENTIFIER}${secretAccessKey}`;\n    const dateKey = getHashedData(key, date);\n    const regionKey = getHashedData(dateKey, region);\n    const serviceKey = getHashedData(regionKey, service);\n    const signingKey = getHashedData(serviceKey, KEY_TYPE_IDENTIFIER);\n    return signingKey;\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { SHA256_ALGORITHM_IDENTIFIER } from '../constants';\n/**\n * Returns a string to be signed.\n *\n * @param date Current date in the format 'YYYYMMDDThhmmssZ'.\n * @param credentialScope String representing the credential scope with format 'YYYYMMDD/region/service/aws4_request'.\n * @param hashedRequest Hashed canonical request.\n *\n * @returns A string created by by concatenating the following strings, separated by newline characters:\n * - Algorithm\n * - RequestDateTime\n * - CredentialScope\n * - HashedCanonicalRequest\n *\n * @internal\n */\nexport const getStringToSign = (date, credentialScope, hashedRequest) => [SHA256_ALGORITHM_IDENTIFIER, date, credentialScope, hashedRequest].join('\\n');\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { getHashedDataAsHex } from './dataHashHelpers';\nimport { getCanonicalRequest } from './getCanonicalRequest';\nimport { getSigningKey } from './getSigningKey';\nimport { getStringToSign } from './getStringToSign';\n/**\n * Calculates and returns an AWS API Signature.\n * https://docs.aws.amazon.com/IAM/latest/UserGuide/create-signed-request.html\n *\n * @param request `HttpRequest` to be signed.\n * @param signRequestOptions `SignRequestOptions` object containing values used to construct the signature.\n * @returns AWS API Signature to sign a request or url with.\n *\n * @internal\n */\nexport const getSignature = (request, { credentialScope, longDate, secretAccessKey, shortDate, signingRegion, signingService, uriEscapePath, }) => {\n    // step 1: create a canonical request\n    const canonicalRequest = getCanonicalRequest(request, uriEscapePath);\n    // step 2: create a hash of the canonical request\n    const hashedRequest = getHashedDataAsHex(null, canonicalRequest);\n    // step 3: create a string to sign\n    const stringToSign = getStringToSign(longDate, credentialScope, hashedRequest);\n    // step 4: calculate the signature\n    const signature = getHashedDataAsHex(getSigningKey(secretAccessKey, shortDate, signingRegion, signingService), stringToSign);\n    return signature;\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { getSignedHeaders } from './utils/getSignedHeaders';\nimport { getSigningValues } from './utils/getSigningValues';\nimport { AMZ_DATE_HEADER, AUTH_HEADER, HOST_HEADER, SHA256_ALGORITHM_IDENTIFIER, TOKEN_HEADER, } from './constants';\nimport { getSignature } from './utils/getSignature';\n/**\n * Given a `HttpRequest`, returns a Signature Version 4 signed `HttpRequest`.\n *\n * @param request `HttpRequest` to be signed.\n * @param signRequestOptions `SignRequestOptions` object containing values used to construct the signature.\n * @returns A `HttpRequest` with authentication headers which can grant temporary access to AWS resources.\n */\nexport const signRequest = (request, options) => {\n    const signingValues = getSigningValues(options);\n    const { accessKeyId, credentialScope, longDate, sessionToken } = signingValues;\n    // create the request to sign\n    const headers = { ...request.headers };\n    headers[HOST_HEADER] = request.url.host;\n    headers[AMZ_DATE_HEADER] = longDate;\n    if (sessionToken) {\n        headers[TOKEN_HEADER] = sessionToken;\n    }\n    const requestToSign = { ...request, headers };\n    // calculate and add the signature to the request\n    const signature = getSignature(requestToSign, signingValues);\n    const credentialEntry = `Credential=${accessKeyId}/${credentialScope}`;\n    const signedHeadersEntry = `SignedHeaders=${getSignedHeaders(headers)}`;\n    const signatureEntry = `Signature=${signature}`;\n    headers[AUTH_HEADER] =\n        `${SHA256_ALGORITHM_IDENTIFIER} ${credentialEntry}, ${signedHeadersEntry}, ${signatureEntry}`;\n    return requestToSign;\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns a `Date` that is corrected for clock skew.\n *\n * @param systemClockOffset The offset of the system clock in milliseconds.\n *\n * @returns `Date` representing the current time adjusted by the system clock offset.\n *\n * @internal\n */\nexport const getSkewCorrectedDate = (systemClockOffset) => new Date(Date.now() + systemClockOffset);\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { getSkewCorrectedDate } from './getSkewCorrectedDate';\n// 5 mins in milliseconds. Ref: https://github.com/aws/aws-sdk-js-v3/blob/6c0f44fab30a1bb2134af47362a31332abc3666b/packages/middleware-signing/src/utils/isClockSkewed.ts#L10\nconst SKEW_WINDOW = 5 * 60 * 1000;\n/**\n * Checks if the provided date is within the skew window of 5 minutes.\n *\n * @param clockTimeInMilliseconds Time to check for skew in milliseconds.\n * @param clockOffsetInMilliseconds Offset to check clock against in milliseconds.\n *\n * @returns True if skewed. False otherwise.\n *\n * @internal\n */\nexport const isClockSkewed = (clockTimeInMilliseconds, clockOffsetInMilliseconds) => Math.abs(getSkewCorrectedDate(clockOffsetInMilliseconds).getTime() -\n    clockTimeInMilliseconds) >= SKEW_WINDOW;\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { isClockSkewed } from './isClockSkewed';\n/**\n * Returns the difference between clock time and the current system time if clock is skewed.\n *\n * @param clockTimeInMilliseconds Clock time in milliseconds.\n * @param currentSystemClockOffset Current system clock offset in milliseconds.\n *\n * @internal\n */\nexport const getUpdatedSystemClockOffset = (clockTimeInMilliseconds, currentSystemClockOffset) => {\n    if (isClockSkewed(clockTimeInMilliseconds, currentSystemClockOffset)) {\n        return clockTimeInMilliseconds - Date.now();\n    }\n    return currentSystemClockOffset;\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { signRequest } from './signer/signatureV4';\nimport { getSkewCorrectedDate } from './utils/getSkewCorrectedDate';\nimport { getUpdatedSystemClockOffset } from './utils/getUpdatedSystemClockOffset';\n/**\n * Middleware that SigV4 signs request with AWS credentials, and correct system clock offset.\n * This middleware is expected to be placed after retry middleware.\n */\nexport const signingMiddlewareFactory = ({ credentials, region, service, uriEscapePath = true, }) => {\n    let currentSystemClockOffset;\n    return (next) => async function signingMiddleware(request) {\n        currentSystemClockOffset = currentSystemClockOffset ?? 0;\n        const signRequestOptions = {\n            credentials: typeof credentials === 'function' ? await credentials() : credentials,\n            signingDate: getSkewCorrectedDate(currentSystemClockOffset),\n            signingRegion: region,\n            signingService: service,\n            uriEscapePath,\n        };\n        const signedRequest = await signRequest(request, signRequestOptions);\n        const response = await next(signedRequest);\n        // Update system clock offset if response contains date header, regardless of the status code.\n        // non-2xx response will still be returned from next handler instead of thrown, because it's\n        // only thrown by the retry middleware.\n        const dateString = getDateHeader(response);\n        if (dateString) {\n            currentSystemClockOffset = getUpdatedSystemClockOffset(Date.parse(dateString), currentSystemClockOffset);\n        }\n        return response;\n    };\n};\nconst getDateHeader = ({ headers } = {}) => headers?.date ?? headers?.Date ?? headers?.['x-amz-date'];\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { retryMiddlewareFactory } from '../middleware/retry';\nimport { signingMiddlewareFactory, } from '../middleware/signing';\nimport { userAgentMiddlewareFactory, } from '../middleware/userAgent';\nimport { composeTransferHandler } from '../internal/composeTransferHandler';\nimport { fetchTransferHandler } from './fetch';\nexport const authenticatedHandler = composeTransferHandler(fetchTransferHandler, [\n    userAgentMiddlewareFactory,\n    retryMiddlewareFactory,\n    signingMiddlewareFactory,\n]);\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Wraps encodeURIComponent to encode additional characters to fully adhere to RFC 3986.\n * @see https://github.com/aws/aws-sdk-js-v3/blob/86b432c464150069678b25ff88d57c2ca26e75a2/packages/smithy-client/src/extended-encode-uri-component.ts#L7\n *\n * @param uri URI string to encode\n * @returns RFC 3986 encoded string\n *\n * @internal\n */\nexport const extendedEncodeURIComponent = (uri) => {\n    // Match characters normally not encoded by `encodeURIComponent`\n    const extendedCharacters = /[!'()*]/g;\n    return encodeURIComponent(uri).replace(extendedCharacters, hexEncode);\n};\nconst hexEncode = (c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`;\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { authenticatedHandler } from '../../clients/handlers/authenticated';\nimport { composeServiceApi } from '../../clients/internal/composeServiceApi';\nimport { extendedEncodeURIComponent } from '../../clients/middleware/signing/utils/extendedEncodeURIComponent';\nimport { parseJsonBody, parseJsonError, parseMetadata, } from '../../clients/serde';\nimport { AmplifyUrl } from '../../utils/amplifyUrl';\nimport { defaultConfig, getSharedHeaders } from './base';\nconst updateEndpointSerializer = ({ ApplicationId = '', EndpointId = '', EndpointRequest }, endpoint) => {\n    const headers = getSharedHeaders();\n    const url = new AmplifyUrl(endpoint.url);\n    url.pathname = `v1/apps/${extendedEncodeURIComponent(ApplicationId)}/endpoints/${extendedEncodeURIComponent(EndpointId)}`;\n    const body = JSON.stringify(EndpointRequest);\n    return { method: 'PUT', headers, url, body };\n};\nconst updateEndpointDeserializer = async (response) => {\n    if (response.statusCode >= 300) {\n        const error = await parseJsonError(response);\n        throw error;\n    }\n    else {\n        const { Message, RequestID } = await parseJsonBody(response);\n        return {\n            MessageBody: {\n                Message,\n                RequestID,\n            },\n            $metadata: parseMetadata(response),\n        };\n    }\n};\n/**\n * @internal\n */\nexport const updateEndpoint = composeServiceApi(authenticatedHandler, updateEndpointSerializer, updateEndpointDeserializer, defaultConfig);\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Default buffer constants\nexport const BUFFER_SIZE = 1000;\nexport const FLUSH_SIZE = 100;\nexport const FLUSH_INTERVAL = 5 * 1000; // 5s\nexport const RESEND_LIMIT = 5;\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { authenticatedHandler } from '../../clients/handlers/authenticated';\nimport { composeServiceApi } from '../../clients/internal/composeServiceApi';\nimport { extendedEncodeURIComponent } from '../../clients/middleware/signing/utils/extendedEncodeURIComponent';\nimport { parseJsonBody, parseJsonError, parseMetadata, } from '../../clients/serde';\nimport { AmplifyUrl } from '../../utils/amplifyUrl';\nimport { defaultConfig, getSharedHeaders } from './base';\nimport { PinpointValidationErrorCode, assert } from './errorHelpers';\nconst putEventsSerializer = ({ ApplicationId, EventsRequest }, endpoint) => {\n    assert(!!ApplicationId, PinpointValidationErrorCode.NoAppId);\n    const headers = getSharedHeaders();\n    const url = new AmplifyUrl(endpoint.url);\n    url.pathname = `v1/apps/${extendedEncodeURIComponent(ApplicationId)}/events`;\n    const body = JSON.stringify(EventsRequest ?? {});\n    return { method: 'POST', headers, url, body };\n};\nconst putEventsDeserializer = async (response) => {\n    if (response.statusCode >= 300) {\n        const error = await parseJsonError(response);\n        throw error;\n    }\n    else {\n        const { Results } = await parseJsonBody(response);\n        return {\n            EventsResponse: { Results },\n            $metadata: parseMetadata(response),\n        };\n    }\n};\n/**\n * @internal\n */\nexport const putEvents = composeServiceApi(authenticatedHandler, putEventsSerializer, putEventsDeserializer, defaultConfig);\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ConsoleLogger } from '../../../Logger';\nimport { putEvents, } from '../../../awsClients/pinpoint';\nimport { isAppInForeground } from './isAppInForeground';\nconst logger = new ConsoleLogger('PinpointEventBuffer');\nconst RETRYABLE_CODES = [429, 500];\nconst ACCEPTED_CODES = [202];\nexport class PinpointEventBuffer {\n    constructor(config) {\n        this._interval = undefined;\n        this._pause = false;\n        this._flush = false;\n        this._buffer = [];\n        this._config = config;\n        this._sendBatch = this._sendBatch.bind(this);\n        this._startLoop();\n    }\n    push(event) {\n        if (this._buffer.length >= this._config.bufferSize) {\n            logger.debug('Exceeded Pinpoint event buffer limits, event dropped.', {\n                eventId: event.eventId,\n            });\n            return;\n        }\n        this._buffer.push({ [event.eventId]: event });\n    }\n    pause() {\n        this._pause = true;\n    }\n    resume() {\n        this._pause = false;\n    }\n    flush() {\n        this._flush = true;\n    }\n    identityHasChanged(identityId) {\n        return this._config.identityId !== identityId;\n    }\n    flushAll() {\n        this._putEvents(this._buffer.splice(0, this._buffer.length));\n    }\n    _startLoop() {\n        if (this._interval) {\n            clearInterval(this._interval);\n        }\n        const { flushInterval } = this._config;\n        this._interval = setInterval(this._sendBatch, flushInterval);\n    }\n    _sendBatch() {\n        const bufferLength = this._buffer.length;\n        if (this._flush && !bufferLength && this._interval) {\n            clearInterval(this._interval);\n        }\n        if (this._pause || !bufferLength || !isAppInForeground()) {\n            return;\n        }\n        const { flushSize } = this._config;\n        const batchSize = Math.min(flushSize, bufferLength);\n        const bufferSubset = this._buffer.splice(0, batchSize);\n        this._putEvents(bufferSubset);\n    }\n    async _putEvents(buffer) {\n        const eventMap = this._bufferToMap(buffer);\n        const batchEventParams = this._generateBatchEventParams(eventMap);\n        try {\n            const { credentials, region, userAgentValue } = this._config;\n            const data = await putEvents({\n                credentials,\n                region,\n                userAgentValue,\n            }, batchEventParams);\n            this._processPutEventsSuccessResponse(data, eventMap);\n        }\n        catch (err) {\n            this._handlePutEventsFailure(err, eventMap);\n        }\n    }\n    _generateBatchEventParams(eventMap) {\n        const batchItem = {};\n        Object.values(eventMap).forEach(item => {\n            const { event, timestamp, endpointId, eventId, session } = item;\n            const { name, attributes, metrics } = event;\n            batchItem[endpointId] = {\n                Endpoint: {\n                    ...batchItem[endpointId]?.Endpoint,\n                },\n                Events: {\n                    ...batchItem[endpointId]?.Events,\n                    [eventId]: {\n                        EventType: name,\n                        Timestamp: new Date(timestamp).toISOString(),\n                        Attributes: attributes,\n                        Metrics: metrics,\n                        Session: session,\n                    },\n                },\n            };\n        });\n        return {\n            ApplicationId: this._config.appId,\n            EventsRequest: {\n                BatchItem: batchItem,\n            },\n        };\n    }\n    _handlePutEventsFailure(err, eventMap) {\n        logger.debug('putEvents call to Pinpoint failed.', err);\n        const statusCode = err.$metadata && err.$metadata.httpStatusCode;\n        if (RETRYABLE_CODES.includes(statusCode)) {\n            const retryableEvents = Object.values(eventMap);\n            this._retry(retryableEvents);\n        }\n    }\n    _processPutEventsSuccessResponse(data, eventMap) {\n        const { Results = {} } = data.EventsResponse ?? {};\n        const retryableEvents = [];\n        Object.entries(Results).forEach(([_, endpointValues]) => {\n            const responses = endpointValues.EventsItemResponse ?? {};\n            Object.entries(responses).forEach(([eventId, eventValues]) => {\n                const eventObject = eventMap[eventId];\n                if (!eventObject) {\n                    return;\n                }\n                const { StatusCode, Message } = eventValues ?? {};\n                if (StatusCode && ACCEPTED_CODES.includes(StatusCode)) {\n                    return;\n                }\n                if (StatusCode && RETRYABLE_CODES.includes(StatusCode)) {\n                    retryableEvents.push(eventObject);\n                    return;\n                }\n                const { name } = eventObject.event;\n                logger.warn('Pinpoint event failed to send.', {\n                    eventId,\n                    name,\n                    message: Message,\n                });\n            });\n        });\n        if (retryableEvents.length) {\n            this._retry(retryableEvents);\n        }\n    }\n    _retry(retryableEvents) {\n        // retryable events that haven't reached the resendLimit\n        const eligibleEvents = [];\n        retryableEvents.forEach((bufferedEvent) => {\n            const { eventId } = bufferedEvent;\n            const { name } = bufferedEvent.event;\n            if (bufferedEvent.resendLimit-- > 0) {\n                logger.debug('Resending event.', {\n                    eventId,\n                    name,\n                    remainingAttempts: bufferedEvent.resendLimit,\n                });\n                eligibleEvents.push({ [eventId]: bufferedEvent });\n                return;\n            }\n            logger.debug('No retry attempts remaining for event.', {\n                eventId,\n                name,\n            });\n        });\n        // add the events to the front of the buffer\n        this._buffer.unshift(...eligibleEvents);\n    }\n    _bufferToMap(buffer) {\n        return buffer.reduce((acc, curVal) => {\n            const [[key, value]] = Object.entries(curVal);\n            acc[key] = value;\n            return acc;\n        }, {});\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport var UpdateEndpointException;\n(function (UpdateEndpointException) {\n    UpdateEndpointException[\"BadRequestException\"] = \"BadRequestException\";\n    UpdateEndpointException[\"ForbiddenException\"] = \"ForbiddenException\";\n    UpdateEndpointException[\"InternalServerErrorException\"] = \"InternalServerErrorException\";\n    UpdateEndpointException[\"MethodNotAllowedException\"] = \"MethodNotAllowedException\";\n    UpdateEndpointException[\"NotFoundException\"] = \"NotFoundException\";\n    UpdateEndpointException[\"PayloadTooLargeException\"] = \"PayloadTooLargeException\";\n    UpdateEndpointException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n})(UpdateEndpointException || (UpdateEndpointException = {}));\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { createAssertionFunction } from '../errors';\nexport var ServiceWorkerErrorCode;\n(function (ServiceWorkerErrorCode) {\n    ServiceWorkerErrorCode[\"UndefinedInstance\"] = \"UndefinedInstance\";\n    ServiceWorkerErrorCode[\"UndefinedRegistration\"] = \"UndefinedRegistration\";\n    ServiceWorkerErrorCode[\"Unavailable\"] = \"Unavailable\";\n})(ServiceWorkerErrorCode || (ServiceWorkerErrorCode = {}));\nconst serviceWorkerErrorMap = {\n    [ServiceWorkerErrorCode.UndefinedInstance]: {\n        message: 'Service Worker instance is undefined.',\n    },\n    [ServiceWorkerErrorCode.UndefinedRegistration]: {\n        message: 'Service Worker registration is undefined.',\n    },\n    [ServiceWorkerErrorCode.Unavailable]: {\n        message: 'Service Worker not available.',\n    },\n};\nexport const assert = createAssertionFunction(serviceWorkerErrorMap);\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport const generateRandomString = (length) => {\n    const STATE_CHARSET = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    let result = '';\n    for (let i = 0; i < length; i++) {\n        result += STATE_CHARSET.charAt(Math.floor(Math.random() * STATE_CHARSET.length));\n    }\n    return result;\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport function urlSafeDecode(hex) {\n    const matchArr = hex.match(/.{2}/g) || [];\n    return matchArr.map(char => String.fromCharCode(parseInt(char, 16))).join('');\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport function urlSafeEncode(str) {\n    return str\n        .split('')\n        .map(char => char.charCodeAt(0).toString(16).padStart(2, '0'))\n        .join('');\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * returns in-flight promise if there is one\n *\n * @param asyncFunction - asyncFunction to be deduped.\n * @returns - the return type of the callback\n */\nexport const deDupeAsyncFunction = (asyncFunction) => {\n    let inflightPromise;\n    return async (...args) => {\n        if (inflightPromise)\n            return inflightPromise;\n        inflightPromise = new Promise((resolve, reject) => {\n            asyncFunction(...args)\n                .then(result => {\n                resolve(result);\n            })\n                .catch(error => {\n                reject(error);\n            })\n                .finally(() => {\n                inflightPromise = undefined;\n            });\n        });\n        return inflightPromise;\n    };\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Retrieves the device name using the User-Agent Client Hints API if available,\n * falling back to the traditional userAgent string if not.\n *\n * @returns {Promise<string>} A promise that resolves with a string representing the device name.\n *\n * Example Output:\n * navigator.userAgentData:\n *   'macOS 14.2.1 arm macOS Not A(Brand/99.0.0.0;Google Chrome/121.0.6167.160;Chromium/121.0.6167.160'\n * navigator.userAgent:\n *   'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0'\n */\nexport const getDeviceName = async () => {\n    const { userAgentData } = navigator;\n    if (!userAgentData)\n        return navigator.userAgent;\n    const { platform = '', platformVersion = '', model = '', architecture = '', fullVersionList = [], } = await userAgentData.getHighEntropyValues([\n        'platform',\n        'platformVersion',\n        'architecture',\n        'model',\n        'fullVersionList',\n    ]);\n    const versionList = fullVersionList\n        .map((v) => `${v.brand}/${v.version}`)\n        .join(';');\n    const deviceName = [\n        platform,\n        platformVersion,\n        architecture,\n        model,\n        platform,\n        versionList,\n    ]\n        .filter(value => value)\n        .join(' ');\n    return deviceName;\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Date & time utility functions to abstract the `aws-sdk` away from users.\n * (v2 => v3 modularization is a breaking change)\n *\n * @see https://github.com/aws/aws-sdk-js/blob/6edf586dcc1de7fe8fbfbbd9a0d2b1847921e6e1/lib/util.js#L262\n */\nconst FIVE_MINUTES_IN_MS = 1000 * 60 * 5;\n/**\n * This utility is intended to be deprecated and replaced by `signRequest` and `presignUrl` functions from\n * `clients/middleware/signing/signer/signatureV4`.\n *\n * TODO: refactor the logics here into `signRequest` and `presignUrl` functions and remove this class.\n *\n * @internal\n * @deprecated\n */\nexport const DateUtils = {\n    /**\n     * Milliseconds to offset the date to compensate for clock skew between device & services\n     */\n    clockOffset: 0,\n    getDateWithClockOffset() {\n        if (DateUtils.clockOffset) {\n            return new Date(new Date().getTime() + DateUtils.clockOffset);\n        }\n        else {\n            return new Date();\n        }\n    },\n    /**\n     * @returns {number} Clock offset in milliseconds\n     */\n    getClockOffset() {\n        return DateUtils.clockOffset;\n    },\n    getHeaderStringFromDate(date = DateUtils.getDateWithClockOffset()) {\n        return date.toISOString().replace(/[:-]|\\.\\d{3}/g, '');\n    },\n    getDateFromHeaderString(header) {\n        const [, year, month, day, hour, minute, second] = header.match(/^(\\d{4})(\\d{2})(\\d{2})T(\\d{2})(\\d{2})(\\d{2}).+/);\n        return new Date(Date.UTC(Number(year), Number(month) - 1, Number(day), Number(hour), Number(minute), Number(second)));\n    },\n    isClockSkewed(serverDate) {\n        // API gateway permits client calls that are off by no more than ±5 minutes\n        return (Math.abs(serverDate.getTime() - DateUtils.getDateWithClockOffset().getTime()) >= FIVE_MINUTES_IN_MS);\n    },\n    isClockSkewError(error) {\n        if (!error.response || !error.response.headers) {\n            return false;\n        }\n        const { headers } = error.response;\n        return Boolean(['BadRequestException', 'InvalidSignatureException'].includes(headers['x-amzn-errortype']) &&\n            (headers.date || headers.Date));\n    },\n    /**\n     * @param {number} offset Clock offset in milliseconds\n     */\n    setClockOffset(offset) {\n        DateUtils.clockOffset = offset;\n    },\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport function bytesToString(input) {\n    return Array.from(input, byte => String.fromCodePoint(byte)).join('');\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { getBtoa } from '../../globalHelpers';\nimport { bytesToString } from './bytesToString';\nexport const base64Encoder = {\n    /**\n     * Convert input to base64-encoded string\n     * @param input - string to convert to base64\n     * @param options - encoding options that can optionally produce a base64url string\n     * @returns base64-encoded string\n     */\n    convert(input, options = {\n        urlSafe: false,\n        skipPadding: false,\n    }) {\n        const inputStr = typeof input === 'string' ? input : bytesToString(input);\n        let encodedStr = getBtoa()(inputStr);\n        // urlSafe char replacement and skipPadding options conform to the base64url spec\n        // https://datatracker.ietf.org/doc/html/rfc4648#section-5\n        if (options.urlSafe) {\n            encodedStr = encodedStr.replace(/\\+/g, '-').replace(/\\//g, '_');\n        }\n        if (options.skipPadding) {\n            encodedStr = encodedStr.replace(/=/g, '');\n        }\n        return encodedStr;\n    },\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { getCrypto } from './globalHelpers';\n/*\n * Cryptographically secure pseudorandom number generator\n * As Math.random() is cryptographically not safe to use\n */\nexport function cryptoSecureRandomInt() {\n    const crypto = getCrypto();\n    const randomResult = crypto.getRandomValues(new Uint32Array(1))[0];\n    return randomResult;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { cryptoSecureRandomInt } from './cryptoSecureRandomInt';\n/**\n * Hex encoding strategy.\n * Converts a word array to a hex string.\n * @param {WordArray} wordArray The word array.\n * @return {string} The hex string.\n * @static\n */\nfunction hexStringify(wordArray) {\n    // Shortcuts\n    const { words } = wordArray;\n    const { sigBytes } = wordArray;\n    // Convert\n    const hexChars = [];\n    for (let i = 0; i < sigBytes; i++) {\n        const bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n        hexChars.push((bite >>> 4).toString(16));\n        hexChars.push((bite & 0x0f).toString(16));\n    }\n    return hexChars.join('');\n}\nexport class WordArray {\n    constructor(words, sigBytes) {\n        this.words = [];\n        let Words = words;\n        Words = this.words = Words || [];\n        if (sigBytes !== undefined) {\n            this.sigBytes = sigBytes;\n        }\n        else {\n            this.sigBytes = Words.length * 4;\n        }\n    }\n    random(nBytes) {\n        const words = [];\n        for (let i = 0; i < nBytes; i += 4) {\n            words.push(cryptoSecureRandomInt());\n        }\n        return new WordArray(words, nBytes);\n    }\n    toString() {\n        return hexStringify(this);\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AmplifyError, } from '@aws-amplify/core/internals/utils';\nexport class AuthError extends AmplifyError {\n    constructor(params) {\n        super(params);\n        // Hack for making the custom error class work when transpiled to es5\n        // TODO: Delete the following 2 lines after we change the build target to >= es2015\n        this.constructor = AuthError;\n        Object.setPrototypeOf(this, AuthError.prototype);\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AuthError } from './AuthError';\nexport const USER_UNAUTHENTICATED_EXCEPTION = 'UserUnAuthenticatedException';\nexport const USER_ALREADY_AUTHENTICATED_EXCEPTION = 'UserAlreadyAuthenticatedException';\nexport const DEVICE_METADATA_NOT_FOUND_EXCEPTION = 'DeviceMetadataNotFoundException';\nexport const AUTO_SIGN_IN_EXCEPTION = 'AutoSignInException';\nexport const INVALID_REDIRECT_EXCEPTION = 'InvalidRedirectException';\nexport const INVALID_APP_SCHEME_EXCEPTION = 'InvalidAppSchemeException';\nexport const INVALID_PREFERRED_REDIRECT_EXCEPTION = 'InvalidPreferredRedirectUrlException';\nexport const invalidRedirectException = new AuthError({\n    name: INVALID_REDIRECT_EXCEPTION,\n    message: 'signInRedirect or signOutRedirect had an invalid format or was not found.',\n    recoverySuggestion: 'Please make sure the signIn/Out redirect in your oauth config is valid.',\n});\nexport const invalidAppSchemeException = new AuthError({\n    name: INVALID_APP_SCHEME_EXCEPTION,\n    message: 'A valid non-http app scheme was not found in the config.',\n    recoverySuggestion: 'Please make sure a valid custom app scheme is present in the config.',\n});\nexport const invalidPreferredRedirectUrlException = new AuthError({\n    name: INVALID_PREFERRED_REDIRECT_EXCEPTION,\n    message: 'The given preferredRedirectUrl does not match any items in the redirectSignOutUrls array from the config.',\n    recoverySuggestion: 'Please make sure a matching preferredRedirectUrl is provided.',\n});\nexport const INVALID_ORIGIN_EXCEPTION = 'InvalidOriginException';\nexport const invalidOriginException = new AuthError({\n    name: INVALID_ORIGIN_EXCEPTION,\n    message: 'redirect is coming from a different origin. The oauth flow needs to be initiated from the same origin',\n    recoverySuggestion: 'Please call signInWithRedirect from the same origin.',\n});\nexport const OAUTH_SIGNOUT_EXCEPTION = 'OAuthSignOutException';\nexport const TOKEN_REFRESH_EXCEPTION = 'TokenRefreshException';\nexport const UNEXPECTED_SIGN_IN_INTERRUPTION_EXCEPTION = 'UnexpectedSignInInterruptionException';\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AuthError } from '../../../errors/AuthError';\nimport { DEVICE_METADATA_NOT_FOUND_EXCEPTION, TOKEN_REFRESH_EXCEPTION, USER_UNAUTHENTICATED_EXCEPTION, } from '../../../errors/constants';\nexport function isTypeUserPoolConfig(authConfig) {\n    if (authConfig &&\n        authConfig.Cognito.userPoolId &&\n        authConfig.Cognito.userPoolClientId) {\n        return true;\n    }\n    return false;\n}\nexport function assertAuthTokens(tokens) {\n    if (!tokens || !tokens.accessToken) {\n        throw new AuthError({\n            name: USER_UNAUTHENTICATED_EXCEPTION,\n            message: 'User needs to be authenticated to call this API.',\n            recoverySuggestion: 'Sign in before calling this API again.',\n        });\n    }\n}\nexport function assertIdTokenInAuthTokens(tokens) {\n    if (!tokens || !tokens.idToken) {\n        throw new AuthError({\n            name: USER_UNAUTHENTICATED_EXCEPTION,\n            message: 'User needs to be authenticated to call this API.',\n            recoverySuggestion: 'Sign in before calling this API again.',\n        });\n    }\n}\nexport const oAuthTokenRefreshException = new AuthError({\n    name: TOKEN_REFRESH_EXCEPTION,\n    message: `Token refresh is not supported when authenticated with the 'implicit grant' (token) oauth flow. \n\tPlease change your oauth configuration to use 'code grant' flow.`,\n    recoverySuggestion: `Please logout and change your Amplify configuration to use \"code grant\" flow. \n\tE.g { responseType: 'code' }`,\n});\nexport const tokenRefreshException = new AuthError({\n    name: USER_UNAUTHENTICATED_EXCEPTION,\n    message: 'User needs to be authenticated to call this API.',\n    recoverySuggestion: 'Sign in before calling this API again.',\n});\nexport function assertAuthTokensWithRefreshToken(tokens) {\n    if (isAuthenticatedWithImplicitOauthFlow(tokens)) {\n        throw oAuthTokenRefreshException;\n    }\n    if (!isAuthenticatedWithRefreshToken(tokens)) {\n        throw tokenRefreshException;\n    }\n}\nexport function assertDeviceMetadata(deviceMetadata) {\n    if (!deviceMetadata ||\n        !deviceMetadata.deviceKey ||\n        !deviceMetadata.deviceGroupKey ||\n        !deviceMetadata.randomPassword) {\n        throw new AuthError({\n            name: DEVICE_METADATA_NOT_FOUND_EXCEPTION,\n            message: 'Either deviceKey, deviceGroupKey or secretPassword were not found during the sign-in process.',\n            recoverySuggestion: 'Make sure to not clear storage after calling the signIn API.',\n        });\n    }\n}\nexport const OAuthStorageKeys = {\n    inflightOAuth: 'inflightOAuth',\n    oauthSignIn: 'oauthSignIn',\n    oauthPKCE: 'oauthPKCE',\n    oauthState: 'oauthState',\n};\nfunction isAuthenticated(tokens) {\n    return tokens?.accessToken || tokens?.idToken;\n}\nfunction isAuthenticatedWithRefreshToken(tokens) {\n    return isAuthenticated(tokens) && tokens?.refreshToken;\n}\nfunction isAuthenticatedWithImplicitOauthFlow(tokens) {\n    return isAuthenticated(tokens) && !tokens?.refreshToken;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { assertTokenProviderConfig } from '@aws-amplify/core/internals/utils';\nimport { assertAuthTokens } from '../../utils/types';\nexport const getCurrentUser = async (amplify) => {\n    const authConfig = amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const tokens = await amplify.Auth.getTokens({ forceRefresh: false });\n    assertAuthTokens(tokens);\n    const { 'cognito:username': username, sub } = tokens.idToken?.payload ?? {};\n    const authUser = {\n        username: username,\n        userId: sub,\n    };\n    const signInDetails = getSignInDetailsFromTokens(tokens);\n    if (signInDetails) {\n        authUser.signInDetails = signInDetails;\n    }\n    return authUser;\n};\nfunction getSignInDetailsFromTokens(tokens) {\n    return tokens?.signInDetails;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify } from '@aws-amplify/core';\nimport { getCurrentUser as getCurrentUserInternal } from './internal/getCurrentUser';\n/**\n * Gets the current user from the idToken.\n *\n * @param input -  The GetCurrentUserInput object.\n * @returns GetCurrentUserOutput\n * @throws - {@link InitiateAuthException} - Thrown when the service fails to refresh the tokens.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nexport const getCurrentUser = async () => {\n    return getCurrentUserInternal(Amplify);\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport var AssociateSoftwareTokenException;\n(function (AssociateSoftwareTokenException) {\n    AssociateSoftwareTokenException[\"ConcurrentModificationException\"] = \"ConcurrentModificationException\";\n    AssociateSoftwareTokenException[\"ForbiddenException\"] = \"ForbiddenException\";\n    AssociateSoftwareTokenException[\"InternalErrorException\"] = \"InternalErrorException\";\n    AssociateSoftwareTokenException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    AssociateSoftwareTokenException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    AssociateSoftwareTokenException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    AssociateSoftwareTokenException[\"SoftwareTokenMFANotFoundException\"] = \"SoftwareTokenMFANotFoundException\";\n})(AssociateSoftwareTokenException || (AssociateSoftwareTokenException = {}));\nexport var ChangePasswordException;\n(function (ChangePasswordException) {\n    ChangePasswordException[\"ForbiddenException\"] = \"ForbiddenException\";\n    ChangePasswordException[\"InternalErrorException\"] = \"InternalErrorException\";\n    ChangePasswordException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    ChangePasswordException[\"InvalidPasswordException\"] = \"InvalidPasswordException\";\n    ChangePasswordException[\"LimitExceededException\"] = \"LimitExceededException\";\n    ChangePasswordException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    ChangePasswordException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    ChangePasswordException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    ChangePasswordException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    ChangePasswordException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    ChangePasswordException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(ChangePasswordException || (ChangePasswordException = {}));\nexport var ConfirmDeviceException;\n(function (ConfirmDeviceException) {\n    ConfirmDeviceException[\"ForbiddenException\"] = \"ForbiddenException\";\n    ConfirmDeviceException[\"InternalErrorException\"] = \"InternalErrorException\";\n    ConfirmDeviceException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n    ConfirmDeviceException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    ConfirmDeviceException[\"InvalidPasswordException\"] = \"InvalidPasswordException\";\n    ConfirmDeviceException[\"InvalidUserPoolConfigurationException\"] = \"InvalidUserPoolConfigurationException\";\n    ConfirmDeviceException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    ConfirmDeviceException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    ConfirmDeviceException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    ConfirmDeviceException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    ConfirmDeviceException[\"UsernameExistsException\"] = \"UsernameExistsException\";\n    ConfirmDeviceException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    ConfirmDeviceException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(ConfirmDeviceException || (ConfirmDeviceException = {}));\nexport var ConfirmForgotPasswordException;\n(function (ConfirmForgotPasswordException) {\n    ConfirmForgotPasswordException[\"CodeMismatchException\"] = \"CodeMismatchException\";\n    ConfirmForgotPasswordException[\"ExpiredCodeException\"] = \"ExpiredCodeException\";\n    ConfirmForgotPasswordException[\"ForbiddenException\"] = \"ForbiddenException\";\n    ConfirmForgotPasswordException[\"InternalErrorException\"] = \"InternalErrorException\";\n    ConfirmForgotPasswordException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n    ConfirmForgotPasswordException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    ConfirmForgotPasswordException[\"InvalidPasswordException\"] = \"InvalidPasswordException\";\n    ConfirmForgotPasswordException[\"LimitExceededException\"] = \"LimitExceededException\";\n    ConfirmForgotPasswordException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    ConfirmForgotPasswordException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    ConfirmForgotPasswordException[\"TooManyFailedAttemptsException\"] = \"TooManyFailedAttemptsException\";\n    ConfirmForgotPasswordException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    ConfirmForgotPasswordException[\"UnexpectedLambdaException\"] = \"UnexpectedLambdaException\";\n    ConfirmForgotPasswordException[\"UserLambdaValidationException\"] = \"UserLambdaValidationException\";\n    ConfirmForgotPasswordException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    ConfirmForgotPasswordException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(ConfirmForgotPasswordException || (ConfirmForgotPasswordException = {}));\nexport var ConfirmSignUpException;\n(function (ConfirmSignUpException) {\n    ConfirmSignUpException[\"AliasExistsException\"] = \"AliasExistsException\";\n    ConfirmSignUpException[\"CodeMismatchException\"] = \"CodeMismatchException\";\n    ConfirmSignUpException[\"ExpiredCodeException\"] = \"ExpiredCodeException\";\n    ConfirmSignUpException[\"ForbiddenException\"] = \"ForbiddenException\";\n    ConfirmSignUpException[\"InternalErrorException\"] = \"InternalErrorException\";\n    ConfirmSignUpException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n    ConfirmSignUpException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    ConfirmSignUpException[\"LimitExceededException\"] = \"LimitExceededException\";\n    ConfirmSignUpException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    ConfirmSignUpException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    ConfirmSignUpException[\"TooManyFailedAttemptsException\"] = \"TooManyFailedAttemptsException\";\n    ConfirmSignUpException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    ConfirmSignUpException[\"UnexpectedLambdaException\"] = \"UnexpectedLambdaException\";\n    ConfirmSignUpException[\"UserLambdaValidationException\"] = \"UserLambdaValidationException\";\n    ConfirmSignUpException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(ConfirmSignUpException || (ConfirmSignUpException = {}));\nexport var DeleteUserAttributesException;\n(function (DeleteUserAttributesException) {\n    DeleteUserAttributesException[\"ForbiddenException\"] = \"ForbiddenException\";\n    DeleteUserAttributesException[\"InternalErrorException\"] = \"InternalErrorException\";\n    DeleteUserAttributesException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    DeleteUserAttributesException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    DeleteUserAttributesException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    DeleteUserAttributesException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    DeleteUserAttributesException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    DeleteUserAttributesException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    DeleteUserAttributesException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(DeleteUserAttributesException || (DeleteUserAttributesException = {}));\nexport var DeleteUserException;\n(function (DeleteUserException) {\n    DeleteUserException[\"ForbiddenException\"] = \"ForbiddenException\";\n    DeleteUserException[\"InternalErrorException\"] = \"InternalErrorException\";\n    DeleteUserException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    DeleteUserException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    DeleteUserException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    DeleteUserException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    DeleteUserException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    DeleteUserException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    DeleteUserException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(DeleteUserException || (DeleteUserException = {}));\nexport var ForgetDeviceException;\n(function (ForgetDeviceException) {\n    ForgetDeviceException[\"ForbiddenException\"] = \"ForbiddenException\";\n    ForgetDeviceException[\"InternalErrorException\"] = \"InternalErrorException\";\n    ForgetDeviceException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    ForgetDeviceException[\"InvalidUserPoolConfigurationException\"] = \"InvalidUserPoolConfigurationException\";\n    ForgetDeviceException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    ForgetDeviceException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    ForgetDeviceException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    ForgetDeviceException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    ForgetDeviceException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    ForgetDeviceException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(ForgetDeviceException || (ForgetDeviceException = {}));\nexport var ForgotPasswordException;\n(function (ForgotPasswordException) {\n    ForgotPasswordException[\"CodeDeliveryFailureException\"] = \"CodeDeliveryFailureException\";\n    ForgotPasswordException[\"ForbiddenException\"] = \"ForbiddenException\";\n    ForgotPasswordException[\"InternalErrorException\"] = \"InternalErrorException\";\n    ForgotPasswordException[\"InvalidEmailRoleAccessPolicyException\"] = \"InvalidEmailRoleAccessPolicyException\";\n    ForgotPasswordException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n    ForgotPasswordException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    ForgotPasswordException[\"InvalidSmsRoleAccessPolicyException\"] = \"InvalidSmsRoleAccessPolicyException\";\n    ForgotPasswordException[\"InvalidSmsRoleTrustRelationshipException\"] = \"InvalidSmsRoleTrustRelationshipException\";\n    ForgotPasswordException[\"LimitExceededException\"] = \"LimitExceededException\";\n    ForgotPasswordException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    ForgotPasswordException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    ForgotPasswordException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    ForgotPasswordException[\"UnexpectedLambdaException\"] = \"UnexpectedLambdaException\";\n    ForgotPasswordException[\"UserLambdaValidationException\"] = \"UserLambdaValidationException\";\n    ForgotPasswordException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(ForgotPasswordException || (ForgotPasswordException = {}));\nexport var GetUserException;\n(function (GetUserException) {\n    GetUserException[\"ForbiddenException\"] = \"ForbiddenException\";\n    GetUserException[\"InternalErrorException\"] = \"InternalErrorException\";\n    GetUserException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    GetUserException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    GetUserException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    GetUserException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    GetUserException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    GetUserException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    GetUserException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(GetUserException || (GetUserException = {}));\nexport var GetIdException;\n(function (GetIdException) {\n    GetIdException[\"ExternalServiceException\"] = \"ExternalServiceException\";\n    GetIdException[\"InternalErrorException\"] = \"InternalErrorException\";\n    GetIdException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    GetIdException[\"LimitExceededException\"] = \"LimitExceededException\";\n    GetIdException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    GetIdException[\"ResourceConflictException\"] = \"ResourceConflictException\";\n    GetIdException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    GetIdException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n})(GetIdException || (GetIdException = {}));\nexport var GetCredentialsForIdentityException;\n(function (GetCredentialsForIdentityException) {\n    GetCredentialsForIdentityException[\"ExternalServiceException\"] = \"ExternalServiceException\";\n    GetCredentialsForIdentityException[\"InternalErrorException\"] = \"InternalErrorException\";\n    GetCredentialsForIdentityException[\"InvalidIdentityPoolConfigurationException\"] = \"InvalidIdentityPoolConfigurationException\";\n    GetCredentialsForIdentityException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    GetCredentialsForIdentityException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    GetCredentialsForIdentityException[\"ResourceConflictException\"] = \"ResourceConflictException\";\n    GetCredentialsForIdentityException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    GetCredentialsForIdentityException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n})(GetCredentialsForIdentityException || (GetCredentialsForIdentityException = {}));\nexport var GetUserAttributeVerificationException;\n(function (GetUserAttributeVerificationException) {\n    GetUserAttributeVerificationException[\"CodeDeliveryFailureException\"] = \"CodeDeliveryFailureException\";\n    GetUserAttributeVerificationException[\"ForbiddenException\"] = \"ForbiddenException\";\n    GetUserAttributeVerificationException[\"InternalErrorException\"] = \"InternalErrorException\";\n    GetUserAttributeVerificationException[\"InvalidEmailRoleAccessPolicyException\"] = \"InvalidEmailRoleAccessPolicyException\";\n    GetUserAttributeVerificationException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n    GetUserAttributeVerificationException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    GetUserAttributeVerificationException[\"InvalidSmsRoleAccessPolicyException\"] = \"InvalidSmsRoleAccessPolicyException\";\n    GetUserAttributeVerificationException[\"InvalidSmsRoleTrustRelationshipException\"] = \"InvalidSmsRoleTrustRelationshipException\";\n    GetUserAttributeVerificationException[\"LimitExceededException\"] = \"LimitExceededException\";\n    GetUserAttributeVerificationException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    GetUserAttributeVerificationException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    GetUserAttributeVerificationException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    GetUserAttributeVerificationException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    GetUserAttributeVerificationException[\"UnexpectedLambdaException\"] = \"UnexpectedLambdaException\";\n    GetUserAttributeVerificationException[\"UserLambdaValidationException\"] = \"UserLambdaValidationException\";\n    GetUserAttributeVerificationException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    GetUserAttributeVerificationException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(GetUserAttributeVerificationException || (GetUserAttributeVerificationException = {}));\nexport var GlobalSignOutException;\n(function (GlobalSignOutException) {\n    GlobalSignOutException[\"ForbiddenException\"] = \"ForbiddenException\";\n    GlobalSignOutException[\"InternalErrorException\"] = \"InternalErrorException\";\n    GlobalSignOutException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    GlobalSignOutException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    GlobalSignOutException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    GlobalSignOutException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    GlobalSignOutException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    GlobalSignOutException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n})(GlobalSignOutException || (GlobalSignOutException = {}));\nexport var InitiateAuthException;\n(function (InitiateAuthException) {\n    InitiateAuthException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    InitiateAuthException[\"ForbiddenException\"] = \"ForbiddenException\";\n    InitiateAuthException[\"InternalErrorException\"] = \"InternalErrorException\";\n    InitiateAuthException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n    InitiateAuthException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    InitiateAuthException[\"InvalidSmsRoleAccessPolicyException\"] = \"InvalidSmsRoleAccessPolicyException\";\n    InitiateAuthException[\"InvalidSmsRoleTrustRelationshipException\"] = \"InvalidSmsRoleTrustRelationshipException\";\n    InitiateAuthException[\"InvalidUserPoolConfigurationException\"] = \"InvalidUserPoolConfigurationException\";\n    InitiateAuthException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    InitiateAuthException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    InitiateAuthException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    InitiateAuthException[\"UnexpectedLambdaException\"] = \"UnexpectedLambdaException\";\n    InitiateAuthException[\"UserLambdaValidationException\"] = \"UserLambdaValidationException\";\n    InitiateAuthException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    InitiateAuthException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(InitiateAuthException || (InitiateAuthException = {}));\nexport var ResendConfirmationException;\n(function (ResendConfirmationException) {\n    ResendConfirmationException[\"CodeDeliveryFailureException\"] = \"CodeDeliveryFailureException\";\n    ResendConfirmationException[\"ForbiddenException\"] = \"ForbiddenException\";\n    ResendConfirmationException[\"InternalErrorException\"] = \"InternalErrorException\";\n    ResendConfirmationException[\"InvalidEmailRoleAccessPolicyException\"] = \"InvalidEmailRoleAccessPolicyException\";\n    ResendConfirmationException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n    ResendConfirmationException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    ResendConfirmationException[\"InvalidSmsRoleAccessPolicyException\"] = \"InvalidSmsRoleAccessPolicyException\";\n    ResendConfirmationException[\"InvalidSmsRoleTrustRelationshipException\"] = \"InvalidSmsRoleTrustRelationshipException\";\n    ResendConfirmationException[\"LimitExceededException\"] = \"LimitExceededException\";\n    ResendConfirmationException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    ResendConfirmationException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    ResendConfirmationException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    ResendConfirmationException[\"UnexpectedLambdaException\"] = \"UnexpectedLambdaException\";\n    ResendConfirmationException[\"UserLambdaValidationException\"] = \"UserLambdaValidationException\";\n    ResendConfirmationException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(ResendConfirmationException || (ResendConfirmationException = {}));\nexport var RespondToAuthChallengeException;\n(function (RespondToAuthChallengeException) {\n    RespondToAuthChallengeException[\"AliasExistsException\"] = \"AliasExistsException\";\n    RespondToAuthChallengeException[\"CodeMismatchException\"] = \"CodeMismatchException\";\n    RespondToAuthChallengeException[\"ExpiredCodeException\"] = \"ExpiredCodeException\";\n    RespondToAuthChallengeException[\"ForbiddenException\"] = \"ForbiddenException\";\n    RespondToAuthChallengeException[\"InternalErrorException\"] = \"InternalErrorException\";\n    RespondToAuthChallengeException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n    RespondToAuthChallengeException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    RespondToAuthChallengeException[\"InvalidPasswordException\"] = \"InvalidPasswordException\";\n    RespondToAuthChallengeException[\"InvalidSmsRoleAccessPolicyException\"] = \"InvalidSmsRoleAccessPolicyException\";\n    RespondToAuthChallengeException[\"InvalidSmsRoleTrustRelationshipException\"] = \"InvalidSmsRoleTrustRelationshipException\";\n    RespondToAuthChallengeException[\"InvalidUserPoolConfigurationException\"] = \"InvalidUserPoolConfigurationException\";\n    RespondToAuthChallengeException[\"MFAMethodNotFoundException\"] = \"MFAMethodNotFoundException\";\n    RespondToAuthChallengeException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    RespondToAuthChallengeException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    RespondToAuthChallengeException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    RespondToAuthChallengeException[\"SoftwareTokenMFANotFoundException\"] = \"SoftwareTokenMFANotFoundException\";\n    RespondToAuthChallengeException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    RespondToAuthChallengeException[\"UnexpectedLambdaException\"] = \"UnexpectedLambdaException\";\n    RespondToAuthChallengeException[\"UserLambdaValidationException\"] = \"UserLambdaValidationException\";\n    RespondToAuthChallengeException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    RespondToAuthChallengeException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(RespondToAuthChallengeException || (RespondToAuthChallengeException = {}));\nexport var SetUserMFAPreferenceException;\n(function (SetUserMFAPreferenceException) {\n    SetUserMFAPreferenceException[\"ForbiddenException\"] = \"ForbiddenException\";\n    SetUserMFAPreferenceException[\"InternalErrorException\"] = \"InternalErrorException\";\n    SetUserMFAPreferenceException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    SetUserMFAPreferenceException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    SetUserMFAPreferenceException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    SetUserMFAPreferenceException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    SetUserMFAPreferenceException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    SetUserMFAPreferenceException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(SetUserMFAPreferenceException || (SetUserMFAPreferenceException = {}));\nexport var SignUpException;\n(function (SignUpException) {\n    SignUpException[\"CodeDeliveryFailureException\"] = \"CodeDeliveryFailureException\";\n    SignUpException[\"InternalErrorException\"] = \"InternalErrorException\";\n    SignUpException[\"InvalidEmailRoleAccessPolicyException\"] = \"InvalidEmailRoleAccessPolicyException\";\n    SignUpException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n    SignUpException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    SignUpException[\"InvalidPasswordException\"] = \"InvalidPasswordException\";\n    SignUpException[\"InvalidSmsRoleAccessPolicyException\"] = \"InvalidSmsRoleAccessPolicyException\";\n    SignUpException[\"InvalidSmsRoleTrustRelationshipException\"] = \"InvalidSmsRoleTrustRelationshipException\";\n    SignUpException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    SignUpException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    SignUpException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    SignUpException[\"UnexpectedLambdaException\"] = \"UnexpectedLambdaException\";\n    SignUpException[\"UserLambdaValidationException\"] = \"UserLambdaValidationException\";\n    SignUpException[\"UsernameExistsException\"] = \"UsernameExistsException\";\n})(SignUpException || (SignUpException = {}));\nexport var UpdateUserAttributesException;\n(function (UpdateUserAttributesException) {\n    UpdateUserAttributesException[\"AliasExistsException\"] = \"AliasExistsException\";\n    UpdateUserAttributesException[\"CodeDeliveryFailureException\"] = \"CodeDeliveryFailureException\";\n    UpdateUserAttributesException[\"CodeMismatchException\"] = \"CodeMismatchException\";\n    UpdateUserAttributesException[\"ExpiredCodeException\"] = \"ExpiredCodeException\";\n    UpdateUserAttributesException[\"ForbiddenException\"] = \"ForbiddenException\";\n    UpdateUserAttributesException[\"InternalErrorException\"] = \"InternalErrorException\";\n    UpdateUserAttributesException[\"InvalidEmailRoleAccessPolicyException\"] = \"InvalidEmailRoleAccessPolicyException\";\n    UpdateUserAttributesException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n    UpdateUserAttributesException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    UpdateUserAttributesException[\"InvalidSmsRoleAccessPolicyException\"] = \"InvalidSmsRoleAccessPolicyException\";\n    UpdateUserAttributesException[\"InvalidSmsRoleTrustRelationshipException\"] = \"InvalidSmsRoleTrustRelationshipException\";\n    UpdateUserAttributesException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    UpdateUserAttributesException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    UpdateUserAttributesException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    UpdateUserAttributesException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    UpdateUserAttributesException[\"UnexpectedLambdaException\"] = \"UnexpectedLambdaException\";\n    UpdateUserAttributesException[\"UserLambdaValidationException\"] = \"UserLambdaValidationException\";\n    UpdateUserAttributesException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    UpdateUserAttributesException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(UpdateUserAttributesException || (UpdateUserAttributesException = {}));\nexport var VerifySoftwareTokenException;\n(function (VerifySoftwareTokenException) {\n    VerifySoftwareTokenException[\"CodeMismatchException\"] = \"CodeMismatchException\";\n    VerifySoftwareTokenException[\"EnableSoftwareTokenMFAException\"] = \"EnableSoftwareTokenMFAException\";\n    VerifySoftwareTokenException[\"ForbiddenException\"] = \"ForbiddenException\";\n    VerifySoftwareTokenException[\"InternalErrorException\"] = \"InternalErrorException\";\n    VerifySoftwareTokenException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    VerifySoftwareTokenException[\"InvalidUserPoolConfigurationException\"] = \"InvalidUserPoolConfigurationException\";\n    VerifySoftwareTokenException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    VerifySoftwareTokenException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    VerifySoftwareTokenException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    VerifySoftwareTokenException[\"SoftwareTokenMFANotFoundException\"] = \"SoftwareTokenMFANotFoundException\";\n    VerifySoftwareTokenException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    VerifySoftwareTokenException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    VerifySoftwareTokenException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(VerifySoftwareTokenException || (VerifySoftwareTokenException = {}));\nexport var VerifyUserAttributeException;\n(function (VerifyUserAttributeException) {\n    VerifyUserAttributeException[\"AliasExistsException\"] = \"AliasExistsException\";\n    VerifyUserAttributeException[\"CodeMismatchException\"] = \"CodeMismatchException\";\n    VerifyUserAttributeException[\"ExpiredCodeException\"] = \"ExpiredCodeException\";\n    VerifyUserAttributeException[\"ForbiddenException\"] = \"ForbiddenException\";\n    VerifyUserAttributeException[\"InternalErrorException\"] = \"InternalErrorException\";\n    VerifyUserAttributeException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    VerifyUserAttributeException[\"LimitExceededException\"] = \"LimitExceededException\";\n    VerifyUserAttributeException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    VerifyUserAttributeException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    VerifyUserAttributeException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    VerifyUserAttributeException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    VerifyUserAttributeException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    VerifyUserAttributeException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(VerifyUserAttributeException || (VerifyUserAttributeException = {}));\nexport var UpdateDeviceStatusException;\n(function (UpdateDeviceStatusException) {\n    UpdateDeviceStatusException[\"ForbiddenException\"] = \"ForbiddenException\";\n    UpdateDeviceStatusException[\"InternalErrorException\"] = \"InternalErrorException\";\n    UpdateDeviceStatusException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    UpdateDeviceStatusException[\"InvalidUserPoolConfigurationException\"] = \"InvalidUserPoolConfigurationException\";\n    UpdateDeviceStatusException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    UpdateDeviceStatusException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    UpdateDeviceStatusException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    UpdateDeviceStatusException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    UpdateDeviceStatusException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    UpdateDeviceStatusException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(UpdateDeviceStatusException || (UpdateDeviceStatusException = {}));\nexport var ListDevicesException;\n(function (ListDevicesException) {\n    ListDevicesException[\"ForbiddenException\"] = \"ForbiddenException\";\n    ListDevicesException[\"InternalErrorException\"] = \"InternalErrorException\";\n    ListDevicesException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    ListDevicesException[\"InvalidUserPoolConfigurationException\"] = \"InvalidUserPoolConfigurationException\";\n    ListDevicesException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    ListDevicesException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    ListDevicesException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    ListDevicesException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    ListDevicesException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    ListDevicesException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(ListDevicesException || (ListDevicesException = {}));\nexport const SETUP_TOTP_EXCEPTION = 'SetUpTOTPException';\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport var AuthValidationErrorCode;\n(function (AuthValidationErrorCode) {\n    AuthValidationErrorCode[\"EmptySignInUsername\"] = \"EmptySignInUsername\";\n    AuthValidationErrorCode[\"EmptySignInPassword\"] = \"EmptySignInPassword\";\n    AuthValidationErrorCode[\"CustomAuthSignInPassword\"] = \"CustomAuthSignInPassword\";\n    AuthValidationErrorCode[\"EmptySignUpUsername\"] = \"EmptySignUpUsername\";\n    AuthValidationErrorCode[\"EmptySignUpPassword\"] = \"EmptySignUpPassword\";\n    AuthValidationErrorCode[\"EmptyConfirmSignUpUsername\"] = \"EmptyConfirmSignUpUsername\";\n    AuthValidationErrorCode[\"EmptyConfirmSignUpCode\"] = \"EmptyConfirmSignUpCode\";\n    AuthValidationErrorCode[\"EmptyResendSignUpCodeUsername\"] = \"EmptyresendSignUpCodeUsername\";\n    AuthValidationErrorCode[\"EmptyChallengeResponse\"] = \"EmptyChallengeResponse\";\n    AuthValidationErrorCode[\"EmptyConfirmResetPasswordUsername\"] = \"EmptyConfirmResetPasswordUsername\";\n    AuthValidationErrorCode[\"EmptyConfirmResetPasswordNewPassword\"] = \"EmptyConfirmResetPasswordNewPassword\";\n    AuthValidationErrorCode[\"EmptyConfirmResetPasswordConfirmationCode\"] = \"EmptyConfirmResetPasswordConfirmationCode\";\n    AuthValidationErrorCode[\"EmptyResetPasswordUsername\"] = \"EmptyResetPasswordUsername\";\n    AuthValidationErrorCode[\"EmptyVerifyTOTPSetupCode\"] = \"EmptyVerifyTOTPSetupCode\";\n    AuthValidationErrorCode[\"EmptyConfirmUserAttributeCode\"] = \"EmptyConfirmUserAttributeCode\";\n    AuthValidationErrorCode[\"IncorrectMFAMethod\"] = \"IncorrectMFAMethod\";\n    AuthValidationErrorCode[\"EmptyUpdatePassword\"] = \"EmptyUpdatePassword\";\n})(AuthValidationErrorCode || (AuthValidationErrorCode = {}));\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AuthValidationErrorCode } from '../errors/types/validation';\nexport const validationErrorMap = {\n    [AuthValidationErrorCode.EmptyChallengeResponse]: {\n        message: 'challengeResponse is required to confirmSignIn',\n    },\n    [AuthValidationErrorCode.EmptyConfirmResetPasswordUsername]: {\n        message: 'username is required to confirmResetPassword',\n    },\n    [AuthValidationErrorCode.EmptyConfirmSignUpCode]: {\n        message: 'code is required to confirmSignUp',\n    },\n    [AuthValidationErrorCode.EmptyConfirmSignUpUsername]: {\n        message: 'username is required to confirmSignUp',\n    },\n    [AuthValidationErrorCode.EmptyConfirmResetPasswordConfirmationCode]: {\n        message: 'confirmationCode is required to confirmResetPassword',\n    },\n    [AuthValidationErrorCode.EmptyConfirmResetPasswordNewPassword]: {\n        message: 'newPassword is required to confirmResetPassword',\n    },\n    [AuthValidationErrorCode.EmptyResendSignUpCodeUsername]: {\n        message: 'username is required to confirmSignUp',\n    },\n    [AuthValidationErrorCode.EmptyResetPasswordUsername]: {\n        message: 'username is required to resetPassword',\n    },\n    [AuthValidationErrorCode.EmptySignInPassword]: {\n        message: 'password is required to signIn',\n    },\n    [AuthValidationErrorCode.EmptySignInUsername]: {\n        message: 'username is required to signIn',\n    },\n    [AuthValidationErrorCode.EmptySignUpPassword]: {\n        message: 'password is required to signUp',\n    },\n    [AuthValidationErrorCode.EmptySignUpUsername]: {\n        message: 'username is required to signUp',\n    },\n    [AuthValidationErrorCode.CustomAuthSignInPassword]: {\n        message: 'A password is not needed when signing in with CUSTOM_WITHOUT_SRP',\n        recoverySuggestion: 'Do not include a password in your signIn call.',\n    },\n    [AuthValidationErrorCode.IncorrectMFAMethod]: {\n        message: 'Incorrect MFA method was chosen. It should be either SMS or TOTP',\n        recoverySuggestion: 'Try to pass TOTP or SMS as the challengeResponse',\n    },\n    [AuthValidationErrorCode.EmptyVerifyTOTPSetupCode]: {\n        message: 'code is required to verifyTotpSetup',\n    },\n    [AuthValidationErrorCode.EmptyUpdatePassword]: {\n        message: 'oldPassword and newPassword are required to changePassword',\n    },\n    [AuthValidationErrorCode.EmptyConfirmUserAttributeCode]: {\n        message: 'confirmation code is required to confirmUserAttribute',\n    },\n};\n// TODO: delete this code when the Auth class is removed.\nexport var AuthErrorStrings;\n(function (AuthErrorStrings) {\n    AuthErrorStrings[\"DEFAULT_MSG\"] = \"Authentication Error\";\n    AuthErrorStrings[\"EMPTY_EMAIL\"] = \"Email cannot be empty\";\n    AuthErrorStrings[\"EMPTY_PHONE\"] = \"Phone number cannot be empty\";\n    AuthErrorStrings[\"EMPTY_USERNAME\"] = \"Username cannot be empty\";\n    AuthErrorStrings[\"INVALID_USERNAME\"] = \"The username should either be a string or one of the sign in types\";\n    AuthErrorStrings[\"EMPTY_PASSWORD\"] = \"Password cannot be empty\";\n    AuthErrorStrings[\"EMPTY_CODE\"] = \"Confirmation code cannot be empty\";\n    AuthErrorStrings[\"SIGN_UP_ERROR\"] = \"Error creating account\";\n    AuthErrorStrings[\"NO_MFA\"] = \"No valid MFA method provided\";\n    AuthErrorStrings[\"INVALID_MFA\"] = \"Invalid MFA type\";\n    AuthErrorStrings[\"EMPTY_CHALLENGE\"] = \"Challenge response cannot be empty\";\n    AuthErrorStrings[\"NO_USER_SESSION\"] = \"Failed to get the session because the user is empty\";\n    AuthErrorStrings[\"NETWORK_ERROR\"] = \"Network Error\";\n    AuthErrorStrings[\"DEVICE_CONFIG\"] = \"Device tracking has not been configured in this User Pool\";\n    AuthErrorStrings[\"AUTOSIGNIN_ERROR\"] = \"Please use your credentials to sign in\";\n    AuthErrorStrings[\"OAUTH_ERROR\"] = \"Couldn't finish OAuth flow, check your User Pool HostedUI settings\";\n})(AuthErrorStrings || (AuthErrorStrings = {}));\nexport var AuthErrorCodes;\n(function (AuthErrorCodes) {\n    AuthErrorCodes[\"SignInException\"] = \"SignInException\";\n    AuthErrorCodes[\"OAuthSignInError\"] = \"OAuthSignInException\";\n})(AuthErrorCodes || (AuthErrorCodes = {}));\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { validationErrorMap } from '../../common/AuthErrorStrings';\nimport { AuthError } from '../AuthError';\nexport function assertValidationError(assertion, name) {\n    const { message, recoverySuggestion } = validationErrorMap[name];\n    if (!assertion) {\n        throw new AuthError({ name, message, recoverySuggestion });\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Category, getAmplifyUserAgent, } from '@aws-amplify/core/internals/utils';\nexport const getAuthUserAgentValue = (action, customUserAgentDetails) => getAmplifyUserAgent({\n    category: Category.Auth,\n    action,\n    ...customUserAgentDetails,\n});\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport const createUserPoolSerializer = (operation) => (input, endpoint) => {\n    const headers = getSharedHeaders(operation);\n    const body = JSON.stringify(input);\n    return buildHttpRpcRequest(endpoint, headers, body);\n};\nconst getSharedHeaders = (operation) => ({\n    'content-type': 'application/x-amz-json-1.1',\n    'x-amz-target': `AWSCognitoIdentityProviderService.${operation}`,\n});\nconst buildHttpRpcRequest = ({ url }, headers, body) => ({\n    headers,\n    url,\n    body,\n    method: 'POST',\n});\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AmplifyErrorCode, } from '@aws-amplify/core/internals/utils';\nimport { AuthError } from '../AuthError';\nexport function assertServiceError(error) {\n    if (!error ||\n        error.name === 'Error' ||\n        error instanceof TypeError) {\n        throw new AuthError({\n            name: AmplifyErrorCode.Unknown,\n            message: 'An unknown error has occurred.',\n            underlyingError: error,\n        });\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { parseJsonBody, parseJsonError, } from '@aws-amplify/core/internals/aws-client-utils';\nimport { assertServiceError } from '../../../../../../errors/utils/assertServiceError';\nimport { AuthError } from '../../../../../../errors/AuthError';\nexport const createUserPoolDeserializer = () => async (response) => {\n    if (response.statusCode >= 300) {\n        const error = await parseJsonError(response);\n        assertServiceError(error);\n        throw new AuthError({ name: error.name, message: error.message });\n    }\n    return parseJsonBody(response);\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { composeTransferHandler } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { unauthenticatedHandler, } from '@aws-amplify/core/internals/aws-client-utils';\n/**\n * A Cognito Identity-specific middleware that disables caching for all requests.\n */\nconst disableCacheMiddlewareFactory = () => (next, _) => async function disableCacheMiddleware(request) {\n    request.headers['cache-control'] = 'no-store';\n    return next(request);\n};\n/**\n * A Cognito Identity-specific transfer handler that does NOT sign requests, and\n * disables caching.\n *\n * @internal\n */\nexport const cognitoUserPoolTransferHandler = composeTransferHandler(unauthenticatedHandler, [disableCacheMiddlewareFactory]);\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * The service name used to sign requests if the API requires authentication.\n */\nexport const COGNITO_IDP_SERVICE_NAME = 'cognito-idp';\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { getRetryDecider, jitteredBackoff, parseJsonError, } from '@aws-amplify/core/internals/aws-client-utils';\nimport { getAmplifyUserAgent } from '@aws-amplify/core/internals/utils';\nimport { COGNITO_IDP_SERVICE_NAME } from '../../../constants';\nexport const DEFAULT_SERVICE_CLIENT_API_CONFIG = {\n    service: COGNITO_IDP_SERVICE_NAME,\n    retryDecider: getRetryDecider(parseJsonError),\n    computeDelay: jitteredBackoff,\n    userAgentValue: getAmplifyUserAgent(),\n    cache: 'no-store',\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { createUserPoolDeserializer, createUserPoolSerializer, } from './shared/serde';\nimport { cognitoUserPoolTransferHandler } from './shared/handler';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants';\nexport const createInitiateAuthClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('InitiateAuth'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler';\nimport { createUserPoolDeserializer, createUserPoolSerializer, } from './shared/serde';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants';\nexport const createRespondToAuthChallengeClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('RespondToAuthChallenge'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler';\nimport { createUserPoolDeserializer, createUserPoolSerializer, } from './shared/serde';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants';\nexport const createVerifySoftwareTokenClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('VerifySoftwareToken'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler';\nimport { createUserPoolDeserializer, createUserPoolSerializer, } from './shared/serde';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants';\nexport const createAssociateSoftwareTokenClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('AssociateSoftwareToken'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler';\nimport { createUserPoolDeserializer, createUserPoolSerializer, } from './shared/serde';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants';\nexport const createConfirmDeviceClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('ConfirmDevice'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { getDnsSuffix, } from '@aws-amplify/core/internals/aws-client-utils';\nimport { AmplifyUrl } from '@aws-amplify/core/internals/utils';\nimport { COGNITO_IDP_SERVICE_NAME } from './constants';\nexport const cognitoUserPoolEndpointResolver = ({ region, }) => ({\n    url: new AmplifyUrl(`https://${COGNITO_IDP_SERVICE_NAME}.${region}.${getDnsSuffix(region)}`),\n});\n", "import { AmplifyUrl } from '@aws-amplify/core/internals/utils';\nimport { cognitoUserPoolEndpointResolver } from '../../../foundation/cognitoUserPoolEndpointResolver';\nexport const createCognitoUserPoolEndpointResolver = ({ endpointOverride }) => (input) => {\n    if (endpointOverride) {\n        return { url: new AmplifyUrl(endpointOverride) };\n    }\n    return cognitoUserPoolEndpointResolver(input);\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AuthError } from '../../errors/AuthError';\nexport function getRegionFromUserPoolId(userPoolId) {\n    const region = userPoolId?.split('_')[0];\n    if (!userPoolId ||\n        userPoolId.indexOf('_') < 0 ||\n        !region ||\n        typeof region !== 'string')\n        throw new AuthError({\n            name: 'InvalidUserPoolId',\n            message: 'Invalid user pool id provided.',\n        });\n    return region;\n}\nexport function getRegionFromIdentityPoolId(identityPoolId) {\n    if (!identityPoolId || !identityPoolId.includes(':')) {\n        throw new AuthError({\n            name: 'InvalidIdentityPoolIdException',\n            message: 'Invalid identity pool id provided.',\n            recoverySuggestion: 'Make sure a valid identityPoolId is given in the config.',\n        });\n    }\n    return identityPoolId.split(':')[0];\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst signInReducer = (state, action) => {\n    switch (action.type) {\n        case 'SET_SIGN_IN_SESSION':\n            return {\n                ...state,\n                signInSession: action.value,\n            };\n        case 'SET_SIGN_IN_STATE':\n            return {\n                ...action.value,\n            };\n        case 'SET_CHALLENGE_NAME':\n            return {\n                ...state,\n                challengeName: action.value,\n            };\n        case 'SET_USERNAME':\n            return {\n                ...state,\n                username: action.value,\n            };\n        case 'SET_INITIAL_STATE':\n            return defaultState();\n        default:\n            return state;\n    }\n};\nfunction defaultState() {\n    return {\n        username: undefined,\n        challengeName: undefined,\n        signInSession: undefined,\n    };\n}\nconst createStore = reducer => {\n    let currentState = reducer(defaultState(), { type: 'SET_INITIAL_STATE' });\n    return {\n        getState: () => currentState,\n        dispatch: action => {\n            currentState = reducer(currentState, action);\n        },\n    };\n};\nexport const signInStore = createStore(signInReducer);\nexport function setActiveSignInState(state) {\n    signInStore.dispatch({\n        type: 'SET_SIGN_IN_STATE',\n        value: state,\n    });\n}\nexport function cleanActiveSignInState() {\n    signInStore.dispatch({ type: 'SET_INITIAL_STATE' });\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport const textEncoder = {\n    convert(input) {\n        return new TextEncoder().encode(input);\n    },\n};\n", "/* eslint-disable */\n// @ts-nocheck -> BigInteger is already a vended utility\n// A small implementation of BigInteger based on http://www-cs-students.stanford.edu/~tjw/jsbn/\n//\n// All public methods have been removed except the following:\n//   new BigInteger(a, b) (only radix 2, 4, 8, 16 and 32 supported)\n//   toString (only radix 2, 4, 8, 16 and 32 supported)\n//   negate\n//   abs\n//   compareTo\n//   bitLength\n//   mod\n//   equals\n//   add\n//   subtract\n//   multiply\n//   divide\n//   modPow\nexport default BigInteger;\n/*\n * Copyright (c) 2003-2005  Tom Wu\n * All Rights Reserved.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS-IS\" AND WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY\n * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n *\n * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,\n * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER\n * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF\n * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT\n * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n *\n * In addition, the following condition applies:\n *\n * All redistributions must retain an intact copy of this copyright notice\n * and disclaimer.\n */\n// (public) Constructor\nfunction BigInteger(a, b) {\n    if (a != null)\n        this.fromString(a, b);\n}\n// return new, unset BigInteger\nfunction nbi() {\n    return new BigInteger(null, null);\n}\n// Bits per digit\nlet dbits;\n// JavaScript engine analysis\nconst canary = 0xdeadbeefcafe;\nconst j_lm = (canary & 0xffffff) === 0xefcafe;\n// am: Compute w_j += (x*this_i), propagate carries,\n// c is initial carry, returns final carry.\n// c < 3*dvalue, x < 2*dvalue, this_i < dvalue\n// We need to select the fastest one that works in this environment.\n// am1: use a single mult and divide to get the high bits,\n// max digit bits should be 26 because\n// max internal value = 2*dvalue^2-2*dvalue (< 2^53)\nfunction am1(i, x, w, j, c, n) {\n    while (--n >= 0) {\n        const v = x * this[i++] + w[j] + c;\n        c = Math.floor(v / 0x4000000);\n        w[j++] = v & 0x3ffffff;\n    }\n    return c;\n}\n// am2 avoids a big mult-and-extract completely.\n// Max digit bits should be <= 30 because we do bitwise ops\n// on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)\nfunction am2(i, x, w, j, c, n) {\n    const xl = x & 0x7fff;\n    const xh = x >> 15;\n    while (--n >= 0) {\n        let l = this[i] & 0x7fff;\n        const h = this[i++] >> 15;\n        const m = xh * l + h * xl;\n        l = xl * l + ((m & 0x7fff) << 15) + w[j] + (c & 0x3fffffff);\n        c = (l >>> 30) + (m >>> 15) + xh * h + (c >>> 30);\n        w[j++] = l & 0x3fffffff;\n    }\n    return c;\n}\n// Alternately, set max digit bits to 28 since some\n// browsers slow down when dealing with 32-bit numbers.\nfunction am3(i, x, w, j, c, n) {\n    const xl = x & 0x3fff;\n    const xh = x >> 14;\n    while (--n >= 0) {\n        let l = this[i] & 0x3fff;\n        const h = this[i++] >> 14;\n        const m = xh * l + h * xl;\n        l = xl * l + ((m & 0x3fff) << 14) + w[j] + c;\n        c = (l >> 28) + (m >> 14) + xh * h;\n        w[j++] = l & 0xfffffff;\n    }\n    return c;\n}\nconst inBrowser = typeof navigator !== 'undefined';\nif (inBrowser && j_lm && navigator.appName === 'Microsoft Internet Explorer') {\n    BigInteger.prototype.am = am2;\n    dbits = 30;\n}\nelse if (inBrowser && j_lm && navigator.appName !== 'Netscape') {\n    BigInteger.prototype.am = am1;\n    dbits = 26;\n}\nelse {\n    // Mozilla/Netscape seems to prefer am3\n    BigInteger.prototype.am = am3;\n    dbits = 28;\n}\nBigInteger.prototype.DB = dbits;\nBigInteger.prototype.DM = (1 << dbits) - 1;\nBigInteger.prototype.DV = 1 << dbits;\nconst BI_FP = 52;\nBigInteger.prototype.FV = Math.pow(2, BI_FP);\nBigInteger.prototype.F1 = BI_FP - dbits;\nBigInteger.prototype.F2 = 2 * dbits - BI_FP;\n// Digit conversions\nconst BI_RM = '0123456789abcdefghijklmnopqrstuvwxyz';\nconst BI_RC = [];\nlet rr, vv;\nrr = '0'.charCodeAt(0);\nfor (vv = 0; vv <= 9; ++vv)\n    BI_RC[rr++] = vv;\nrr = 'a'.charCodeAt(0);\nfor (vv = 10; vv < 36; ++vv)\n    BI_RC[rr++] = vv;\nrr = 'A'.charCodeAt(0);\nfor (vv = 10; vv < 36; ++vv)\n    BI_RC[rr++] = vv;\nfunction int2char(n) {\n    return BI_RM.charAt(n);\n}\nfunction intAt(s, i) {\n    const c = BI_RC[s.charCodeAt(i)];\n    return c == null ? -1 : c;\n}\n// (protected) copy this to r\nfunction bnpCopyTo(r) {\n    for (let i = this.t - 1; i >= 0; --i)\n        r[i] = this[i];\n    r.t = this.t;\n    r.s = this.s;\n}\n// (protected) set from integer value x, -DV <= x < DV\nfunction bnpFromInt(x) {\n    this.t = 1;\n    this.s = x < 0 ? -1 : 0;\n    if (x > 0)\n        this[0] = x;\n    else if (x < -1)\n        this[0] = x + this.DV;\n    else\n        this.t = 0;\n}\n// return bigint initialized to value\nfunction nbv(i) {\n    const r = nbi();\n    r.fromInt(i);\n    return r;\n}\n// (protected) set from string and radix\nfunction bnpFromString(s, b) {\n    let k;\n    if (b === 16)\n        k = 4;\n    else if (b === 8)\n        k = 3;\n    else if (b === 2)\n        k = 1;\n    else if (b === 32)\n        k = 5;\n    else if (b === 4)\n        k = 2;\n    else\n        throw new Error('Only radix 2, 4, 8, 16, 32 are supported');\n    this.t = 0;\n    this.s = 0;\n    let i = s.length;\n    let mi = false;\n    let sh = 0;\n    while (--i >= 0) {\n        const x = intAt(s, i);\n        if (x < 0) {\n            if (s.charAt(i) === '-')\n                mi = true;\n            continue;\n        }\n        mi = false;\n        if (sh === 0)\n            this[this.t++] = x;\n        else if (sh + k > this.DB) {\n            this[this.t - 1] |= (x & ((1 << (this.DB - sh)) - 1)) << sh;\n            this[this.t++] = x >> (this.DB - sh);\n        }\n        else\n            this[this.t - 1] |= x << sh;\n        sh += k;\n        if (sh >= this.DB)\n            sh -= this.DB;\n    }\n    this.clamp();\n    if (mi)\n        BigInteger.ZERO.subTo(this, this);\n}\n// (protected) clamp off excess high words\nfunction bnpClamp() {\n    const c = this.s & this.DM;\n    while (this.t > 0 && this[this.t - 1] == c)\n        --this.t;\n}\n// (public) return string representation in given radix\nfunction bnToString(b) {\n    if (this.s < 0)\n        return '-' + this.negate().toString(b);\n    let k;\n    if (b == 16)\n        k = 4;\n    else if (b === 8)\n        k = 3;\n    else if (b === 2)\n        k = 1;\n    else if (b === 32)\n        k = 5;\n    else if (b === 4)\n        k = 2;\n    else\n        throw new Error('Only radix 2, 4, 8, 16, 32 are supported');\n    const km = (1 << k) - 1;\n    let d;\n    let m = false;\n    let r = '';\n    let i = this.t;\n    let p = this.DB - ((i * this.DB) % k);\n    if (i-- > 0) {\n        if (p < this.DB && (d = this[i] >> p) > 0) {\n            m = true;\n            r = int2char(d);\n        }\n        while (i >= 0) {\n            if (p < k) {\n                d = (this[i] & ((1 << p) - 1)) << (k - p);\n                d |= this[--i] >> (p += this.DB - k);\n            }\n            else {\n                d = (this[i] >> (p -= k)) & km;\n                if (p <= 0) {\n                    p += this.DB;\n                    --i;\n                }\n            }\n            if (d > 0)\n                m = true;\n            if (m)\n                r += int2char(d);\n        }\n    }\n    return m ? r : '0';\n}\n// (public) -this\nfunction bnNegate() {\n    const r = nbi();\n    BigInteger.ZERO.subTo(this, r);\n    return r;\n}\n// (public) |this|\nfunction bnAbs() {\n    return this.s < 0 ? this.negate() : this;\n}\n// (public) return + if this > a, - if this < a, 0 if equal\nfunction bnCompareTo(a) {\n    let r = this.s - a.s;\n    if (r != 0)\n        return r;\n    let i = this.t;\n    r = i - a.t;\n    if (r != 0)\n        return this.s < 0 ? -r : r;\n    while (--i >= 0)\n        if ((r = this[i] - a[i]) != 0)\n            return r;\n    return 0;\n}\n// returns bit length of the integer x\nfunction nbits(x) {\n    let r = 1;\n    let t;\n    if ((t = x >>> 16) !== 0) {\n        x = t;\n        r += 16;\n    }\n    if ((t = x >> 8) !== 0) {\n        x = t;\n        r += 8;\n    }\n    if ((t = x >> 4) !== 0) {\n        x = t;\n        r += 4;\n    }\n    if ((t = x >> 2) !== 0) {\n        x = t;\n        r += 2;\n    }\n    if ((t = x >> 1) !== 0) {\n        x = t;\n        r += 1;\n    }\n    return r;\n}\n// (public) return the number of bits in \"this\"\nfunction bnBitLength() {\n    if (this.t <= 0)\n        return 0;\n    return this.DB * (this.t - 1) + nbits(this[this.t - 1] ^ (this.s & this.DM));\n}\n// (protected) r = this << n*DB\nfunction bnpDLShiftTo(n, r) {\n    let i;\n    for (i = this.t - 1; i >= 0; --i)\n        r[i + n] = this[i];\n    for (i = n - 1; i >= 0; --i)\n        r[i] = 0;\n    r.t = this.t + n;\n    r.s = this.s;\n}\n// (protected) r = this >> n*DB\nfunction bnpDRShiftTo(n, r) {\n    for (let i = n; i < this.t; ++i)\n        r[i - n] = this[i];\n    r.t = Math.max(this.t - n, 0);\n    r.s = this.s;\n}\n// (protected) r = this << n\nfunction bnpLShiftTo(n, r) {\n    const bs = n % this.DB;\n    const cbs = this.DB - bs;\n    const bm = (1 << cbs) - 1;\n    const ds = Math.floor(n / this.DB);\n    let c = (this.s << bs) & this.DM;\n    let i;\n    for (i = this.t - 1; i >= 0; --i) {\n        r[i + ds + 1] = (this[i] >> cbs) | c;\n        c = (this[i] & bm) << bs;\n    }\n    for (i = ds - 1; i >= 0; --i)\n        r[i] = 0;\n    r[ds] = c;\n    r.t = this.t + ds + 1;\n    r.s = this.s;\n    r.clamp();\n}\n// (protected) r = this >> n\nfunction bnpRShiftTo(n, r) {\n    r.s = this.s;\n    const ds = Math.floor(n / this.DB);\n    if (ds >= this.t) {\n        r.t = 0;\n        return;\n    }\n    const bs = n % this.DB;\n    const cbs = this.DB - bs;\n    const bm = (1 << bs) - 1;\n    r[0] = this[ds] >> bs;\n    for (let i = ds + 1; i < this.t; ++i) {\n        r[i - ds - 1] |= (this[i] & bm) << cbs;\n        r[i - ds] = this[i] >> bs;\n    }\n    if (bs > 0)\n        r[this.t - ds - 1] |= (this.s & bm) << cbs;\n    r.t = this.t - ds;\n    r.clamp();\n}\n// (protected) r = this - a\nfunction bnpSubTo(a, r) {\n    let i = 0;\n    let c = 0;\n    const m = Math.min(a.t, this.t);\n    while (i < m) {\n        c += this[i] - a[i];\n        r[i++] = c & this.DM;\n        c >>= this.DB;\n    }\n    if (a.t < this.t) {\n        c -= a.s;\n        while (i < this.t) {\n            c += this[i];\n            r[i++] = c & this.DM;\n            c >>= this.DB;\n        }\n        c += this.s;\n    }\n    else {\n        c += this.s;\n        while (i < a.t) {\n            c -= a[i];\n            r[i++] = c & this.DM;\n            c >>= this.DB;\n        }\n        c -= a.s;\n    }\n    r.s = c < 0 ? -1 : 0;\n    if (c < -1)\n        r[i++] = this.DV + c;\n    else if (c > 0)\n        r[i++] = c;\n    r.t = i;\n    r.clamp();\n}\n// (protected) r = this * a, r != this,a (HAC 14.12)\n// \"this\" should be the larger one if appropriate.\nfunction bnpMultiplyTo(a, r) {\n    const x = this.abs();\n    const y = a.abs();\n    let i = x.t;\n    r.t = i + y.t;\n    while (--i >= 0)\n        r[i] = 0;\n    for (i = 0; i < y.t; ++i)\n        r[i + x.t] = x.am(0, y[i], r, i, 0, x.t);\n    r.s = 0;\n    r.clamp();\n    if (this.s !== a.s)\n        BigInteger.ZERO.subTo(r, r);\n}\n// (protected) r = this^2, r != this (HAC 14.16)\nfunction bnpSquareTo(r) {\n    const x = this.abs();\n    let i = (r.t = 2 * x.t);\n    while (--i >= 0)\n        r[i] = 0;\n    for (i = 0; i < x.t - 1; ++i) {\n        const c = x.am(i, x[i], r, 2 * i, 0, 1);\n        if ((r[i + x.t] += x.am(i + 1, 2 * x[i], r, 2 * i + 1, c, x.t - i - 1)) >=\n            x.DV) {\n            r[i + x.t] -= x.DV;\n            r[i + x.t + 1] = 1;\n        }\n    }\n    if (r.t > 0)\n        r[r.t - 1] += x.am(i, x[i], r, 2 * i, 0, 1);\n    r.s = 0;\n    r.clamp();\n}\n// (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)\n// r != q, this != m.  q or r may be null.\nfunction bnpDivRemTo(m, q, r) {\n    const pm = m.abs();\n    if (pm.t <= 0)\n        return;\n    const pt = this.abs();\n    if (pt.t < pm.t) {\n        if (q != null)\n            q.fromInt(0);\n        if (r != null)\n            this.copyTo(r);\n        return;\n    }\n    if (r === null)\n        r = nbi();\n    const y = nbi();\n    const ts = this.s;\n    const ms = m.s;\n    const nsh = this.DB - nbits(pm[pm.t - 1]);\n    // normalize modulus\n    if (nsh > 0) {\n        pm.lShiftTo(nsh, y);\n        pt.lShiftTo(nsh, r);\n    }\n    else {\n        pm.copyTo(y);\n        pt.copyTo(r);\n    }\n    const ys = y.t;\n    const y0 = y[ys - 1];\n    if (y0 === 0)\n        return;\n    const yt = y0 * (1 << this.F1) + (ys > 1 ? y[ys - 2] >> this.F2 : 0);\n    const d1 = this.FV / yt;\n    const d2 = (1 << this.F1) / yt;\n    const e = 1 << this.F2;\n    let i = r.t;\n    let j = i - ys;\n    const t = q === null ? nbi() : q;\n    y.dlShiftTo(j, t);\n    if (r.compareTo(t) >= 0) {\n        r[r.t++] = 1;\n        r.subTo(t, r);\n    }\n    BigInteger.ONE.dlShiftTo(ys, t);\n    t.subTo(y, y);\n    // \"negative\" y so we can replace sub with am later\n    while (y.t < ys)\n        y[y.t++] = 0;\n    while (--j >= 0) {\n        // Estimate quotient digit\n        let qd = r[--i] === y0 ? this.DM : Math.floor(r[i] * d1 + (r[i - 1] + e) * d2);\n        if ((r[i] += y.am(0, qd, r, j, 0, ys)) < qd) {\n            // Try it out\n            y.dlShiftTo(j, t);\n            r.subTo(t, r);\n            while (r[i] < --qd)\n                r.subTo(t, r);\n        }\n    }\n    if (q !== null) {\n        r.drShiftTo(ys, q);\n        if (ts !== ms)\n            BigInteger.ZERO.subTo(q, q);\n    }\n    r.t = ys;\n    r.clamp();\n    if (nsh > 0)\n        r.rShiftTo(nsh, r);\n    // Denormalize remainder\n    if (ts < 0)\n        BigInteger.ZERO.subTo(r, r);\n}\n// (public) this mod a\nfunction bnMod(a) {\n    const r = nbi();\n    this.abs().divRemTo(a, null, r);\n    if (this.s < 0 && r.compareTo(BigInteger.ZERO) > 0)\n        a.subTo(r, r);\n    return r;\n}\n// (protected) return \"-1/this % 2^DB\"; useful for Mont. reduction\n// justification:\n//         xy == 1 (mod m)\n//         xy =  1+km\n//   xy(2-xy) = (1+km)(1-km)\n// x[y(2-xy)] = 1-k^2m^2\n// x[y(2-xy)] == 1 (mod m^2)\n// if y is 1/x mod m, then y(2-xy) is 1/x mod m^2\n// should reduce x and y(2-xy) by m^2 at each step to keep size bounded.\n// JS multiply \"overflows\" differently from C/C++, so care is needed here.\nfunction bnpInvDigit() {\n    if (this.t < 1)\n        return 0;\n    const x = this[0];\n    if ((x & 1) === 0)\n        return 0;\n    let y = x & 3;\n    // y == 1/x mod 2^2\n    y = (y * (2 - (x & 0xf) * y)) & 0xf;\n    // y == 1/x mod 2^4\n    y = (y * (2 - (x & 0xff) * y)) & 0xff;\n    // y == 1/x mod 2^8\n    y = (y * (2 - (((x & 0xffff) * y) & 0xffff))) & 0xffff;\n    // y == 1/x mod 2^16\n    // last step - calculate inverse mod DV directly;\n    // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints\n    y = (y * (2 - ((x * y) % this.DV))) % this.DV;\n    // y == 1/x mod 2^dbits\n    // we really want the negative inverse, and -DV < y < DV\n    return y > 0 ? this.DV - y : -y;\n}\nfunction bnEquals(a) {\n    return this.compareTo(a) === 0;\n}\n// (protected) r = this + a\nfunction bnpAddTo(a, r) {\n    let i = 0;\n    let c = 0;\n    const m = Math.min(a.t, this.t);\n    while (i < m) {\n        c += this[i] + a[i];\n        r[i++] = c & this.DM;\n        c >>= this.DB;\n    }\n    if (a.t < this.t) {\n        c += a.s;\n        while (i < this.t) {\n            c += this[i];\n            r[i++] = c & this.DM;\n            c >>= this.DB;\n        }\n        c += this.s;\n    }\n    else {\n        c += this.s;\n        while (i < a.t) {\n            c += a[i];\n            r[i++] = c & this.DM;\n            c >>= this.DB;\n        }\n        c += a.s;\n    }\n    r.s = c < 0 ? -1 : 0;\n    if (c > 0)\n        r[i++] = c;\n    else if (c < -1)\n        r[i++] = this.DV + c;\n    r.t = i;\n    r.clamp();\n}\n// (public) this + a\nfunction bnAdd(a) {\n    const r = nbi();\n    this.addTo(a, r);\n    return r;\n}\n// (public) this - a\nfunction bnSubtract(a) {\n    const r = nbi();\n    this.subTo(a, r);\n    return r;\n}\n// (public) this * a\nfunction bnMultiply(a) {\n    const r = nbi();\n    this.multiplyTo(a, r);\n    return r;\n}\n// (public) this / a\nfunction bnDivide(a) {\n    const r = nbi();\n    this.divRemTo(a, r, null);\n    return r;\n}\n// Montgomery reduction\nfunction Montgomery(m) {\n    this.m = m;\n    this.mp = m.invDigit();\n    this.mpl = this.mp & 0x7fff;\n    this.mph = this.mp >> 15;\n    this.um = (1 << (m.DB - 15)) - 1;\n    this.mt2 = 2 * m.t;\n}\n// xR mod m\nfunction montConvert(x) {\n    const r = nbi();\n    x.abs().dlShiftTo(this.m.t, r);\n    r.divRemTo(this.m, null, r);\n    if (x.s < 0 && r.compareTo(BigInteger.ZERO) > 0)\n        this.m.subTo(r, r);\n    return r;\n}\n// x/R mod m\nfunction montRevert(x) {\n    const r = nbi();\n    x.copyTo(r);\n    this.reduce(r);\n    return r;\n}\n// x = x/R mod m (HAC 14.32)\nfunction montReduce(x) {\n    while (x.t <= this.mt2)\n        // pad x so am has enough room later\n        x[x.t++] = 0;\n    for (let i = 0; i < this.m.t; ++i) {\n        // faster way of calculating u0 = x[i]*mp mod DV\n        let j = x[i] & 0x7fff;\n        const u0 = (j * this.mpl +\n            (((j * this.mph + (x[i] >> 15) * this.mpl) & this.um) << 15)) &\n            x.DM;\n        // use am to combine the multiply-shift-add into one call\n        j = i + this.m.t;\n        x[j] += this.m.am(0, u0, x, i, 0, this.m.t);\n        // propagate carry\n        while (x[j] >= x.DV) {\n            x[j] -= x.DV;\n            x[++j]++;\n        }\n    }\n    x.clamp();\n    x.drShiftTo(this.m.t, x);\n    if (x.compareTo(this.m) >= 0)\n        x.subTo(this.m, x);\n}\n// r = \"x^2/R mod m\"; x != r\nfunction montSqrTo(x, r) {\n    x.squareTo(r);\n    this.reduce(r);\n}\n// r = \"xy/R mod m\"; x,y != r\nfunction montMulTo(x, y, r) {\n    x.multiplyTo(y, r);\n    this.reduce(r);\n}\nMontgomery.prototype.convert = montConvert;\nMontgomery.prototype.revert = montRevert;\nMontgomery.prototype.reduce = montReduce;\nMontgomery.prototype.mulTo = montMulTo;\nMontgomery.prototype.sqrTo = montSqrTo;\n// (public) this^e % m (HAC 14.85)\nfunction bnModPow(e, m, callback) {\n    let i = e.bitLength();\n    let k;\n    let r = nbv(1);\n    const z = new Montgomery(m);\n    if (i <= 0)\n        return r;\n    else if (i < 18)\n        k = 1;\n    else if (i < 48)\n        k = 3;\n    else if (i < 144)\n        k = 4;\n    else if (i < 768)\n        k = 5;\n    else\n        k = 6;\n    // precomputation\n    const g = [];\n    let n = 3;\n    const k1 = k - 1;\n    const km = (1 << k) - 1;\n    g[1] = z.convert(this);\n    if (k > 1) {\n        const g2 = nbi();\n        z.sqrTo(g[1], g2);\n        while (n <= km) {\n            g[n] = nbi();\n            z.mulTo(g2, g[n - 2], g[n]);\n            n += 2;\n        }\n    }\n    let j = e.t - 1;\n    let w;\n    let is1 = true;\n    let r2 = nbi();\n    let t;\n    i = nbits(e[j]) - 1;\n    while (j >= 0) {\n        if (i >= k1)\n            w = (e[j] >> (i - k1)) & km;\n        else {\n            w = (e[j] & ((1 << (i + 1)) - 1)) << (k1 - i);\n            if (j > 0)\n                w |= e[j - 1] >> (this.DB + i - k1);\n        }\n        n = k;\n        while ((w & 1) === 0) {\n            w >>= 1;\n            --n;\n        }\n        if ((i -= n) < 0) {\n            i += this.DB;\n            --j;\n        }\n        if (is1) {\n            // ret == 1, don't bother squaring or multiplying it\n            g[w].copyTo(r);\n            is1 = false;\n        }\n        else {\n            while (n > 1) {\n                z.sqrTo(r, r2);\n                z.sqrTo(r2, r);\n                n -= 2;\n            }\n            if (n > 0)\n                z.sqrTo(r, r2);\n            else {\n                t = r;\n                r = r2;\n                r2 = t;\n            }\n            z.mulTo(r2, g[w], r);\n        }\n        while (j >= 0 && (e[j] & (1 << i)) === 0) {\n            z.sqrTo(r, r2);\n            t = r;\n            r = r2;\n            r2 = t;\n            if (--i < 0) {\n                i = this.DB - 1;\n                --j;\n            }\n        }\n    }\n    const result = z.revert(r);\n    callback(null, result);\n    return result;\n}\n// protected\nBigInteger.prototype.copyTo = bnpCopyTo;\nBigInteger.prototype.fromInt = bnpFromInt;\nBigInteger.prototype.fromString = bnpFromString;\nBigInteger.prototype.clamp = bnpClamp;\nBigInteger.prototype.dlShiftTo = bnpDLShiftTo;\nBigInteger.prototype.drShiftTo = bnpDRShiftTo;\nBigInteger.prototype.lShiftTo = bnpLShiftTo;\nBigInteger.prototype.rShiftTo = bnpRShiftTo;\nBigInteger.prototype.subTo = bnpSubTo;\nBigInteger.prototype.multiplyTo = bnpMultiplyTo;\nBigInteger.prototype.squareTo = bnpSquareTo;\nBigInteger.prototype.divRemTo = bnpDivRemTo;\nBigInteger.prototype.invDigit = bnpInvDigit;\nBigInteger.prototype.addTo = bnpAddTo;\n// public\nBigInteger.prototype.toString = bnToString;\nBigInteger.prototype.negate = bnNegate;\nBigInteger.prototype.abs = bnAbs;\nBigInteger.prototype.compareTo = bnCompareTo;\nBigInteger.prototype.bitLength = bnBitLength;\nBigInteger.prototype.mod = bnMod;\nBigInteger.prototype.equals = bnEquals;\nBigInteger.prototype.add = bnAdd;\nBigInteger.prototype.subtract = bnSubtract;\nBigInteger.prototype.multiply = bnMultiply;\nBigInteger.prototype.divide = bnDivide;\nBigInteger.prototype.modPow = bnModPow;\n// \"constants\"\nBigInteger.ZERO = nbv(0);\nBigInteger.ONE = nbv(1);\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * @internal\n */\nexport const calculateS = async ({ a, g, k, x, B, N, U, }) => {\n    return new Promise((resolve, reject) => {\n        g.modPow(x, N, (outerErr, outerResult) => {\n            if (outerErr) {\n                reject(outerErr);\n                return;\n            }\n            B.subtract(k.multiply(outerResult)).modPow(a.add(U.multiply(x)), N, (innerErr, innerResult) => {\n                if (innerErr) {\n                    reject(innerErr);\n                    return;\n                }\n                resolve(innerResult.mod(N));\n            });\n        });\n    });\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport const INIT_N = 'FFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD1' +\n    '29024E088A67CC74020BBEA63B139B22514A08798E3404DD' +\n    'EF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C245' +\n    'E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7ED' +\n    'EE386BFB5A899FA5AE9F24117C4B1FE649286651ECE45B3D' +\n    'C2007CB8A163BF0598DA48361C55D39A69163FA8FD24CF5F' +\n    '83655D23DCA3AD961C62F356208552BB9ED529077096966D' +\n    '670C354E4ABC9804F1746C08CA18217C32905E462E36CE3B' +\n    'E39E772C180E86039B2783A2EC07A28FB5C55DF06F4C52C9' +\n    'DE2BCBF6955817183995497CEA956AE515D2261898FA0510' +\n    '15728E5A8AAAC42DAD33170D04507A33A85521ABDF1CBA64' +\n    'ECFB850458DBEF0A8AEA71575D060C7DB3970F85A6E1E4C7' +\n    'ABF5AE8CDB0933D71E8C94E04A25619DCEE3D2261AD2EE6B' +\n    'F12FFA06D98A0864D87602733EC86A64521F2B18177B200C' +\n    'BBE117577A615D6C770988C0BAD946E208E24FA074E5AB31' +\n    '43DB5BFCE0FD108E4B82D120A93AD2CAFFFFFFFFFFFFFFFF';\nexport const SHORT_TO_HEX = {};\nexport const HEX_TO_SHORT = {};\nfor (let i = 0; i < 256; i++) {\n    let encodedByte = i.toString(16).toLowerCase();\n    if (encodedByte.length === 1) {\n        encodedByte = `0${encodedByte}`;\n    }\n    SHORT_TO_HEX[i] = encodedByte;\n    HEX_TO_SHORT[encodedByte] = i;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { HEX_TO_SHORT } from './constants';\n/**\n * Converts a hexadecimal encoded string to a Uint8Array of bytes.\n *\n * @param encoded The hexadecimal encoded string\n */\nexport const getBytesFromHex = (encoded) => {\n    if (encoded.length % 2 !== 0) {\n        throw new Error('Hex encoded strings must have an even number length');\n    }\n    const out = new Uint8Array(encoded.length / 2);\n    for (let i = 0; i < encoded.length; i += 2) {\n        const encodedByte = encoded.slice(i, i + 2).toLowerCase();\n        if (encodedByte in HEX_TO_SHORT) {\n            out[i / 2] = HEX_TO_SHORT[encodedByte];\n        }\n        else {\n            throw new Error(`Cannot decode unrecognized sequence ${encodedByte} as hexadecimal`);\n        }\n    }\n    return out;\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { SHORT_TO_HEX } from './constants';\n/**\n * Converts a Uint8Array of binary data to a hexadecimal encoded string.\n *\n * @param bytes The binary data to encode\n */\nexport const getHexFromBytes = (bytes) => {\n    let out = '';\n    for (let i = 0; i < bytes.byteLength; i++) {\n        out += SHORT_TO_HEX[bytes[i]];\n    }\n    return out;\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Sha256 } from '@aws-crypto/sha256-js';\nimport { getHexFromBytes } from './getHexFromBytes';\n/**\n * Calculate a hash from a `SourceData`\n * @param {SourceData} data Value to hash.\n * @returns {string} Hex-encoded hash.\n * @private\n */\nexport const getHashFromData = (data) => {\n    const sha256 = new Sha256();\n    sha256.update(data);\n    const hashedData = sha256.digestSync();\n    const hashHexFromUint8 = getHexFromBytes(hashedData);\n    return new Array(64 - hashHexFromUint8.length).join('0') + hashHexFromUint8;\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { getBytesFromHex } from './getBytesFromHex';\nimport { getHashFromData } from './getHashFromData';\n/**\n * Calculate a hash from a hex string\n * @param {string} hexStr Value to hash.\n * @returns {string} Hex-encoded hash.\n * @private\n */\nexport const getHashFromHex = (hexStr) => getHashFromData(getBytesFromHex(hexStr));\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { BigInteger } from './BigInteger';\n/**\n * Tests if a hex string has it most significant bit set (case-insensitive regex)\n */\nconst HEX_MSB_REGEX = /^[89a-f]/i;\n/**\n * Returns an unambiguous, even-length hex string of the two's complement encoding of an integer.\n *\n * It is compatible with the hex encoding of Java's BigInteger's toByteArray(), wich returns a\n * byte array containing the two's-complement representation of a BigInteger. The array contains\n * the minimum number of bytes required to represent the BigInteger, including at least one sign bit.\n *\n * Examples showing how ambiguity is avoided by left padding with:\n * \t\"00\" (for positive values where the most-significant-bit is set)\n *  \"FF\" (for negative values where the most-significant-bit is set)\n *\n * padHex(bigInteger.fromInt(-236))  === \"FF14\"\n * padHex(bigInteger.fromInt(20))    === \"14\"\n *\n * padHex(bigInteger.fromInt(-200))  === \"FF38\"\n * padHex(bigInteger.fromInt(56))    === \"38\"\n *\n * padHex(bigInteger.fromInt(-20))   === \"EC\"\n * padHex(bigInteger.fromInt(236))   === \"00EC\"\n *\n * padHex(bigInteger.fromInt(-56))   === \"C8\"\n * padHex(bigInteger.fromInt(200))   === \"00C8\"\n *\n * @param {AuthBigInteger} bigInt Number to encode.\n * @returns {String} even-length hex string of the two's complement encoding.\n */\nexport const getPaddedHex = (bigInt) => {\n    if (!(bigInt instanceof BigInteger)) {\n        throw new Error('Not a BigInteger');\n    }\n    const isNegative = bigInt.compareTo(BigInteger.ZERO) < 0;\n    /* Get a hex string for abs(bigInt) */\n    let hexStr = bigInt.abs().toString(16);\n    /* Pad hex to even length if needed */\n    hexStr = hexStr.length % 2 !== 0 ? `0${hexStr}` : hexStr;\n    /* Prepend \"00\" if the most significant bit is set */\n    hexStr = HEX_MSB_REGEX.test(hexStr) ? `00${hexStr}` : hexStr;\n    if (isNegative) {\n        /* Flip the bits of the representation */\n        const invertedNibbles = hexStr\n            .split('')\n            .map((x) => {\n            const invertedNibble = ~parseInt(x, 16) & 0xf;\n            return '0123456789ABCDEF'.charAt(invertedNibble);\n        })\n            .join('');\n        /* After flipping the bits, add one to get the 2's complement representation */\n        const flippedBitsBI = new BigInteger(invertedNibbles, 16).add(BigInteger.ONE);\n        hexStr = flippedBitsBI.toString(16);\n        /*\n        For hex strings starting with 'FF8', 'FF' can be dropped, e.g. 0xFFFF80=0xFF80=0x80=-128\n\n        Any sequence of '1' bits on the left can always be substituted with a single '1' bit\n        without changing the represented value.\n\n        This only happens in the case when the input is 80...00\n        */\n        if (hexStr.toUpperCase().startsWith('FF8')) {\n            hexStr = hexStr.substring(2);\n        }\n    }\n    return hexStr;\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { BigInteger } from '../BigInteger';\nimport { getHashFromHex } from '../getHashFromHex';\nimport { getPaddedHex } from '../getPaddedHex';\n/**\n * @internal\n */\nexport const calculateU = ({ A, B, }) => {\n    const U = new BigInteger(getHashFromHex(getPaddedHex(A) + getPaddedHex(B)), 16);\n    if (U.equals(BigInteger.ZERO)) {\n        throw new Error('U cannot be zero.');\n    }\n    return U;\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Sha256 } from '@aws-crypto/sha256-js';\n/**\n * Standard HKDF algorithm.\n *\n * @param {Uint8Array} ikm Input key material.\n * @param {Uint8Array} salt Salt value.\n * @param {Uint8Array} info Context and application specific info.\n *\n * @returns {Uint8Array} Strong key material.\n *\n * @internal\n */\nexport const getHkdfKey = (ikm, salt, info) => {\n    const awsCryptoHash = new Sha256(salt);\n    awsCryptoHash.update(ikm);\n    const resultFromAWSCryptoPrk = awsCryptoHash.digestSync();\n    const awsCryptoHashHmac = new Sha256(resultFromAWSCryptoPrk);\n    awsCryptoHashHmac.update(info);\n    const resultFromAWSCryptoHmac = awsCryptoHashHmac.digestSync();\n    const hashHexFromAWSCrypto = resultFromAWSCryptoHmac;\n    return hashHexFromAWSCrypto.slice(0, 16);\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { WordArray } from '@aws-amplify/core/internals/utils';\nimport { getBytesFromHex } from './getBytesFromHex';\n/**\n * Returns a Uint8Array with a sequence of random nBytes\n *\n * @param {number} nBytes\n * @returns {Uint8Array} fixed-length sequence of random bytes\n */\nexport const getRandomBytes = (nBytes) => {\n    const str = new WordArray().random(nBytes).toString();\n    return getBytesFromHex(str);\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { base64Encoder } from '@aws-amplify/core/internals/utils';\nimport { getRandomBytes } from './getRandomBytes';\n/**\n * Helper function to generate a random string\n * @returns {string} a random value.\n *\n * @internal\n */\nexport const getRandomString = () => base64Encoder.convert(getRandomBytes(40));\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AuthError } from '../../../../../errors/AuthError';\nimport { textEncoder } from '../../textEncoder';\nimport { BigInteger } from '../BigInteger';\nimport { calculateS, calculateU } from '../calculate';\nimport { getBytesFromHex } from '../getBytesFromHex';\nimport { getHashFromData } from '../getHashFromData';\nimport { getHashFromHex } from '../getHashFromHex';\nimport { getHexFromBytes } from '../getHexFromBytes';\nimport { getHkdfKey } from '../getHkdfKey';\nimport { getPaddedHex } from '../getPaddedHex';\nimport { getRandomBytes } from '../getRandomBytes';\nimport { getRandomString } from '../getRandomString';\n/** @class */\nexport default class AuthenticationHelper {\n    constructor({ userPoolName, a, g, A, N, }) {\n        this.encoder = textEncoder;\n        this.userPoolName = userPoolName;\n        this.a = a;\n        this.g = g;\n        this.A = A;\n        this.N = N;\n        this.k = new BigInteger(getHashFromHex(`${getPaddedHex(N)}${getPaddedHex(g)}`), 16);\n    }\n    /**\n     * @returns {string} Generated random value included in password hash.\n     */\n    getRandomPassword() {\n        if (!this.randomPassword) {\n            throw new AuthError({\n                name: 'EmptyBigIntegerRandomPassword',\n                message: 'random password is empty',\n            });\n        }\n        return this.randomPassword;\n    }\n    /**\n     * @returns {string} Generated random value included in devices hash.\n     */\n    getSaltToHashDevices() {\n        if (!this.saltToHashDevices) {\n            throw new AuthError({\n                name: 'EmptyBigIntegersaltToHashDevices',\n                message: 'saltToHashDevices is empty',\n            });\n        }\n        return this.saltToHashDevices;\n    }\n    /**\n     * @returns {string} Value used to verify devices.\n     */\n    getVerifierDevices() {\n        if (!this.verifierDevices) {\n            throw new AuthError({\n                name: 'EmptyBigIntegerVerifierDevices',\n                message: 'verifyDevices is empty',\n            });\n        }\n        return this.verifierDevices;\n    }\n    /**\n     * Generate salts and compute verifier.\n     *\n     * @param {string} deviceGroupKey Devices to generate verifier for.\n     * @param {string} username User to generate verifier for.\n     *\n     * @returns {Promise<void>}\n     */\n    async generateHashDevice(deviceGroupKey, username) {\n        this.randomPassword = getRandomString();\n        const combinedString = `${deviceGroupKey}${username}:${this.randomPassword}`;\n        const hashedString = getHashFromData(combinedString);\n        const hexRandom = getHexFromBytes(getRandomBytes(16));\n        // The random hex will be unambiguously represented as a postive integer\n        this.saltToHashDevices = getPaddedHex(new BigInteger(hexRandom, 16));\n        return new Promise((resolve, reject) => {\n            this.g.modPow(new BigInteger(getHashFromHex(this.saltToHashDevices + hashedString), 16), this.N, (err, result) => {\n                if (err) {\n                    reject(err);\n                    return;\n                }\n                this.verifierDevices = getPaddedHex(result);\n                resolve();\n            });\n        });\n    }\n    /**\n     * Calculates the final HKDF key based on computed S value, computed U value and the key\n     *\n     * @param {String} username Username.\n     * @param {String} password Password.\n     * @param {AuthBigInteger} B Server B value.\n     * @param {AuthBigInteger} salt Generated salt.\n     */\n    async getPasswordAuthenticationKey({ username, password, serverBValue, salt, }) {\n        if (serverBValue.mod(this.N).equals(BigInteger.ZERO)) {\n            throw new Error('B cannot be zero.');\n        }\n        const U = calculateU({\n            A: this.A,\n            B: serverBValue,\n        });\n        const usernamePassword = `${this.userPoolName}${username}:${password}`;\n        const usernamePasswordHash = getHashFromData(usernamePassword);\n        const x = new BigInteger(getHashFromHex(getPaddedHex(salt) + usernamePasswordHash), 16);\n        const S = await calculateS({\n            a: this.a,\n            g: this.g,\n            k: this.k,\n            x,\n            B: serverBValue,\n            N: this.N,\n            U,\n        });\n        const context = this.encoder.convert('Caldera Derived Key');\n        const spacer = this.encoder.convert(String.fromCharCode(1));\n        const info = new Uint8Array(context.byteLength + spacer.byteLength);\n        info.set(context, 0);\n        info.set(spacer, context.byteLength);\n        const hkdfKey = getHkdfKey(getBytesFromHex(getPaddedHex(S)), getBytesFromHex(getPaddedHex(U)), info);\n        return hkdfKey;\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { BigInteger } from '../BigInteger';\n/**\n * @internal\n */\nexport const calculateA = async ({ a, g, N, }) => {\n    return new Promise((resolve, reject) => {\n        g.modPow(a, N, (err, A) => {\n            if (err) {\n                reject(err);\n                return;\n            }\n            if (A.mod(N).equals(BigInteger.ZERO)) {\n                reject(new Error('Illegal parameter. A mod N cannot be 0.'));\n                return;\n            }\n            resolve(A);\n        });\n    });\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AuthenticationHelper } from './AuthenticationHelper';\nimport { BigInteger } from './BigInteger';\nimport { calculateA } from './calculate';\nimport { INIT_N } from './constants';\nimport { getHexFromBytes } from './getHexFromBytes';\nimport { getRandomBytes } from './getRandomBytes';\n/**\n * Returns a new {@link AuthenticationHelper} instance with randomly generated BigInteger seed\n *\n * @param userPoolName Cognito user pool name.\n * @returns An {@link AuthenticationHelper} instance.\n *\n * @internal\n */\nexport const getAuthenticationHelper = async (userPoolName) => {\n    const N = new BigInteger(INIT_N, 16);\n    const g = new BigInteger('2', 16);\n    const a = generateRandomBigInteger();\n    const A = await calculateA({ a, g, N });\n    return new AuthenticationHelper({ userPoolName, a, g, A, N });\n};\n/**\n * Generates a random BigInteger.\n *\n * @returns {BigInteger} a random value.\n */\nconst generateRandomBigInteger = () => {\n    // This will be interpreted as a postive 128-bit integer\n    const hexRandom = getHexFromBytes(getRandomBytes(128));\n    // There is no need to do randomBigInt.mod(this.N - 1) as N (3072-bit) is > 128 bytes (1024-bit)\n    return new BigInteger(hexRandom, 16);\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst MONTH_NAMES = [\n    'Jan',\n    'Feb',\n    'Mar',\n    'Apr',\n    'May',\n    'Jun',\n    'Jul',\n    'Aug',\n    'Sep',\n    'Oct',\n    'Nov',\n    'Dec',\n];\nconst WEEK_NAMES = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\nexport const getNowString = () => {\n    const now = new Date();\n    const weekDay = WEEK_NAMES[now.getUTCDay()];\n    const month = MONTH_NAMES[now.getUTCMonth()];\n    const day = now.getUTCDate();\n    let hours = now.getUTCHours();\n    if (hours < 10) {\n        hours = `0${hours}`;\n    }\n    let minutes = now.getUTCMinutes();\n    if (minutes < 10) {\n        minutes = `0${minutes}`;\n    }\n    let seconds = now.getUTCSeconds();\n    if (seconds < 10) {\n        seconds = `0${seconds}`;\n    }\n    const year = now.getUTCFullYear();\n    // ddd MMM D HH:mm:ss UTC YYYY\n    const dateNow = `${weekDay} ${month} ${day} ${hours}:${minutes}:${seconds} UTC ${year}`;\n    return dateNow;\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Sha256 } from '@aws-crypto/sha256-js';\nimport { base64Decoder, base64Encoder, } from '@aws-amplify/core/internals/utils';\nimport { textEncoder } from '../textEncoder';\nexport const getSignatureString = ({ userPoolName, username, challengeParameters, dateNow, hkdf, }) => {\n    const bufUPIDaToB = textEncoder.convert(userPoolName);\n    const bufUNaToB = textEncoder.convert(username);\n    const bufSBaToB = urlB64ToUint8Array(challengeParameters.SECRET_BLOCK);\n    const bufDNaToB = textEncoder.convert(dateNow);\n    const bufConcat = new Uint8Array(bufUPIDaToB.byteLength +\n        bufUNaToB.byteLength +\n        bufSBaToB.byteLength +\n        bufDNaToB.byteLength);\n    bufConcat.set(bufUPIDaToB, 0);\n    bufConcat.set(bufUNaToB, bufUPIDaToB.byteLength);\n    bufConcat.set(bufSBaToB, bufUPIDaToB.byteLength + bufUNaToB.byteLength);\n    bufConcat.set(bufDNaToB, bufUPIDaToB.byteLength + bufUNaToB.byteLength + bufSBaToB.byteLength);\n    const awsCryptoHash = new Sha256(hkdf);\n    awsCryptoHash.update(bufConcat);\n    const resultFromAWSCrypto = awsCryptoHash.digestSync();\n    const signatureString = base64Encoder.convert(resultFromAWSCrypto);\n    return signatureString;\n};\nconst urlB64ToUint8Array = (base64String) => {\n    const padding = '='.repeat((4 - (base64String.length % 4)) % 4);\n    const base64 = (base64String + padding).replace(/-/g, '+').replace(/_/g, '/');\n    const rawData = base64Decoder.convert(base64);\n    const outputArray = new Uint8Array(rawData.length);\n    for (let i = 0; i < rawData.length; ++i) {\n        outputArray[i] = rawData.charCodeAt(i);\n    }\n    return outputArray;\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport function getUserContextData({ username, userPoolId, userPoolClientId, }) {\n    if (typeof window === 'undefined') {\n        return undefined;\n    }\n    const amazonCognitoAdvancedSecurityData = window\n        .AmazonCognitoAdvancedSecurityData;\n    if (typeof amazonCognitoAdvancedSecurityData === 'undefined') {\n        return undefined;\n    }\n    const advancedSecurityData = amazonCognitoAdvancedSecurityData.getData(username, userPoolId, userPoolClientId);\n    if (advancedSecurityData) {\n        const userContextData = {\n            EncodedData: advancedSecurityData,\n        };\n        return userContextData;\n    }\n    return {};\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify } from '@aws-amplify/core';\nimport { AmplifyUrl, AuthAction, assertTokenProviderConfig, base64Encoder, getDeviceName, } from '@aws-amplify/core/internals/utils';\nimport { AuthError } from '../../../errors/AuthError';\nimport { InitiateAuthException } from '../types/errors';\nimport { AuthErrorCodes } from '../../../common/AuthErrorStrings';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError';\nimport { USER_ALREADY_AUTHENTICATED_EXCEPTION } from '../../../errors/constants';\nimport { getCurrentUser } from '../apis/getCurrentUser';\nimport { getAuthUserAgentValue } from '../../../utils';\nimport { createAssociateSoftwareTokenClient, createConfirmDeviceClient, createInitiateAuthClient, createRespondToAuthChallengeClient, createVerifySoftwareTokenClient, } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider';\nimport { createCognitoUserPoolEndpointResolver } from '../factories';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers';\nimport { signInStore } from './signInStore';\nimport { assertDeviceMetadata } from './types';\nimport { getAuthenticationHelper, getBytesFromHex, getNowString, getSignatureString, } from './srp';\nimport { BigInteger } from './srp/BigInteger';\nimport { getUserContextData } from './userContextData';\nconst USER_ATTRIBUTES = 'userAttributes.';\nexport async function handleCustomChallenge({ challengeResponse, clientMetadata, session, username, config, tokenOrchestrator, }) {\n    const { userPoolId, userPoolClientId, userPoolEndpoint } = config;\n    const challengeResponses = {\n        USERNAME: username,\n        ANSWER: challengeResponse,\n    };\n    const deviceMetadata = await tokenOrchestrator?.getDeviceMetadata(username);\n    if (deviceMetadata && deviceMetadata.deviceKey) {\n        challengeResponses.DEVICE_KEY = deviceMetadata.deviceKey;\n    }\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const jsonReq = {\n        ChallengeName: 'CUSTOM_CHALLENGE',\n        ChallengeResponses: challengeResponses,\n        Session: session,\n        ClientMetadata: clientMetadata,\n        ClientId: userPoolClientId,\n        UserContextData,\n    };\n    const respondToAuthChallenge = createRespondToAuthChallengeClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const response = await respondToAuthChallenge({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmSignIn),\n    }, jsonReq);\n    if (response.ChallengeName === 'DEVICE_SRP_AUTH') {\n        return handleDeviceSRPAuth({\n            username,\n            config,\n            clientMetadata,\n            session: response.Session,\n            tokenOrchestrator,\n        });\n    }\n    return response;\n}\nexport async function handleMFASetupChallenge({ challengeResponse, username, clientMetadata, session, deviceName, config, }) {\n    const { userPoolId, userPoolClientId, userPoolEndpoint } = config;\n    const challengeResponses = {\n        USERNAME: username,\n    };\n    const verifySoftwareToken = createVerifySoftwareTokenClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const { Session } = await verifySoftwareToken({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmSignIn),\n    }, {\n        UserCode: challengeResponse,\n        Session: session,\n        FriendlyDeviceName: deviceName,\n    });\n    signInStore.dispatch({\n        type: 'SET_SIGN_IN_SESSION',\n        value: Session,\n    });\n    const jsonReq = {\n        ChallengeName: 'MFA_SETUP',\n        ChallengeResponses: challengeResponses,\n        Session,\n        ClientMetadata: clientMetadata,\n        ClientId: userPoolClientId,\n    };\n    const respondToAuthChallenge = createRespondToAuthChallengeClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    return respondToAuthChallenge({ region: getRegionFromUserPoolId(userPoolId) }, jsonReq);\n}\nexport async function handleSelectMFATypeChallenge({ challengeResponse, username, clientMetadata, session, config, }) {\n    const { userPoolId, userPoolClientId, userPoolEndpoint } = config;\n    assertValidationError(challengeResponse === 'TOTP' || challengeResponse === 'SMS', AuthValidationErrorCode.IncorrectMFAMethod);\n    const challengeResponses = {\n        USERNAME: username,\n        ANSWER: mapMfaType(challengeResponse),\n    };\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const jsonReq = {\n        ChallengeName: 'SELECT_MFA_TYPE',\n        ChallengeResponses: challengeResponses,\n        Session: session,\n        ClientMetadata: clientMetadata,\n        ClientId: userPoolClientId,\n        UserContextData,\n    };\n    const respondToAuthChallenge = createRespondToAuthChallengeClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    return respondToAuthChallenge({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmSignIn),\n    }, jsonReq);\n}\nexport async function handleSMSMFAChallenge({ challengeResponse, clientMetadata, session, username, config, }) {\n    const { userPoolId, userPoolClientId, userPoolEndpoint } = config;\n    const challengeResponses = {\n        USERNAME: username,\n        SMS_MFA_CODE: challengeResponse,\n    };\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const jsonReq = {\n        ChallengeName: 'SMS_MFA',\n        ChallengeResponses: challengeResponses,\n        Session: session,\n        ClientMetadata: clientMetadata,\n        ClientId: userPoolClientId,\n        UserContextData,\n    };\n    const respondToAuthChallenge = createRespondToAuthChallengeClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    return respondToAuthChallenge({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmSignIn),\n    }, jsonReq);\n}\nexport async function handleSoftwareTokenMFAChallenge({ challengeResponse, clientMetadata, session, username, config, }) {\n    const { userPoolId, userPoolClientId, userPoolEndpoint } = config;\n    const challengeResponses = {\n        USERNAME: username,\n        SOFTWARE_TOKEN_MFA_CODE: challengeResponse,\n    };\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const jsonReq = {\n        ChallengeName: 'SOFTWARE_TOKEN_MFA',\n        ChallengeResponses: challengeResponses,\n        Session: session,\n        ClientMetadata: clientMetadata,\n        ClientId: userPoolClientId,\n        UserContextData,\n    };\n    const respondToAuthChallenge = createRespondToAuthChallengeClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    return respondToAuthChallenge({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmSignIn),\n    }, jsonReq);\n}\nexport async function handleCompleteNewPasswordChallenge({ challengeResponse, clientMetadata, session, username, requiredAttributes, config, }) {\n    const { userPoolId, userPoolClientId, userPoolEndpoint } = config;\n    const challengeResponses = {\n        ...createAttributes(requiredAttributes),\n        NEW_PASSWORD: challengeResponse,\n        USERNAME: username,\n    };\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const jsonReq = {\n        ChallengeName: 'NEW_PASSWORD_REQUIRED',\n        ChallengeResponses: challengeResponses,\n        ClientMetadata: clientMetadata,\n        Session: session,\n        ClientId: userPoolClientId,\n        UserContextData,\n    };\n    const respondToAuthChallenge = createRespondToAuthChallengeClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    return respondToAuthChallenge({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmSignIn),\n    }, jsonReq);\n}\nexport async function handleUserPasswordAuthFlow(username, password, clientMetadata, config, tokenOrchestrator) {\n    const { userPoolClientId, userPoolId, userPoolEndpoint } = config;\n    const authParameters = {\n        USERNAME: username,\n        PASSWORD: password,\n    };\n    const deviceMetadata = await tokenOrchestrator.getDeviceMetadata(username);\n    if (deviceMetadata && deviceMetadata.deviceKey) {\n        authParameters.DEVICE_KEY = deviceMetadata.deviceKey;\n    }\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const jsonReq = {\n        AuthFlow: 'USER_PASSWORD_AUTH',\n        AuthParameters: authParameters,\n        ClientMetadata: clientMetadata,\n        ClientId: userPoolClientId,\n        UserContextData,\n    };\n    const initiateAuth = createInitiateAuthClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const response = await initiateAuth({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.SignIn),\n    }, jsonReq);\n    const activeUsername = response.ChallengeParameters?.USERNAME ??\n        response.ChallengeParameters?.USER_ID_FOR_SRP ??\n        username;\n    setActiveSignInUsername(activeUsername);\n    if (response.ChallengeName === 'DEVICE_SRP_AUTH')\n        return handleDeviceSRPAuth({\n            username: activeUsername,\n            config,\n            clientMetadata,\n            session: response.Session,\n            tokenOrchestrator,\n        });\n    return response;\n}\nexport async function handleUserSRPAuthFlow(username, password, clientMetadata, config, tokenOrchestrator) {\n    const { userPoolId, userPoolClientId, userPoolEndpoint } = config;\n    const userPoolName = userPoolId?.split('_')[1] || '';\n    const authenticationHelper = await getAuthenticationHelper(userPoolName);\n    const authParameters = {\n        USERNAME: username,\n        SRP_A: authenticationHelper.A.toString(16),\n    };\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const jsonReq = {\n        AuthFlow: 'USER_SRP_AUTH',\n        AuthParameters: authParameters,\n        ClientMetadata: clientMetadata,\n        ClientId: userPoolClientId,\n        UserContextData,\n    };\n    const initiateAuth = createInitiateAuthClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const resp = await initiateAuth({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.SignIn),\n    }, jsonReq);\n    const { ChallengeParameters: challengeParameters, Session: session } = resp;\n    const activeUsername = challengeParameters?.USERNAME ?? username;\n    setActiveSignInUsername(activeUsername);\n    return retryOnResourceNotFoundException(handlePasswordVerifierChallenge, [\n        password,\n        challengeParameters,\n        clientMetadata,\n        session,\n        authenticationHelper,\n        config,\n        tokenOrchestrator,\n    ], activeUsername, tokenOrchestrator);\n}\nexport async function handleCustomAuthFlowWithoutSRP(username, clientMetadata, config, tokenOrchestrator) {\n    const { userPoolClientId, userPoolId, userPoolEndpoint } = config;\n    const authParameters = {\n        USERNAME: username,\n    };\n    const deviceMetadata = await tokenOrchestrator.getDeviceMetadata(username);\n    if (deviceMetadata && deviceMetadata.deviceKey) {\n        authParameters.DEVICE_KEY = deviceMetadata.deviceKey;\n    }\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const jsonReq = {\n        AuthFlow: 'CUSTOM_AUTH',\n        AuthParameters: authParameters,\n        ClientMetadata: clientMetadata,\n        ClientId: userPoolClientId,\n        UserContextData,\n    };\n    const initiateAuth = createInitiateAuthClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const response = await initiateAuth({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.SignIn),\n    }, jsonReq);\n    const activeUsername = response.ChallengeParameters?.USERNAME ?? username;\n    setActiveSignInUsername(activeUsername);\n    if (response.ChallengeName === 'DEVICE_SRP_AUTH')\n        return handleDeviceSRPAuth({\n            username: activeUsername,\n            config,\n            clientMetadata,\n            session: response.Session,\n            tokenOrchestrator,\n        });\n    return response;\n}\nexport async function handleCustomSRPAuthFlow(username, password, clientMetadata, config, tokenOrchestrator) {\n    assertTokenProviderConfig(config);\n    const { userPoolId, userPoolClientId, userPoolEndpoint } = config;\n    const userPoolName = userPoolId?.split('_')[1] || '';\n    const authenticationHelper = await getAuthenticationHelper(userPoolName);\n    const authParameters = {\n        USERNAME: username,\n        SRP_A: authenticationHelper.A.toString(16),\n        CHALLENGE_NAME: 'SRP_A',\n    };\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const jsonReq = {\n        AuthFlow: 'CUSTOM_AUTH',\n        AuthParameters: authParameters,\n        ClientMetadata: clientMetadata,\n        ClientId: userPoolClientId,\n        UserContextData,\n    };\n    const initiateAuth = createInitiateAuthClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const { ChallengeParameters: challengeParameters, Session: session } = await initiateAuth({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.SignIn),\n    }, jsonReq);\n    const activeUsername = challengeParameters?.USERNAME ?? username;\n    setActiveSignInUsername(activeUsername);\n    return retryOnResourceNotFoundException(handlePasswordVerifierChallenge, [\n        password,\n        challengeParameters,\n        clientMetadata,\n        session,\n        authenticationHelper,\n        config,\n        tokenOrchestrator,\n    ], activeUsername, tokenOrchestrator);\n}\nasync function handleDeviceSRPAuth({ username, config, clientMetadata, session, tokenOrchestrator, }) {\n    const { userPoolId, userPoolEndpoint } = config;\n    const clientId = config.userPoolClientId;\n    const deviceMetadata = await tokenOrchestrator?.getDeviceMetadata(username);\n    assertDeviceMetadata(deviceMetadata);\n    const authenticationHelper = await getAuthenticationHelper(deviceMetadata.deviceGroupKey);\n    const challengeResponses = {\n        USERNAME: username,\n        SRP_A: authenticationHelper.A.toString(16),\n        DEVICE_KEY: deviceMetadata.deviceKey,\n    };\n    const jsonReqResponseChallenge = {\n        ChallengeName: 'DEVICE_SRP_AUTH',\n        ClientId: clientId,\n        ChallengeResponses: challengeResponses,\n        ClientMetadata: clientMetadata,\n        Session: session,\n    };\n    const respondToAuthChallenge = createRespondToAuthChallengeClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const { ChallengeParameters: respondedChallengeParameters, Session } = await respondToAuthChallenge({ region: getRegionFromUserPoolId(userPoolId) }, jsonReqResponseChallenge);\n    return handleDevicePasswordVerifier(username, respondedChallengeParameters, clientMetadata, Session, authenticationHelper, config, tokenOrchestrator);\n}\nasync function handleDevicePasswordVerifier(username, challengeParameters, clientMetadata, session, authenticationHelper, { userPoolId, userPoolClientId, userPoolEndpoint }, tokenOrchestrator) {\n    const deviceMetadata = await tokenOrchestrator?.getDeviceMetadata(username);\n    assertDeviceMetadata(deviceMetadata);\n    const serverBValue = new BigInteger(challengeParameters?.SRP_B, 16);\n    const salt = new BigInteger(challengeParameters?.SALT, 16);\n    const { deviceKey } = deviceMetadata;\n    const { deviceGroupKey } = deviceMetadata;\n    const hkdf = await authenticationHelper.getPasswordAuthenticationKey({\n        username: deviceMetadata.deviceKey,\n        password: deviceMetadata.randomPassword,\n        serverBValue,\n        salt,\n    });\n    const dateNow = getNowString();\n    const challengeResponses = {\n        USERNAME: challengeParameters?.USERNAME ?? username,\n        PASSWORD_CLAIM_SECRET_BLOCK: challengeParameters?.SECRET_BLOCK,\n        TIMESTAMP: dateNow,\n        PASSWORD_CLAIM_SIGNATURE: getSignatureString({\n            username: deviceKey,\n            userPoolName: deviceGroupKey,\n            challengeParameters,\n            dateNow,\n            hkdf,\n        }),\n        DEVICE_KEY: deviceKey,\n    };\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const jsonReqResponseChallenge = {\n        ChallengeName: 'DEVICE_PASSWORD_VERIFIER',\n        ClientId: userPoolClientId,\n        ChallengeResponses: challengeResponses,\n        Session: session,\n        ClientMetadata: clientMetadata,\n        UserContextData,\n    };\n    const respondToAuthChallenge = createRespondToAuthChallengeClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    return respondToAuthChallenge({ region: getRegionFromUserPoolId(userPoolId) }, jsonReqResponseChallenge);\n}\nexport async function handlePasswordVerifierChallenge(password, challengeParameters, clientMetadata, session, authenticationHelper, config, tokenOrchestrator) {\n    const { userPoolId, userPoolClientId, userPoolEndpoint } = config;\n    const userPoolName = userPoolId?.split('_')[1] || '';\n    const serverBValue = new BigInteger(challengeParameters?.SRP_B, 16);\n    const salt = new BigInteger(challengeParameters?.SALT, 16);\n    const username = challengeParameters?.USER_ID_FOR_SRP;\n    if (!username)\n        throw new AuthError({\n            name: 'EmptyUserIdForSRPException',\n            message: 'USER_ID_FOR_SRP was not found in challengeParameters',\n        });\n    const hkdf = await authenticationHelper.getPasswordAuthenticationKey({\n        username,\n        password,\n        serverBValue,\n        salt,\n    });\n    const dateNow = getNowString();\n    const challengeResponses = {\n        USERNAME: username,\n        PASSWORD_CLAIM_SECRET_BLOCK: challengeParameters?.SECRET_BLOCK,\n        TIMESTAMP: dateNow,\n        PASSWORD_CLAIM_SIGNATURE: getSignatureString({\n            username,\n            userPoolName,\n            challengeParameters,\n            dateNow,\n            hkdf,\n        }),\n    };\n    const deviceMetadata = await tokenOrchestrator.getDeviceMetadata(username);\n    if (deviceMetadata && deviceMetadata.deviceKey) {\n        challengeResponses.DEVICE_KEY = deviceMetadata.deviceKey;\n    }\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const jsonReqResponseChallenge = {\n        ChallengeName: 'PASSWORD_VERIFIER',\n        ChallengeResponses: challengeResponses,\n        ClientMetadata: clientMetadata,\n        Session: session,\n        ClientId: userPoolClientId,\n        UserContextData,\n    };\n    const respondToAuthChallenge = createRespondToAuthChallengeClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const response = await respondToAuthChallenge({ region: getRegionFromUserPoolId(userPoolId) }, jsonReqResponseChallenge);\n    if (response.ChallengeName === 'DEVICE_SRP_AUTH')\n        return handleDeviceSRPAuth({\n            username,\n            config,\n            clientMetadata,\n            session: response.Session,\n            tokenOrchestrator,\n        });\n    return response;\n}\nexport async function getSignInResult(params) {\n    const { challengeName, challengeParameters } = params;\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    switch (challengeName) {\n        case 'CUSTOM_CHALLENGE':\n            return {\n                isSignedIn: false,\n                nextStep: {\n                    signInStep: 'CONFIRM_SIGN_IN_WITH_CUSTOM_CHALLENGE',\n                    additionalInfo: challengeParameters,\n                },\n            };\n        case 'MFA_SETUP': {\n            const { signInSession, username } = signInStore.getState();\n            if (!isMFATypeEnabled(challengeParameters, 'TOTP'))\n                throw new AuthError({\n                    name: AuthErrorCodes.SignInException,\n                    message: `Cannot initiate MFA setup from available types: ${getMFATypes(parseMFATypes(challengeParameters.MFAS_CAN_SETUP))}`,\n                });\n            const associateSoftwareToken = createAssociateSoftwareTokenClient({\n                endpointResolver: createCognitoUserPoolEndpointResolver({\n                    endpointOverride: authConfig.userPoolEndpoint,\n                }),\n            });\n            const { Session, SecretCode: secretCode } = await associateSoftwareToken({ region: getRegionFromUserPoolId(authConfig.userPoolId) }, {\n                Session: signInSession,\n            });\n            signInStore.dispatch({\n                type: 'SET_SIGN_IN_SESSION',\n                value: Session,\n            });\n            return {\n                isSignedIn: false,\n                nextStep: {\n                    signInStep: 'CONTINUE_SIGN_IN_WITH_TOTP_SETUP',\n                    totpSetupDetails: getTOTPSetupDetails(secretCode, username),\n                },\n            };\n        }\n        case 'NEW_PASSWORD_REQUIRED':\n            return {\n                isSignedIn: false,\n                nextStep: {\n                    signInStep: 'CONFIRM_SIGN_IN_WITH_NEW_PASSWORD_REQUIRED',\n                    missingAttributes: parseAttributes(challengeParameters.requiredAttributes),\n                },\n            };\n        case 'SELECT_MFA_TYPE':\n            return {\n                isSignedIn: false,\n                nextStep: {\n                    signInStep: 'CONTINUE_SIGN_IN_WITH_MFA_SELECTION',\n                    allowedMFATypes: getMFATypes(parseMFATypes(challengeParameters.MFAS_CAN_CHOOSE)),\n                },\n            };\n        case 'SMS_MFA':\n            return {\n                isSignedIn: false,\n                nextStep: {\n                    signInStep: 'CONFIRM_SIGN_IN_WITH_SMS_CODE',\n                    codeDeliveryDetails: {\n                        deliveryMedium: challengeParameters.CODE_DELIVERY_DELIVERY_MEDIUM,\n                        destination: challengeParameters.CODE_DELIVERY_DESTINATION,\n                    },\n                },\n            };\n        case 'SOFTWARE_TOKEN_MFA':\n            return {\n                isSignedIn: false,\n                nextStep: {\n                    signInStep: 'CONFIRM_SIGN_IN_WITH_TOTP_CODE',\n                },\n            };\n        case 'ADMIN_NO_SRP_AUTH':\n            break;\n        case 'DEVICE_PASSWORD_VERIFIER':\n            break;\n        case 'DEVICE_SRP_AUTH':\n            break;\n        case 'PASSWORD_VERIFIER':\n            break;\n    }\n    // TODO: remove this error message for production apps\n    throw new AuthError({\n        name: AuthErrorCodes.SignInException,\n        message: 'An error occurred during the sign in process. ' +\n            `${challengeName} challengeName returned by the underlying service was not addressed.`,\n    });\n}\nexport function getTOTPSetupDetails(secretCode, username) {\n    return {\n        sharedSecret: secretCode,\n        getSetupUri: (appName, accountName) => {\n            const totpUri = `otpauth://totp/${appName}:${accountName ?? username}?secret=${secretCode}&issuer=${appName}`;\n            return new AmplifyUrl(totpUri);\n        },\n    };\n}\nexport function getSignInResultFromError(errorName) {\n    if (errorName === InitiateAuthException.PasswordResetRequiredException) {\n        return {\n            isSignedIn: false,\n            nextStep: { signInStep: 'RESET_PASSWORD' },\n        };\n    }\n    else if (errorName === InitiateAuthException.UserNotConfirmedException) {\n        return {\n            isSignedIn: false,\n            nextStep: { signInStep: 'CONFIRM_SIGN_UP' },\n        };\n    }\n}\nexport function parseAttributes(attributes) {\n    if (!attributes)\n        return [];\n    const parsedAttributes = JSON.parse(attributes).map(att => att.includes(USER_ATTRIBUTES) ? att.replace(USER_ATTRIBUTES, '') : att);\n    return parsedAttributes;\n}\nexport function createAttributes(attributes) {\n    if (!attributes)\n        return {};\n    const newAttributes = {};\n    Object.entries(attributes).forEach(([key, value]) => {\n        if (value)\n            newAttributes[`${USER_ATTRIBUTES}${key}`] = value;\n    });\n    return newAttributes;\n}\nexport async function handleChallengeName(username, challengeName, session, challengeResponse, config, tokenOrchestrator, clientMetadata, options) {\n    const userAttributes = options?.userAttributes;\n    const deviceName = options?.friendlyDeviceName;\n    switch (challengeName) {\n        case 'SMS_MFA':\n            return handleSMSMFAChallenge({\n                challengeResponse,\n                clientMetadata,\n                session,\n                username,\n                config,\n            });\n        case 'SELECT_MFA_TYPE':\n            return handleSelectMFATypeChallenge({\n                challengeResponse,\n                clientMetadata,\n                session,\n                username,\n                config,\n            });\n        case 'MFA_SETUP':\n            return handleMFASetupChallenge({\n                challengeResponse,\n                clientMetadata,\n                session,\n                username,\n                deviceName,\n                config,\n            });\n        case 'NEW_PASSWORD_REQUIRED':\n            return handleCompleteNewPasswordChallenge({\n                challengeResponse,\n                clientMetadata,\n                session,\n                username,\n                requiredAttributes: userAttributes,\n                config,\n            });\n        case 'CUSTOM_CHALLENGE':\n            return retryOnResourceNotFoundException(handleCustomChallenge, [\n                {\n                    challengeResponse,\n                    clientMetadata,\n                    session,\n                    username,\n                    config,\n                    tokenOrchestrator,\n                },\n            ], username, tokenOrchestrator);\n        case 'SOFTWARE_TOKEN_MFA':\n            return handleSoftwareTokenMFAChallenge({\n                challengeResponse,\n                clientMetadata,\n                session,\n                username,\n                config,\n            });\n    }\n    // TODO: remove this error message for production apps\n    throw new AuthError({\n        name: AuthErrorCodes.SignInException,\n        message: `An error occurred during the sign in process. \n\t\t${challengeName} challengeName returned by the underlying service was not addressed.`,\n    });\n}\nexport function mapMfaType(mfa) {\n    let mfaType = 'SMS_MFA';\n    if (mfa === 'TOTP')\n        mfaType = 'SOFTWARE_TOKEN_MFA';\n    return mfaType;\n}\nexport function getMFAType(type) {\n    if (type === 'SMS_MFA')\n        return 'SMS';\n    if (type === 'SOFTWARE_TOKEN_MFA')\n        return 'TOTP';\n    // TODO: log warning for unknown MFA type\n}\nexport function getMFATypes(types) {\n    if (!types)\n        return undefined;\n    return types.map(getMFAType).filter(Boolean);\n}\nexport function parseMFATypes(mfa) {\n    if (!mfa)\n        return [];\n    return JSON.parse(mfa);\n}\nexport function isMFATypeEnabled(challengeParams, mfaType) {\n    const { MFAS_CAN_SETUP } = challengeParams;\n    const mfaTypes = getMFATypes(parseMFATypes(MFAS_CAN_SETUP));\n    if (!mfaTypes)\n        return false;\n    return mfaTypes.includes(mfaType);\n}\nexport async function assertUserNotAuthenticated() {\n    let authUser;\n    try {\n        authUser = await getCurrentUser();\n    }\n    catch (error) { }\n    if (authUser && authUser.userId && authUser.username) {\n        throw new AuthError({\n            name: USER_ALREADY_AUTHENTICATED_EXCEPTION,\n            message: 'There is already a signed in user.',\n            recoverySuggestion: 'Call signOut before calling signIn again.',\n        });\n    }\n}\n/**\n * This function is used to kick off the device management flow.\n *\n * If an error is thrown while generating a hash device or calling the `ConfirmDevice`\n * client, then this API will ignore the error and return undefined. Otherwise the authentication\n * flow will not complete and the user won't be able to be signed in.\n *\n * @returns DeviceMetadata | undefined\n */\nexport async function getNewDeviceMetadata({ userPoolId, userPoolEndpoint, newDeviceMetadata, accessToken, }) {\n    if (!newDeviceMetadata)\n        return undefined;\n    const userPoolName = userPoolId.split('_')[1] || '';\n    const authenticationHelper = await getAuthenticationHelper(userPoolName);\n    const deviceKey = newDeviceMetadata?.DeviceKey;\n    const deviceGroupKey = newDeviceMetadata?.DeviceGroupKey;\n    try {\n        await authenticationHelper.generateHashDevice(deviceGroupKey ?? '', deviceKey ?? '');\n    }\n    catch (errGenHash) {\n        // TODO: log error here\n        return undefined;\n    }\n    const deviceSecretVerifierConfig = {\n        Salt: base64Encoder.convert(getBytesFromHex(authenticationHelper.getSaltToHashDevices())),\n        PasswordVerifier: base64Encoder.convert(getBytesFromHex(authenticationHelper.getVerifierDevices())),\n    };\n    const randomPassword = authenticationHelper.getRandomPassword();\n    try {\n        const confirmDevice = createConfirmDeviceClient({\n            endpointResolver: createCognitoUserPoolEndpointResolver({\n                endpointOverride: userPoolEndpoint,\n            }),\n        });\n        await confirmDevice({ region: getRegionFromUserPoolId(userPoolId) }, {\n            AccessToken: accessToken,\n            DeviceName: await getDeviceName(),\n            DeviceKey: newDeviceMetadata?.DeviceKey,\n            DeviceSecretVerifierConfig: deviceSecretVerifierConfig,\n        });\n        return {\n            deviceKey,\n            deviceGroupKey,\n            randomPassword,\n        };\n    }\n    catch (error) {\n        // TODO: log error here\n        return undefined;\n    }\n}\n/**\n * It will retry the function if the error is a `ResourceNotFoundException` and\n * will clean the device keys stored in the storage mechanism.\n *\n */\nexport async function retryOnResourceNotFoundException(func, args, username, tokenOrchestrator) {\n    try {\n        return await func(...args);\n    }\n    catch (error) {\n        if (error instanceof AuthError &&\n            error.name === 'ResourceNotFoundException' &&\n            error.message.includes('Device does not exist.')) {\n            await tokenOrchestrator.clearDeviceMetadata(username);\n            return func(...args);\n        }\n        throw error;\n    }\n}\nexport function setActiveSignInUsername(username) {\n    const { dispatch } = signInStore;\n    dispatch({ type: 'SET_USERNAME', value: username });\n}\nexport function getActiveSignInUsername(username) {\n    const state = signInStore.getState();\n    return state.username ?? username;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { assertTokenProviderConfig, deDupeAsyncFunction, decodeJWT, } from '@aws-amplify/core/internals/utils';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers';\nimport { assertAuthTokensWithRefreshToken } from '../utils/types';\nimport { AuthError } from '../../../errors/AuthError';\nimport { createInitiateAuthClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider';\nimport { createCognitoUserPoolEndpointResolver } from '../factories';\nimport { getUserContextData } from './userContextData';\nconst refreshAuthTokensFunction = async ({ tokens, authConfig, username, }) => {\n    assertTokenProviderConfig(authConfig?.Cognito);\n    const { userPoolId, userPoolClientId, userPoolEndpoint } = authConfig.Cognito;\n    const region = getRegionFromUserPoolId(userPoolId);\n    assertAuthTokensWithRefreshToken(tokens);\n    const refreshTokenString = tokens.refreshToken;\n    const AuthParameters = {\n        REFRESH_TOKEN: refreshTokenString,\n    };\n    if (tokens.deviceMetadata?.deviceKey) {\n        AuthParameters.DEVICE_KEY = tokens.deviceMetadata.deviceKey;\n    }\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const initiateAuth = createInitiateAuthClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const { AuthenticationResult } = await initiateAuth({ region }, {\n        ClientId: userPoolClientId,\n        AuthFlow: 'REFRESH_TOKEN_AUTH',\n        AuthParameters,\n        UserContextData,\n    });\n    const accessToken = decodeJWT(AuthenticationResult?.AccessToken ?? '');\n    const idToken = AuthenticationResult?.IdToken\n        ? decodeJWT(AuthenticationResult.IdToken)\n        : undefined;\n    const { iat } = accessToken.payload;\n    // This should never happen. If it does, it's a bug from the service.\n    if (!iat) {\n        throw new AuthError({\n            name: 'iatNotFoundException',\n            message: 'iat not found in access token',\n        });\n    }\n    const clockDrift = iat * 1000 - new Date().getTime();\n    return {\n        accessToken,\n        idToken,\n        clockDrift,\n        refreshToken: refreshTokenString,\n        username,\n    };\n};\nexport const refreshAuthTokens = deDupeAsyncFunction(refreshAuthTokensFunction);\nexport const refreshAuthTokensWithoutDedupe = refreshAuthTokensFunction;\n", "export const AuthTokenStorageKeys = {\n    accessToken: 'accessToken',\n    idToken: 'idToken',\n    oidcProvider: 'oidcProvider',\n    clockDrift: 'clockDrift',\n    refreshToken: 'refreshToken',\n    deviceKey: 'deviceKey',\n    randomPasswordKey: 'randomPasswordKey',\n    deviceGroupKey: 'deviceGroupKey',\n    signInDetails: 'signInDetails',\n    oauthMetadata: 'oauthMetadata',\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { createAssertionFunction, } from '@aws-amplify/core/internals/utils';\nexport var TokenProviderErrorCode;\n(function (TokenProviderErrorCode) {\n    TokenProviderErrorCode[\"InvalidAuthTokens\"] = \"InvalidAuthTokens\";\n})(TokenProviderErrorCode || (TokenProviderErrorCode = {}));\nconst tokenValidationErrorMap = {\n    [TokenProviderErrorCode.InvalidAuthTokens]: {\n        message: 'Invalid tokens.',\n        recoverySuggestion: 'Make sure the tokens are valid.',\n    },\n};\nexport const assert = createAssertionFunction(tokenValidationErrorMap);\n", "import { assertTokenProviderConfig, decodeJWT, } from '@aws-amplify/core/internals/utils';\nimport { AuthError } from '../../../errors/AuthError';\nimport { AuthTokenStorageKeys, } from './types';\nimport { TokenProviderErrorCode, assert } from './errorHelpers';\nexport class DefaultTokenStore {\n    constructor() {\n        this.name = 'CognitoIdentityServiceProvider'; // To be backwards compatible with V5, no migration needed\n    }\n    getKeyValueStorage() {\n        if (!this.keyValueStorage) {\n            throw new AuthError({\n                name: 'KeyValueStorageNotFoundException',\n                message: 'KeyValueStorage was not found in TokenStore',\n            });\n        }\n        return this.keyValueStorage;\n    }\n    setKeyValueStorage(keyValueStorage) {\n        this.keyValueStorage = keyValueStorage;\n    }\n    setAuthConfig(authConfig) {\n        this.authConfig = authConfig;\n    }\n    async loadTokens() {\n        // TODO(v6): migration logic should be here\n        // Reading V5 tokens old format\n        try {\n            const authKeys = await this.getAuthKeys();\n            const accessTokenString = await this.getKeyValueStorage().getItem(authKeys.accessToken);\n            if (!accessTokenString) {\n                throw new AuthError({\n                    name: 'NoSessionFoundException',\n                    message: 'Auth session was not found. Make sure to call signIn.',\n                });\n            }\n            const accessToken = decodeJWT(accessTokenString);\n            const itString = await this.getKeyValueStorage().getItem(authKeys.idToken);\n            const idToken = itString ? decodeJWT(itString) : undefined;\n            const refreshToken = (await this.getKeyValueStorage().getItem(authKeys.refreshToken)) ??\n                undefined;\n            const clockDriftString = (await this.getKeyValueStorage().getItem(authKeys.clockDrift)) ?? '0';\n            const clockDrift = Number.parseInt(clockDriftString);\n            const signInDetails = await this.getKeyValueStorage().getItem(authKeys.signInDetails);\n            const tokens = {\n                accessToken,\n                idToken,\n                refreshToken,\n                deviceMetadata: (await this.getDeviceMetadata()) ?? undefined,\n                clockDrift,\n                username: await this.getLastAuthUser(),\n            };\n            if (signInDetails) {\n                tokens.signInDetails = JSON.parse(signInDetails);\n            }\n            return tokens;\n        }\n        catch (err) {\n            return null;\n        }\n    }\n    async storeTokens(tokens) {\n        assert(tokens !== undefined, TokenProviderErrorCode.InvalidAuthTokens);\n        await this.clearTokens();\n        const lastAuthUser = tokens.username;\n        await this.getKeyValueStorage().setItem(this.getLastAuthUserKey(), lastAuthUser);\n        const authKeys = await this.getAuthKeys();\n        await this.getKeyValueStorage().setItem(authKeys.accessToken, tokens.accessToken.toString());\n        if (tokens.idToken) {\n            await this.getKeyValueStorage().setItem(authKeys.idToken, tokens.idToken.toString());\n        }\n        if (tokens.refreshToken) {\n            await this.getKeyValueStorage().setItem(authKeys.refreshToken, tokens.refreshToken);\n        }\n        if (tokens.deviceMetadata) {\n            if (tokens.deviceMetadata.deviceKey) {\n                await this.getKeyValueStorage().setItem(authKeys.deviceKey, tokens.deviceMetadata.deviceKey);\n            }\n            if (tokens.deviceMetadata.deviceGroupKey) {\n                await this.getKeyValueStorage().setItem(authKeys.deviceGroupKey, tokens.deviceMetadata.deviceGroupKey);\n            }\n            await this.getKeyValueStorage().setItem(authKeys.randomPasswordKey, tokens.deviceMetadata.randomPassword);\n        }\n        if (tokens.signInDetails) {\n            await this.getKeyValueStorage().setItem(authKeys.signInDetails, JSON.stringify(tokens.signInDetails));\n        }\n        await this.getKeyValueStorage().setItem(authKeys.clockDrift, `${tokens.clockDrift}`);\n    }\n    async clearTokens() {\n        const authKeys = await this.getAuthKeys();\n        // Not calling clear because it can remove data that is not managed by AuthTokenStore\n        await Promise.all([\n            this.getKeyValueStorage().removeItem(authKeys.accessToken),\n            this.getKeyValueStorage().removeItem(authKeys.idToken),\n            this.getKeyValueStorage().removeItem(authKeys.clockDrift),\n            this.getKeyValueStorage().removeItem(authKeys.refreshToken),\n            this.getKeyValueStorage().removeItem(authKeys.signInDetails),\n            this.getKeyValueStorage().removeItem(this.getLastAuthUserKey()),\n            this.getKeyValueStorage().removeItem(authKeys.oauthMetadata),\n        ]);\n    }\n    async getDeviceMetadata(username) {\n        const authKeys = await this.getAuthKeys(username);\n        const deviceKey = await this.getKeyValueStorage().getItem(authKeys.deviceKey);\n        const deviceGroupKey = await this.getKeyValueStorage().getItem(authKeys.deviceGroupKey);\n        const randomPassword = await this.getKeyValueStorage().getItem(authKeys.randomPasswordKey);\n        return randomPassword && deviceGroupKey && deviceKey\n            ? {\n                deviceKey,\n                deviceGroupKey,\n                randomPassword,\n            }\n            : null;\n    }\n    async clearDeviceMetadata(username) {\n        const authKeys = await this.getAuthKeys(username);\n        await Promise.all([\n            this.getKeyValueStorage().removeItem(authKeys.deviceKey),\n            this.getKeyValueStorage().removeItem(authKeys.deviceGroupKey),\n            this.getKeyValueStorage().removeItem(authKeys.randomPasswordKey),\n        ]);\n    }\n    async getAuthKeys(username) {\n        assertTokenProviderConfig(this.authConfig?.Cognito);\n        const lastAuthUser = username ?? (await this.getLastAuthUser());\n        return createKeysForAuthStorage(this.name, `${this.authConfig.Cognito.userPoolClientId}.${lastAuthUser}`);\n    }\n    getLastAuthUserKey() {\n        assertTokenProviderConfig(this.authConfig?.Cognito);\n        const identifier = this.authConfig.Cognito.userPoolClientId;\n        return `${this.name}.${identifier}.LastAuthUser`;\n    }\n    async getLastAuthUser() {\n        const lastAuthUser = (await this.getKeyValueStorage().getItem(this.getLastAuthUserKey())) ??\n            'username';\n        return lastAuthUser;\n    }\n    async setOAuthMetadata(metadata) {\n        const { oauthMetadata: oauthMetadataKey } = await this.getAuthKeys();\n        await this.getKeyValueStorage().setItem(oauthMetadataKey, JSON.stringify(metadata));\n    }\n    async getOAuthMetadata() {\n        const { oauthMetadata: oauthMetadataKey } = await this.getAuthKeys();\n        const oauthMetadata = await this.getKeyValueStorage().getItem(oauthMetadataKey);\n        return oauthMetadata && JSON.parse(oauthMetadata);\n    }\n}\nexport const createKeysForAuthStorage = (provider, identifier) => {\n    return getAuthStorageKeys(AuthTokenStorageKeys)(`${provider}`, identifier);\n};\nexport function getAuthStorageKeys(authKeys) {\n    const keys = Object.values({ ...authKeys });\n    return (prefix, identifier) => keys.reduce((acc, authKey) => ({\n        ...acc,\n        [authKey]: `${prefix}.${identifier}.${authKey}`,\n    }), {});\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { assertTokenProviderConfig } from '@aws-amplify/core/internals/utils';\nimport { getAuthStorageKeys } from '../tokenProvider/TokenStore';\nimport { OAuthStorageKeys } from './types';\nconst V5_HOSTED_UI_KEY = 'amplify-signin-with-hostedUI';\nconst name = 'CognitoIdentityServiceProvider';\nexport class DefaultOAuthStore {\n    constructor(keyValueStorage) {\n        this.keyValueStorage = keyValueStorage;\n    }\n    async clearOAuthInflightData() {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        await Promise.all([\n            this.keyValueStorage.removeItem(authKeys.inflightOAuth),\n            this.keyValueStorage.removeItem(authKeys.oauthPKCE),\n            this.keyValueStorage.removeItem(authKeys.oauthState),\n        ]);\n    }\n    async clearOAuthData() {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        await this.clearOAuthInflightData();\n        await this.keyValueStorage.removeItem(V5_HOSTED_UI_KEY); // remove in case a customer migrated an App from v5 to v6\n        return this.keyValueStorage.removeItem(authKeys.oauthSignIn);\n    }\n    loadOAuthState() {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        return this.keyValueStorage.getItem(authKeys.oauthState);\n    }\n    storeOAuthState(state) {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        return this.keyValueStorage.setItem(authKeys.oauthState, state);\n    }\n    loadPKCE() {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        return this.keyValueStorage.getItem(authKeys.oauthPKCE);\n    }\n    storePKCE(pkce) {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        return this.keyValueStorage.setItem(authKeys.oauthPKCE, pkce);\n    }\n    setAuthConfig(authConfigParam) {\n        this.cognitoConfig = authConfigParam;\n    }\n    async loadOAuthInFlight() {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        return ((await this.keyValueStorage.getItem(authKeys.inflightOAuth)) === 'true');\n    }\n    async storeOAuthInFlight(inflight) {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        await this.keyValueStorage.setItem(authKeys.inflightOAuth, `${inflight}`);\n    }\n    async loadOAuthSignIn() {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        const isLegacyHostedUISignIn = await this.keyValueStorage.getItem(V5_HOSTED_UI_KEY);\n        const [isOAuthSignIn, preferPrivateSession] = (await this.keyValueStorage.getItem(authKeys.oauthSignIn))?.split(',') ??\n            [];\n        return {\n            isOAuthSignIn: isOAuthSignIn === 'true' || isLegacyHostedUISignIn === 'true',\n            preferPrivateSession: preferPrivateSession === 'true',\n        };\n    }\n    async storeOAuthSignIn(oauthSignIn, preferPrivateSession = false) {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        await this.keyValueStorage.setItem(authKeys.oauthSignIn, `${oauthSignIn},${preferPrivateSession}`);\n    }\n}\nconst createKeysForAuthStorage = (provider, identifier) => {\n    return getAuthStorageKeys(OAuthStorageKeys)(provider, identifier);\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { defaultStorage } from '@aws-amplify/core';\nimport { DefaultOAuthStore } from '../signInWithRedirectStore';\nexport const oAuthStore = new DefaultOAuthStore(defaultStorage);\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst inflightPromises = [];\nexport const addInflightPromise = (resolver) => {\n    inflightPromises.push(resolver);\n};\nexport const resolveAndClearInflightPromises = () => {\n    while (inflightPromises.length) {\n        inflightPromises.pop()?.();\n    }\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Hub, } from '@aws-amplify/core';\nimport { AMPLIFY_SYMBOL, assertTokenProviderConfig, isBrowser, isTokenExpired, } from '@aws-amplify/core/internals/utils';\nimport { assertServiceError } from '../../../errors/utils/assertServiceError';\nimport { AuthError } from '../../../errors/AuthError';\nimport { oAuthStore } from '../utils/oauth/oAuthStore';\nimport { addInflightPromise } from '../utils/oauth/inflightPromise';\nexport class TokenOrchestrator {\n    constructor() {\n        this.waitForInflightOAuth = isBrowser()\n            ? async () => {\n                if (!(await oAuthStore.loadOAuthInFlight())) {\n                    return;\n                }\n                if (this.inflightPromise) {\n                    return this.inflightPromise;\n                }\n                // when there is valid oauth config and there is an inflight oauth flow, try\n                // to block async calls that require fetching tokens before the oauth flow completes\n                // e.g. getCurrentUser, fetchAuthSession etc.\n                this.inflightPromise = new Promise((resolve, _reject) => {\n                    addInflightPromise(resolve);\n                });\n                return this.inflightPromise;\n            }\n            : async () => {\n                // no-op for non-browser environments\n            };\n    }\n    setAuthConfig(authConfig) {\n        oAuthStore.setAuthConfig(authConfig.Cognito);\n        this.authConfig = authConfig;\n    }\n    setTokenRefresher(tokenRefresher) {\n        this.tokenRefresher = tokenRefresher;\n    }\n    setAuthTokenStore(tokenStore) {\n        this.tokenStore = tokenStore;\n    }\n    getTokenStore() {\n        if (!this.tokenStore) {\n            throw new AuthError({\n                name: 'EmptyTokenStoreException',\n                message: 'TokenStore not set',\n            });\n        }\n        return this.tokenStore;\n    }\n    getTokenRefresher() {\n        if (!this.tokenRefresher) {\n            throw new AuthError({\n                name: 'EmptyTokenRefresherException',\n                message: 'TokenRefresher not set',\n            });\n        }\n        return this.tokenRefresher;\n    }\n    async getTokens(options) {\n        let tokens;\n        try {\n            assertTokenProviderConfig(this.authConfig?.Cognito);\n        }\n        catch (_err) {\n            // Token provider not configured\n            return null;\n        }\n        await this.waitForInflightOAuth();\n        this.inflightPromise = undefined;\n        tokens = await this.getTokenStore().loadTokens();\n        const username = await this.getTokenStore().getLastAuthUser();\n        if (tokens === null) {\n            return null;\n        }\n        const idTokenExpired = !!tokens?.idToken &&\n            isTokenExpired({\n                expiresAt: (tokens.idToken?.payload?.exp ?? 0) * 1000,\n                clockDrift: tokens.clockDrift ?? 0,\n            });\n        const accessTokenExpired = isTokenExpired({\n            expiresAt: (tokens.accessToken?.payload?.exp ?? 0) * 1000,\n            clockDrift: tokens.clockDrift ?? 0,\n        });\n        if (options?.forceRefresh || idTokenExpired || accessTokenExpired) {\n            tokens = await this.refreshTokens({\n                tokens,\n                username,\n            });\n            if (tokens === null) {\n                return null;\n            }\n        }\n        return {\n            accessToken: tokens?.accessToken,\n            idToken: tokens?.idToken,\n            signInDetails: tokens?.signInDetails,\n        };\n    }\n    async refreshTokens({ tokens, username, }) {\n        try {\n            const { signInDetails } = tokens;\n            const newTokens = await this.getTokenRefresher()({\n                tokens,\n                authConfig: this.authConfig,\n                username,\n            });\n            newTokens.signInDetails = signInDetails;\n            await this.setTokens({ tokens: newTokens });\n            Hub.dispatch('auth', { event: 'tokenRefresh' }, 'Auth', AMPLIFY_SYMBOL);\n            return newTokens;\n        }\n        catch (err) {\n            return this.handleErrors(err);\n        }\n    }\n    handleErrors(err) {\n        assertServiceError(err);\n        if (err.message !== 'Network error') {\n            // TODO(v6): Check errors on client\n            this.clearTokens();\n        }\n        Hub.dispatch('auth', {\n            event: 'tokenRefresh_failure',\n            data: { error: err },\n        }, 'Auth', AMPLIFY_SYMBOL);\n        if (err.name.startsWith('NotAuthorizedException')) {\n            return null;\n        }\n        throw err;\n    }\n    async setTokens({ tokens }) {\n        return this.getTokenStore().storeTokens(tokens);\n    }\n    async clearTokens() {\n        return this.getTokenStore().clearTokens();\n    }\n    getDeviceMetadata(username) {\n        return this.getTokenStore().getDeviceMetadata(username);\n    }\n    clearDeviceMetadata(username) {\n        return this.getTokenStore().clearDeviceMetadata(username);\n    }\n    setOAuthMetadata(metadata) {\n        return this.getTokenStore().setOAuthMetadata(metadata);\n    }\n    getOAuthMetadata() {\n        return this.getTokenStore().getOAuthMetadata();\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { defaultStorage, } from '@aws-amplify/core';\nimport { refreshAuthTokens } from '../utils/refreshAuthTokens';\nimport { DefaultTokenStore } from './TokenStore';\nimport { TokenOrchestrator } from './TokenOrchestrator';\nexport class CognitoUserPoolsTokenProvider {\n    constructor() {\n        this.authTokenStore = new DefaultTokenStore();\n        this.authTokenStore.setKeyValueStorage(defaultStorage);\n        this.tokenOrchestrator = new TokenOrchestrator();\n        this.tokenOrchestrator.setAuthTokenStore(this.authTokenStore);\n        this.tokenOrchestrator.setTokenRefresher(refreshAuthTokens);\n    }\n    getTokens({ forceRefresh } = { forceRefresh: false }) {\n        return this.tokenOrchestrator.getTokens({ forceRefresh });\n    }\n    setKeyValueStorage(keyValueStorage) {\n        this.authTokenStore.setKeyValueStorage(keyValueStorage);\n    }\n    setAuthConfig(authConfig) {\n        this.authTokenStore.setAuthConfig(authConfig);\n        this.tokenOrchestrator.setAuthConfig(authConfig);\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { CognitoUserPoolsTokenProvider } from './CognitoUserPoolsTokenProvider';\n/**\n * The default provider for the JWT access token and ID token issued from the configured Cognito user pool. It manages\n * the refresh and storage of the tokens. It stores the tokens in `window.localStorage` if available, and falls back to\n * in-memory storage if not.\n */\nexport const cognitoUserPoolsTokenProvider = new CognitoUserPoolsTokenProvider();\nexport const { tokenOrchestrator } = cognitoUserPoolsTokenProvider;\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AmplifyError, decodeJWT } from '@aws-amplify/core/internals/utils';\nimport { tokenOrchestrator } from './tokenProvider';\nexport async function cacheCognitoTokens(AuthenticationResult) {\n    if (AuthenticationResult.AccessToken) {\n        const accessToken = decodeJWT(AuthenticationResult.AccessToken);\n        const accessTokenIssuedAtInMillis = (accessToken.payload.iat || 0) * 1000;\n        const currentTime = new Date().getTime();\n        const clockDrift = accessTokenIssuedAtInMillis > 0\n            ? accessTokenIssuedAtInMillis - currentTime\n            : 0;\n        let idToken;\n        let refreshToken;\n        let deviceMetadata;\n        if (AuthenticationResult.RefreshToken) {\n            refreshToken = AuthenticationResult.RefreshToken;\n        }\n        if (AuthenticationResult.IdToken) {\n            idToken = decodeJWT(AuthenticationResult.IdToken);\n        }\n        if (AuthenticationResult?.NewDeviceMetadata) {\n            deviceMetadata = AuthenticationResult.NewDeviceMetadata;\n        }\n        const tokens = {\n            accessToken,\n            idToken,\n            refreshToken,\n            clockDrift,\n            deviceMetadata,\n            username: AuthenticationResult.username,\n        };\n        if (AuthenticationResult?.signInDetails) {\n            tokens.signInDetails = AuthenticationResult.signInDetails;\n        }\n        await tokenOrchestrator.setTokens({\n            tokens,\n        });\n    }\n    else {\n        // This would be a service error\n        throw new AmplifyError({\n            message: 'Invalid tokens',\n            name: 'InvalidTokens',\n            recoverySuggestion: 'Check Cognito UserPool settings',\n        });\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Hub } from '@aws-amplify/core';\nimport { AMPLIFY_SYMBOL } from '@aws-amplify/core/internals/utils';\nimport { getCurrentUser } from '../apis/getCurrentUser';\nimport { UNEXPECTED_SIGN_IN_INTERRUPTION_EXCEPTION, USER_UNAUTHENTICATED_EXCEPTION, } from '../../../errors/constants';\nimport { AuthError } from '../../../errors/AuthError';\nexport const ERROR_MESSAGE = 'Unable to get user session following successful sign-in.';\nexport const dispatchSignedInHubEvent = async () => {\n    try {\n        Hub.dispatch('auth', {\n            event: 'signedIn',\n            data: await getCurrentUser(),\n        }, 'Auth', AMPLIFY_SYMBOL);\n    }\n    catch (error) {\n        if (error.name === USER_UNAUTHENTICATED_EXCEPTION) {\n            throw new AuthError({\n                name: UNEXPECTED_SIGN_IN_INTERRUPTION_EXCEPTION,\n                message: ERROR_MESSAGE,\n                recoverySuggestion: 'This most likely is due to auth tokens not being persisted. If you are using cookie store, please ensure cookies can be correctly set from your server.',\n            });\n        }\n        throw error;\n    }\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify } from '@aws-amplify/core';\nimport { assertTokenProviderConfig } from '@aws-amplify/core/internals/utils';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError';\nimport { assertServiceError } from '../../../errors/utils/assertServiceError';\nimport { getActiveSignInUsername, getNewDeviceMetadata, getSignInResult, getSignInResultFromError, handleCustomAuthFlowWithoutSRP, retryOnResourceNotFoundException, } from '../utils/signInHelpers';\nimport { cleanActiveSignInState, setActiveSignInState, } from '../utils/signInStore';\nimport { cacheCognitoTokens } from '../tokenProvider/cacheTokens';\nimport { tokenOrchestrator } from '../tokenProvider';\nimport { dispatchSignedInHubEvent } from '../utils/dispatchSignedInHubEvent';\n/**\n * Signs a user in using a custom authentication flow without password\n *\n * @param input -  The SignInWithCustomAuthInput object\n * @returns AuthSignInResult\n * @throws service: {@link InitiateAuthException } - Cognito service errors thrown during the sign-in process.\n * @throws validation: {@link AuthValidationErrorCode  } - Validation errors thrown when either username or password\n *  are not defined.\n * @throws SignInWithCustomAuthOutput - Thrown when the token provider config is invalid.\n */\nexport async function signInWithCustomAuth(input) {\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { username, password, options } = input;\n    const signInDetails = {\n        loginId: username,\n        authFlowType: 'CUSTOM_WITHOUT_SRP',\n    };\n    const metadata = options?.clientMetadata;\n    assertValidationError(!!username, AuthValidationErrorCode.EmptySignInUsername);\n    assertValidationError(!password, AuthValidationErrorCode.CustomAuthSignInPassword);\n    try {\n        const { ChallengeName: retriedChallengeName, ChallengeParameters: retiredChallengeParameters, AuthenticationResult, Session, } = await retryOnResourceNotFoundException(handleCustomAuthFlowWithoutSRP, [username, metadata, authConfig, tokenOrchestrator], username, tokenOrchestrator);\n        const activeUsername = getActiveSignInUsername(username);\n        // sets up local state used during the sign-in process\n        setActiveSignInState({\n            signInSession: Session,\n            username: activeUsername,\n            challengeName: retriedChallengeName,\n            signInDetails,\n        });\n        if (AuthenticationResult) {\n            cleanActiveSignInState();\n            await cacheCognitoTokens({\n                username: activeUsername,\n                ...AuthenticationResult,\n                NewDeviceMetadata: await getNewDeviceMetadata({\n                    userPoolId: authConfig.userPoolId,\n                    userPoolEndpoint: authConfig.userPoolEndpoint,\n                    newDeviceMetadata: AuthenticationResult.NewDeviceMetadata,\n                    accessToken: AuthenticationResult.AccessToken,\n                }),\n                signInDetails,\n            });\n            await dispatchSignedInHubEvent();\n            return {\n                isSignedIn: true,\n                nextStep: { signInStep: 'DONE' },\n            };\n        }\n        return getSignInResult({\n            challengeName: retriedChallengeName,\n            challengeParameters: retiredChallengeParameters,\n        });\n    }\n    catch (error) {\n        cleanActiveSignInState();\n        assertServiceError(error);\n        const result = getSignInResultFromError(error.name);\n        if (result)\n            return result;\n        throw error;\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify } from '@aws-amplify/core';\nimport { assertTokenProviderConfig } from '@aws-amplify/core/internals/utils';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError';\nimport { assertServiceError } from '../../../errors/utils/assertServiceError';\nimport { getActiveSignInUsername, getNewDeviceMetadata, getSignInResult, getSignInResultFromError, handleCustomSRPAuthFlow, } from '../utils/signInHelpers';\nimport { cleanActiveSignInState, setActiveSignInState, } from '../utils/signInStore';\nimport { cacheCognitoTokens } from '../tokenProvider/cacheTokens';\nimport { tokenOrchestrator } from '../tokenProvider';\nimport { dispatchSignedInHubEvent } from '../utils/dispatchSignedInHubEvent';\n/**\n * Signs a user in using a custom authentication flow with SRP\n *\n * @param input -  The SignInWithCustomSRPAuthInput object\n * @returns SignInWithCustomSRPAuthOutput\n * @throws service: {@link InitiateAuthException }, {@link RespondToAuthChallengeException } - Cognito\n * service errors thrown during the sign-in process.\n * @throws validation: {@link AuthValidationErrorCode  } - Validation errors thrown when either username or password\n *  are not defined.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nexport async function signInWithCustomSRPAuth(input) {\n    const { username, password, options } = input;\n    const signInDetails = {\n        loginId: username,\n        authFlowType: 'CUSTOM_WITH_SRP',\n    };\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const metadata = options?.clientMetadata;\n    assertValidationError(!!username, AuthValidationErrorCode.EmptySignInUsername);\n    assertValidationError(!!password, AuthValidationErrorCode.EmptySignInPassword);\n    try {\n        const { ChallengeName: handledChallengeName, ChallengeParameters: handledChallengeParameters, AuthenticationResult, Session, } = await handleCustomSRPAuthFlow(username, password, metadata, authConfig, tokenOrchestrator);\n        const activeUsername = getActiveSignInUsername(username);\n        // sets up local state used during the sign-in process\n        setActiveSignInState({\n            signInSession: Session,\n            username: activeUsername,\n            challengeName: handledChallengeName,\n            signInDetails,\n        });\n        if (AuthenticationResult) {\n            await cacheCognitoTokens({\n                username: activeUsername,\n                ...AuthenticationResult,\n                NewDeviceMetadata: await getNewDeviceMetadata({\n                    userPoolId: authConfig.userPoolId,\n                    userPoolEndpoint: authConfig.userPoolEndpoint,\n                    newDeviceMetadata: AuthenticationResult.NewDeviceMetadata,\n                    accessToken: AuthenticationResult.AccessToken,\n                }),\n                signInDetails,\n            });\n            cleanActiveSignInState();\n            await dispatchSignedInHubEvent();\n            return {\n                isSignedIn: true,\n                nextStep: { signInStep: 'DONE' },\n            };\n        }\n        return getSignInResult({\n            challengeName: handledChallengeName,\n            challengeParameters: handledChallengeParameters,\n        });\n    }\n    catch (error) {\n        cleanActiveSignInState();\n        assertServiceError(error);\n        const result = getSignInResultFromError(error.name);\n        if (result)\n            return result;\n        throw error;\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify } from '@aws-amplify/core';\nimport { assertTokenProviderConfig } from '@aws-amplify/core/internals/utils';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError';\nimport { assertServiceError } from '../../../errors/utils/assertServiceError';\nimport { getActiveSignInUsername, getNewDeviceMetadata, getSignInResult, getSignInResultFromError, handleUserSRPAuthFlow, } from '../utils/signInHelpers';\nimport { cleanActiveSignInState, setActiveSignInState, } from '../utils/signInStore';\nimport { cacheCognitoTokens } from '../tokenProvider/cacheTokens';\nimport { tokenOrchestrator } from '../tokenProvider';\nimport { dispatchSignedInHubEvent } from '../utils/dispatchSignedInHubEvent';\n/**\n * Signs a user in\n *\n * @param input - The SignInWithSRPInput object\n * @returns SignInWithSRPOutput\n * @throws service: {@link InitiateAuthException }, {@link RespondToAuthChallengeException } - Cognito service errors\n * thrown during the sign-in process.\n * @throws validation: {@link AuthValidationErrorCode  } - Validation errors thrown when either username or password\n *  are not defined.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nexport async function signInWithSRP(input) {\n    const { username, password } = input;\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    const signInDetails = {\n        loginId: username,\n        authFlowType: 'USER_SRP_AUTH',\n    };\n    assertTokenProviderConfig(authConfig);\n    const clientMetaData = input.options?.clientMetadata;\n    assertValidationError(!!username, AuthValidationErrorCode.EmptySignInUsername);\n    assertValidationError(!!password, AuthValidationErrorCode.EmptySignInPassword);\n    try {\n        const { ChallengeName: handledChallengeName, ChallengeParameters: handledChallengeParameters, AuthenticationResult, Session, } = await handleUserSRPAuthFlow(username, password, clientMetaData, authConfig, tokenOrchestrator);\n        const activeUsername = getActiveSignInUsername(username);\n        // sets up local state used during the sign-in process\n        setActiveSignInState({\n            signInSession: Session,\n            username: activeUsername,\n            challengeName: handledChallengeName,\n            signInDetails,\n        });\n        if (AuthenticationResult) {\n            cleanActiveSignInState();\n            await cacheCognitoTokens({\n                username: activeUsername,\n                ...AuthenticationResult,\n                NewDeviceMetadata: await getNewDeviceMetadata({\n                    userPoolId: authConfig.userPoolId,\n                    userPoolEndpoint: authConfig.userPoolEndpoint,\n                    newDeviceMetadata: AuthenticationResult.NewDeviceMetadata,\n                    accessToken: AuthenticationResult.AccessToken,\n                }),\n                signInDetails,\n            });\n            await dispatchSignedInHubEvent();\n            return {\n                isSignedIn: true,\n                nextStep: { signInStep: 'DONE' },\n            };\n        }\n        return getSignInResult({\n            challengeName: handledChallengeName,\n            challengeParameters: handledChallengeParameters,\n        });\n    }\n    catch (error) {\n        cleanActiveSignInState();\n        assertServiceError(error);\n        const result = getSignInResultFromError(error.name);\n        if (result)\n            return result;\n        throw error;\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify } from '@aws-amplify/core';\nimport { assertTokenProviderConfig } from '@aws-amplify/core/internals/utils';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation';\nimport { assertServiceError } from '../../../errors/utils/assertServiceError';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError';\nimport { getActiveSignInUsername, getNewDeviceMetadata, getSignInResult, getSignInResultFromError, handleUserPasswordAuthFlow, retryOnResourceNotFoundException, } from '../utils/signInHelpers';\nimport { cleanActiveSignInState, setActiveSignInState, } from '../utils/signInStore';\nimport { cacheCognitoTokens } from '../tokenProvider/cacheTokens';\nimport { tokenOrchestrator } from '../tokenProvider';\nimport { dispatchSignedInHubEvent } from '../utils/dispatchSignedInHubEvent';\n/**\n * Signs a user in using USER_PASSWORD_AUTH AuthFlowType\n *\n * @param input - The SignInWithUserPasswordInput object\n * @returns SignInWithUserPasswordOutput\n * @throws service: {@link InitiateAuthException } - Cognito service error thrown during the sign-in process.\n * @throws validation: {@link AuthValidationErrorCode  } - Validation errors thrown when either username or password\n *  are not defined.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nexport async function signInWithUserPassword(input) {\n    const { username, password, options } = input;\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    const signInDetails = {\n        loginId: username,\n        authFlowType: 'USER_PASSWORD_AUTH',\n    };\n    assertTokenProviderConfig(authConfig);\n    const metadata = options?.clientMetadata;\n    assertValidationError(!!username, AuthValidationErrorCode.EmptySignInUsername);\n    assertValidationError(!!password, AuthValidationErrorCode.EmptySignInPassword);\n    try {\n        const { ChallengeName: retiredChallengeName, ChallengeParameters: retriedChallengeParameters, AuthenticationResult, Session, } = await retryOnResourceNotFoundException(handleUserPasswordAuthFlow, [username, password, metadata, authConfig, tokenOrchestrator], username, tokenOrchestrator);\n        const activeUsername = getActiveSignInUsername(username);\n        // sets up local state used during the sign-in process\n        setActiveSignInState({\n            signInSession: Session,\n            username: activeUsername,\n            challengeName: retiredChallengeName,\n            signInDetails,\n        });\n        if (AuthenticationResult) {\n            await cacheCognitoTokens({\n                ...AuthenticationResult,\n                username: activeUsername,\n                NewDeviceMetadata: await getNewDeviceMetadata({\n                    userPoolId: authConfig.userPoolId,\n                    userPoolEndpoint: authConfig.userPoolEndpoint,\n                    newDeviceMetadata: AuthenticationResult.NewDeviceMetadata,\n                    accessToken: AuthenticationResult.AccessToken,\n                }),\n                signInDetails,\n            });\n            cleanActiveSignInState();\n            await dispatchSignedInHubEvent();\n            return {\n                isSignedIn: true,\n                nextStep: { signInStep: 'DONE' },\n            };\n        }\n        return getSignInResult({\n            challengeName: retiredChallengeName,\n            challengeParameters: retriedChallengeParameters,\n        });\n    }\n    catch (error) {\n        cleanActiveSignInState();\n        assertServiceError(error);\n        const result = getSignInResultFromError(error.name);\n        if (result)\n            return result;\n        throw error;\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { assertUserNotAuthenticated } from '../utils/signInHelpers';\nimport { signInWithCustomAuth } from './signInWithCustomAuth';\nimport { signInWithCustomSRPAuth } from './signInWithCustomSRPAuth';\nimport { signInWithSRP } from './signInWithSRP';\nimport { signInWithUserPassword } from './signInWithUserPassword';\n/**\n * Signs a user in\n *\n * @param input -  The SignInInput object\n * @returns SignInOutput\n * @throws service: {@link InitiateAuthException }, {@link RespondToAuthChallengeException }\n *  - Cognito service errors thrown during the sign-in process.\n * @throws validation: {@link AuthValidationErrorCode  } - Validation errors thrown when either username or password\n *  are not defined.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nexport async function signIn(input) {\n    const authFlowType = input.options?.authFlowType;\n    await assertUserNotAuthenticated();\n    switch (authFlowType) {\n        case 'USER_SRP_AUTH':\n            return signInWithSRP(input);\n        case 'USER_PASSWORD_AUTH':\n            return signInWithUserPassword(input);\n        case 'CUSTOM_WITHOUT_SRP':\n            return signInWithCustomAuth(input);\n        case 'CUSTOM_WITH_SRP':\n            return signInWithCustomSRPAuth(input);\n        default:\n            return signInWithSRP(input);\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AuthError } from '../../../errors/AuthError';\nimport { AUTO_SIGN_IN_EXCEPTION } from '../../../errors/constants';\nconst initialAutoSignIn = async () => {\n    throw new AuthError({\n        name: AUTO_SIGN_IN_EXCEPTION,\n        message: 'The autoSignIn flow has not started, or has been cancelled/completed.',\n        recoverySuggestion: 'Please try to use the signIn API or log out before starting a new autoSignIn flow.',\n    });\n};\n/**\n * Signs a user in automatically after finishing the sign-up process.\n *\n * This API will automatically sign a user in if the autoSignIn flow has been completed in the following cases:\n * - User confirmed their account with a verification code sent to their phone or email (default option).\n * - User confirmed their account with a verification link sent to their phone or email. In order to\n * enable this option you need to go to the Amazon Cognito [console](https://aws.amazon.com/pm/cognito),\n * look for your userpool, then go to the `Messaging` tab and enable `link` mode inside the `Verification message` option.\n * Finally you need to define the `signUpVerificationMethod` in your `Auth` config.\n *\n * @example\n * ```typescript\n *  Amplify.configure({\n *    Auth: {\n *     Cognito: {\n *    ...cognitoConfig,\n *    signUpVerificationMethod: \"link\" // the default value is \"code\"\n *   }\n *\t}});\n * ```\n *\n * @throws AutoSignInException - Thrown when the autoSignIn flow has not started, or has been cancelled/completed.\n * @returns The signInOutput.\n *\n * @example\n * ```typescript\n *  // handleSignUp.ts\n * async function handleSignUp(\n *   username:string,\n *   password:string\n * ){\n *   try {\n *     const { nextStep } = await signUp({\n *       username,\n *       password,\n *       options: {\n *         userAttributes:{ email:'email@email.com'},\n *         autoSignIn: true // This enables the auto sign-in flow.\n *       },\n *     });\n *\n *     handleSignUpStep(nextStep);\n *\n *   } catch (error) {\n *     console.log(error);\n *   }\n * }\n *\n * // handleConfirmSignUp.ts\n * async function handleConfirmSignUp(username:string, confirmationCode:string) {\n *   try {\n *     const { nextStep } = await confirmSignUp({\n *       username,\n *       confirmationCode,\n *     });\n *\n *     handleSignUpStep(nextStep);\n *   } catch (error) {\n *     console.log(error);\n *   }\n * }\n *\n * // signUpUtils.ts\n * async function handleSignUpStep( step: SignUpOutput[\"nextStep\"]) {\n * switch (step.signUpStep) {\n *   case \"CONFIRM_SIGN_UP\":\n *\n *    // Redirect end-user to confirm-sign up screen.\n *\n *   case \"COMPLETE_AUTO_SIGN_IN\":\n *\t   const codeDeliveryDetails = step.codeDeliveryDetails;\n *     if (codeDeliveryDetails) {\n *      // Redirect user to confirm-sign-up with link screen.\n *     }\n *     const signInOutput = await autoSignIn();\n *   // handle sign-in steps\n * }\n *\n * ```\n */\n// TODO(Eslint): can this be refactored not using `let` on exported member?\n// eslint-disable-next-line import/no-mutable-exports\nexport let autoSignIn = initialAutoSignIn;\n/**\n * Sets the context of autoSignIn at run time.\n * @internal\n */\nexport function setAutoSignIn(callback) {\n    autoSignIn = callback;\n}\n/**\n * Resets the context\n *\n * @internal\n */\nexport function resetAutoSignIn() {\n    autoSignIn = initialAutoSignIn;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Transforms a user attributes object into an array of AttributeType objects.\n * @param attributes user attributes to be mapped to AttributeType objects.\n * @returns an array of AttributeType objects.\n */\nexport function toAttributeType(attributes) {\n    return Object.entries(attributes).map(([key, value]) => ({\n        Name: key,\n        Value: value,\n    }));\n}\n/**\n * Transforms an array of AttributeType objects into a user attributes object.\n *\n * @param attributes - an array of AttributeType objects.\n * @returns AuthUserAttributes object.\n */\nexport function toAuthUserAttribute(attributes) {\n    const userAttributes = {};\n    attributes?.forEach(attribute => {\n        if (attribute.Name)\n            userAttributes[attribute.Name] = attribute.Value;\n    });\n    return userAttributes;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { HubInternal } from '@aws-amplify/core/internals/utils';\nimport { signIn } from '../apis/signIn';\nimport { AuthError } from '../../../errors/AuthError';\nimport { resetAutoSignIn, setAutoSignIn } from '../apis/autoSignIn';\nimport { AUTO_SIGN_IN_EXCEPTION } from '../../../errors/constants';\nconst MAX_AUTOSIGNIN_POLLING_MS = 3 * 60 * 1000;\nexport function handleCodeAutoSignIn(signInInput) {\n    const stopHubListener = HubInternal.listen('auth-internal', async ({ payload }) => {\n        switch (payload.event) {\n            case 'confirmSignUp': {\n                const response = payload.data;\n                if (response?.isSignUpComplete) {\n                    HubInternal.dispatch('auth-internal', {\n                        event: 'autoSignIn',\n                    });\n                    setAutoSignIn(autoSignInWithCode(signInInput));\n                    stopHubListener();\n                }\n            }\n        }\n    });\n    // This will stop the listener if confirmSignUp is not resolved.\n    const timeOutId = setTimeout(() => {\n        stopHubListener();\n        setAutoSignInStarted(false);\n        clearTimeout(timeOutId);\n        resetAutoSignIn();\n    }, MAX_AUTOSIGNIN_POLLING_MS);\n}\nfunction debounce(fun, delay) {\n    let timer;\n    return (args) => {\n        if (!timer) {\n            fun(...args);\n        }\n        clearTimeout(timer);\n        timer = setTimeout(() => {\n            timer = undefined;\n        }, delay);\n    };\n}\nfunction handleAutoSignInWithLink(signInInput, resolve, reject) {\n    const start = Date.now();\n    const autoSignInPollingIntervalId = setInterval(async () => {\n        const elapsedTime = Date.now() - start;\n        const maxTime = MAX_AUTOSIGNIN_POLLING_MS;\n        if (elapsedTime > maxTime) {\n            clearInterval(autoSignInPollingIntervalId);\n            setAutoSignInStarted(false);\n            reject(new AuthError({\n                name: AUTO_SIGN_IN_EXCEPTION,\n                message: 'The account was not confirmed on time.',\n                recoverySuggestion: 'Try to verify your account by clicking the link sent your email or phone and then login manually.',\n            }));\n            resetAutoSignIn();\n        }\n        else {\n            try {\n                const signInOutput = await signIn(signInInput);\n                if (signInOutput.nextStep.signInStep !== 'CONFIRM_SIGN_UP') {\n                    resolve(signInOutput);\n                    clearInterval(autoSignInPollingIntervalId);\n                    setAutoSignInStarted(false);\n                    resetAutoSignIn();\n                }\n            }\n            catch (error) {\n                clearInterval(autoSignInPollingIntervalId);\n                setAutoSignInStarted(false);\n                reject(error);\n                resetAutoSignIn();\n            }\n        }\n    }, 5000);\n}\nconst debouncedAutoSignInWithLink = debounce(handleAutoSignInWithLink, 300);\nconst debouncedAutoSignWithCodeOrUserConfirmed = debounce(handleAutoSignInWithCodeOrUserConfirmed, 300);\nlet autoSignInStarted = false;\nlet usernameUsedForAutoSignIn;\nexport function setUsernameUsedForAutoSignIn(username) {\n    usernameUsedForAutoSignIn = username;\n}\nexport function isAutoSignInUserUsingConfirmSignUp(username) {\n    return usernameUsedForAutoSignIn === username;\n}\nexport function isAutoSignInStarted() {\n    return autoSignInStarted;\n}\nexport function setAutoSignInStarted(value) {\n    if (value === false) {\n        setUsernameUsedForAutoSignIn(undefined);\n    }\n    autoSignInStarted = value;\n}\nexport function isSignUpComplete(output) {\n    return !!output.UserConfirmed;\n}\nexport function autoSignInWhenUserIsConfirmedWithLink(signInInput) {\n    return async () => {\n        return new Promise((resolve, reject) => {\n            debouncedAutoSignInWithLink([signInInput, resolve, reject]);\n        });\n    };\n}\nasync function handleAutoSignInWithCodeOrUserConfirmed(signInInput, resolve, reject) {\n    try {\n        const output = await signIn(signInInput);\n        resolve(output);\n        resetAutoSignIn();\n    }\n    catch (error) {\n        reject(error);\n        resetAutoSignIn();\n    }\n}\nfunction autoSignInWithCode(signInInput) {\n    return async () => {\n        return new Promise((resolve, reject) => {\n            debouncedAutoSignWithCodeOrUserConfirmed([signInInput, resolve, reject]);\n        });\n    };\n}\nexport const autoSignInUserConfirmed = autoSignInWithCode;\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants';\nimport { cognitoUserPoolTransferHandler } from './shared/handler';\nimport { createUserPoolDeserializer, createUserPoolSerializer, } from './shared/serde';\nexport const createSignUpClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('SignUp'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify } from '@aws-amplify/core';\nimport { AuthAction, assertTokenProviderConfig, } from '@aws-amplify/core/internals/utils';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers';\nimport { toAttributeType } from '../utils/apiHelpers';\nimport { autoSignInUserConfirmed, autoSignInWhenUserIsConfirmedWithLink, handleCodeAutoSignIn, isAutoSignInStarted, isSignUpComplete, setAutoSignInStarted, setUsernameUsedForAutoSignIn, } from '../utils/signUpHelpers';\nimport { getUserContextData } from '../utils/userContextData';\nimport { getAuthUserAgentValue } from '../../../utils';\nimport { createSignUpClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider';\nimport { createCognitoUserPoolEndpointResolver } from '../factories';\nimport { setAutoSignIn } from './autoSignIn';\n/**\n * Creates a user\n *\n * @param input - The SignUpInput object\n * @returns SignUpOutput\n * @throws service: {@link SignUpException } - Cognito service errors thrown during the sign-up process.\n * @throws validation: {@link AuthValidationErrorCode } - Validation errors thrown either username or password\n *  are not defined.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nexport async function signUp(input) {\n    const { username, password, options } = input;\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    const signUpVerificationMethod = authConfig?.signUpVerificationMethod ?? 'code';\n    const { clientMetadata, validationData, autoSignIn } = input.options ?? {};\n    assertTokenProviderConfig(authConfig);\n    assertValidationError(!!username, AuthValidationErrorCode.EmptySignUpUsername);\n    assertValidationError(!!password, AuthValidationErrorCode.EmptySignUpPassword);\n    const signInServiceOptions = typeof autoSignIn !== 'boolean' ? autoSignIn : undefined;\n    const signInInput = {\n        username,\n        options: signInServiceOptions,\n    };\n    // if the authFlowType is 'CUSTOM_WITHOUT_SRP' then we don't include the password\n    if (signInServiceOptions?.authFlowType !== 'CUSTOM_WITHOUT_SRP') {\n        signInInput.password = password;\n    }\n    if (signInServiceOptions || autoSignIn === true) {\n        setUsernameUsedForAutoSignIn(username);\n        setAutoSignInStarted(true);\n    }\n    const { userPoolId, userPoolClientId, userPoolEndpoint } = authConfig;\n    const signUpClient = createSignUpClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const clientOutput = await signUpClient({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.SignUp),\n    }, {\n        Username: username,\n        Password: password,\n        UserAttributes: options?.userAttributes && toAttributeType(options?.userAttributes),\n        ClientMetadata: clientMetadata,\n        ValidationData: validationData && toAttributeType(validationData),\n        ClientId: userPoolClientId,\n        UserContextData: getUserContextData({\n            username,\n            userPoolId,\n            userPoolClientId,\n        }),\n    });\n    const { UserSub, CodeDeliveryDetails } = clientOutput;\n    if (isSignUpComplete(clientOutput) && isAutoSignInStarted()) {\n        setAutoSignIn(autoSignInUserConfirmed(signInInput));\n        return {\n            isSignUpComplete: true,\n            nextStep: {\n                signUpStep: 'COMPLETE_AUTO_SIGN_IN',\n            },\n            userId: UserSub,\n        };\n    }\n    else if (isSignUpComplete(clientOutput) && !isAutoSignInStarted()) {\n        return {\n            isSignUpComplete: true,\n            nextStep: {\n                signUpStep: 'DONE',\n            },\n            userId: UserSub,\n        };\n    }\n    else if (!isSignUpComplete(clientOutput) &&\n        isAutoSignInStarted() &&\n        signUpVerificationMethod === 'code') {\n        handleCodeAutoSignIn(signInInput);\n    }\n    else if (!isSignUpComplete(clientOutput) &&\n        isAutoSignInStarted() &&\n        signUpVerificationMethod === 'link') {\n        setAutoSignIn(autoSignInWhenUserIsConfirmedWithLink(signInInput));\n        return {\n            isSignUpComplete: false,\n            nextStep: {\n                signUpStep: 'COMPLETE_AUTO_SIGN_IN',\n                codeDeliveryDetails: {\n                    deliveryMedium: CodeDeliveryDetails?.DeliveryMedium,\n                    destination: CodeDeliveryDetails?.Destination,\n                    attributeName: CodeDeliveryDetails?.AttributeName,\n                },\n            },\n            userId: UserSub,\n        };\n    }\n    return {\n        isSignUpComplete: false,\n        nextStep: {\n            signUpStep: 'CONFIRM_SIGN_UP',\n            codeDeliveryDetails: {\n                deliveryMedium: CodeDeliveryDetails?.DeliveryMedium,\n                destination: CodeDeliveryDetails?.Destination,\n                attributeName: CodeDeliveryDetails?.AttributeName,\n            },\n        },\n        userId: UserSub,\n    };\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler';\nimport { createUserPoolDeserializer, createUserPoolSerializer, } from './shared/serde';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants';\nexport const createForgotPasswordClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('ForgotPassword'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify } from '@aws-amplify/core';\nimport { AuthAction, assertTokenProviderConfig, } from '@aws-amplify/core/internals/utils';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers';\nimport { getAuthUserAgentValue } from '../../../utils';\nimport { getUserContextData } from '../utils/userContextData';\nimport { createForgotPasswordClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider';\nimport { createCognitoUserPoolEndpointResolver } from '../factories';\n/**\n * Resets a user's password.\n *\n * @param input -  The ResetPasswordInput object.\n * @returns ResetPasswordOutput\n * @throws -{@link ForgotPasswordException }\n * Thrown due to an invalid confirmation code or password.\n * @throws -{@link AuthValidationErrorCode }\n * Thrown due to an empty username.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n **/\nexport async function resetPassword(input) {\n    const { username } = input;\n    assertValidationError(!!username, AuthValidationErrorCode.EmptyResetPasswordUsername);\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { userPoolClientId, userPoolId, userPoolEndpoint } = authConfig;\n    const clientMetadata = input.options?.clientMetadata;\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const forgotPassword = createForgotPasswordClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const res = await forgotPassword({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.ResetPassword),\n    }, {\n        Username: username,\n        ClientMetadata: clientMetadata,\n        ClientId: userPoolClientId,\n        UserContextData,\n    });\n    const codeDeliveryDetails = res.CodeDeliveryDetails;\n    return {\n        isPasswordReset: false,\n        nextStep: {\n            resetPasswordStep: 'CONFIRM_RESET_PASSWORD_WITH_CODE',\n            codeDeliveryDetails: {\n                deliveryMedium: codeDeliveryDetails?.DeliveryMedium,\n                destination: codeDeliveryDetails?.Destination,\n                attributeName: codeDeliveryDetails?.AttributeName,\n            },\n        },\n    };\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler';\nimport { createUserPoolDeserializer, createUserPoolSerializer, } from './shared/serde';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants';\nexport const createConfirmForgotPasswordClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('ConfirmForgotPassword'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify } from '@aws-amplify/core';\nimport { AuthAction, assertTokenProviderConfig, } from '@aws-amplify/core/internals/utils';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError';\nimport { getAuthUserAgentValue } from '../../../utils';\nimport { getUserContextData } from '../utils/userContextData';\nimport { createConfirmForgotPasswordClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider';\nimport { createCognitoUserPoolEndpointResolver } from '../factories';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers';\n/**\n * Confirms the new password and verification code to reset the password.\n *\n * @param input -  The ConfirmResetPasswordInput object.\n * @throws -{@link ConfirmForgotPasswordException }\n * Thrown due to an invalid confirmation code or password.\n * @throws -{@link AuthValidationErrorCode }\n * Thrown due to an empty confirmation code, password or username.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nexport async function confirmResetPassword(input) {\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { userPoolClientId, userPoolId, userPoolEndpoint } = authConfig;\n    const { username, newPassword } = input;\n    assertValidationError(!!username, AuthValidationErrorCode.EmptyConfirmResetPasswordUsername);\n    assertValidationError(!!newPassword, AuthValidationErrorCode.EmptyConfirmResetPasswordNewPassword);\n    const code = input.confirmationCode;\n    assertValidationError(!!code, AuthValidationErrorCode.EmptyConfirmResetPasswordConfirmationCode);\n    const metadata = input.options?.clientMetadata;\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const confirmForgotPassword = createConfirmForgotPasswordClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    await confirmForgotPassword({\n        region: getRegionFromUserPoolId(authConfig.userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmResetPassword),\n    }, {\n        Username: username,\n        ConfirmationCode: code,\n        Password: newPassword,\n        ClientMetadata: metadata,\n        ClientId: authConfig.userPoolClientId,\n        UserContextData,\n    });\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler';\nimport { createUserPoolDeserializer, createUserPoolSerializer, } from './shared/serde';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants';\nexport const createResendConfirmationCodeClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('ResendConfirmationCode'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify } from '@aws-amplify/core';\nimport { AuthAction, assertTokenProviderConfig, } from '@aws-amplify/core/internals/utils';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers';\nimport { getAuthUserAgentValue } from '../../../utils';\nimport { getUserContextData } from '../utils/userContextData';\nimport { createResendConfirmationCodeClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider';\nimport { createCognitoUserPoolEndpointResolver } from '../factories';\n/**\n * Resend the confirmation code while signing up\n *\n * @param input -  The ResendSignUpCodeInput object\n * @returns ResendSignUpCodeOutput\n * @throws service: {@link ResendConfirmationException } - Cognito service errors thrown when resending the code.\n * @throws validation: {@link AuthValidationErrorCode } - Validation errors thrown either username are not defined.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nexport async function resendSignUpCode(input) {\n    const { username } = input;\n    assertValidationError(!!username, AuthValidationErrorCode.EmptySignUpUsername);\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { userPoolClientId, userPoolId, userPoolEndpoint } = authConfig;\n    const clientMetadata = input.options?.clientMetadata;\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const resendConfirmationCode = createResendConfirmationCodeClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const { CodeDeliveryDetails } = await resendConfirmationCode({\n        region: getRegionFromUserPoolId(authConfig.userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.ResendSignUpCode),\n    }, {\n        Username: username,\n        ClientMetadata: clientMetadata,\n        ClientId: authConfig.userPoolClientId,\n        UserContextData,\n    });\n    const { DeliveryMedium, AttributeName, Destination } = {\n        ...CodeDeliveryDetails,\n    };\n    return {\n        destination: Destination,\n        deliveryMedium: DeliveryMedium,\n        attributeName: AttributeName\n            ? AttributeName\n            : undefined,\n    };\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants';\nimport { cognitoUserPoolTransferHandler } from './shared/handler';\nimport { createUserPoolDeserializer, createUserPoolSerializer, } from './shared/serde';\nexport const createConfirmSignUpClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('ConfirmSignUp'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify } from '@aws-amplify/core';\nimport { AuthAction, HubInternal, assertTokenProviderConfig, } from '@aws-amplify/core/internals/utils';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers';\nimport { isAutoSignInStarted, isAutoSignInUserUsingConfirmSignUp, setAutoSignInStarted, } from '../utils/signUpHelpers';\nimport { getAuthUserAgentValue } from '../../../utils';\nimport { getUserContextData } from '../utils/userContextData';\nimport { createConfirmSignUpClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider';\nimport { createCognitoUserPoolEndpointResolver } from '../factories';\n/**\n * Confirms a new user account.\n *\n * @param input -  The ConfirmSignUpInput object.\n * @returns ConfirmSignUpOutput\n * @throws -{@link ConfirmSignUpException }\n * Thrown due to an invalid confirmation code.\n * @throws -{@link AuthValidationErrorCode }\n * Thrown due to an empty confirmation code\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nexport async function confirmSignUp(input) {\n    const { username, confirmationCode, options } = input;\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { userPoolId, userPoolClientId, userPoolEndpoint } = authConfig;\n    const clientMetadata = options?.clientMetadata;\n    assertValidationError(!!username, AuthValidationErrorCode.EmptyConfirmSignUpUsername);\n    assertValidationError(!!confirmationCode, AuthValidationErrorCode.EmptyConfirmSignUpCode);\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const confirmSignUpClient = createConfirmSignUpClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    await confirmSignUpClient({\n        region: getRegionFromUserPoolId(authConfig.userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmSignUp),\n    }, {\n        Username: username,\n        ConfirmationCode: confirmationCode,\n        ClientMetadata: clientMetadata,\n        ForceAliasCreation: options?.forceAliasCreation,\n        ClientId: authConfig.userPoolClientId,\n        UserContextData,\n    });\n    return new Promise((resolve, reject) => {\n        try {\n            const signUpOut = {\n                isSignUpComplete: true,\n                nextStep: {\n                    signUpStep: 'DONE',\n                },\n            };\n            if (!isAutoSignInStarted() ||\n                !isAutoSignInUserUsingConfirmSignUp(username)) {\n                resolve(signUpOut);\n                return;\n            }\n            const stopListener = HubInternal.listen('auth-internal', ({ payload }) => {\n                switch (payload.event) {\n                    case 'autoSignIn':\n                        resolve({\n                            isSignUpComplete: true,\n                            nextStep: {\n                                signUpStep: 'COMPLETE_AUTO_SIGN_IN',\n                            },\n                        });\n                        setAutoSignInStarted(false);\n                        stopListener();\n                }\n            });\n            HubInternal.dispatch('auth-internal', {\n                event: 'confirmSignUp',\n                data: signUpOut,\n            });\n        }\n        catch (error) {\n            reject(error);\n        }\n    });\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify } from '@aws-amplify/core';\nimport { assertTokenProviderConfig } from '@aws-amplify/core/internals/utils';\nimport { cleanActiveSignInState, setActiveSignInState, signInStore, } from '../utils/signInStore';\nimport { AuthError } from '../../../errors/AuthError';\nimport { getNewDeviceMetadata, getSignInResult, getSignInResultFromError, handleChallengeName, } from '../utils/signInHelpers';\nimport { assertServiceError } from '../../../errors/utils/assertServiceError';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation';\nimport { AuthErrorCodes } from '../../../common/AuthErrorStrings';\nimport { cacheCognitoTokens } from '../tokenProvider/cacheTokens';\nimport { tokenOrchestrator } from '../tokenProvider';\nimport { dispatchSignedInHubEvent } from '../utils/dispatchSignedInHubEvent';\n/**\n * Continues or completes the sign in process when required by the initial call to `signIn`.\n *\n * @param input -  The ConfirmSignInInput object\n * @returns ConfirmSignInOutput\n * @throws  -{@link VerifySoftwareTokenException }:\n * Thrown due to an invalid MFA token.\n * @throws  -{@link RespondToAuthChallengeException }:\n * Thrown due to an invalid auth challenge response.\n * @throws  -{@link AssociateSoftwareTokenException}:\n * Thrown due to a service error during the MFA setup process.\n * @throws  -{@link AuthValidationErrorCode }:\n * Thrown when `challengeResponse` is not defined.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nexport async function confirmSignIn(input) {\n    const { challengeResponse, options } = input;\n    const { username, challengeName, signInSession, signInDetails } = signInStore.getState();\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const clientMetaData = options?.clientMetadata;\n    assertValidationError(!!challengeResponse, AuthValidationErrorCode.EmptyChallengeResponse);\n    if (!username || !challengeName || !signInSession)\n        // TODO: remove this error message for production apps\n        throw new AuthError({\n            name: AuthErrorCodes.SignInException,\n            message: `\n\t\t\tAn error occurred during the sign in process. \n\t\t\t\n\t\t\tThis most likely occurred due to:\n\t\t\t1. signIn was not called before confirmSignIn.\n\t\t\t2. signIn threw an exception.\n\t\t\t3. page was refreshed during the sign in flow.\n\t\t\t`,\n            recoverySuggestion: 'Make sure a successful call to signIn is made before calling confirmSignIn' +\n                'and that the page is not refreshed until the sign in process is done.',\n        });\n    try {\n        const { Session, ChallengeName: handledChallengeName, AuthenticationResult, ChallengeParameters: handledChallengeParameters, } = await handleChallengeName(username, challengeName, signInSession, challengeResponse, authConfig, tokenOrchestrator, clientMetaData, options);\n        // sets up local state used during the sign-in process\n        setActiveSignInState({\n            signInSession: Session,\n            username,\n            challengeName: handledChallengeName,\n            signInDetails,\n        });\n        if (AuthenticationResult) {\n            cleanActiveSignInState();\n            await cacheCognitoTokens({\n                username,\n                ...AuthenticationResult,\n                NewDeviceMetadata: await getNewDeviceMetadata({\n                    userPoolId: authConfig.userPoolId,\n                    userPoolEndpoint: authConfig.userPoolEndpoint,\n                    newDeviceMetadata: AuthenticationResult.NewDeviceMetadata,\n                    accessToken: AuthenticationResult.AccessToken,\n                }),\n                signInDetails,\n            });\n            await dispatchSignedInHubEvent();\n            return {\n                isSignedIn: true,\n                nextStep: { signInStep: 'DONE' },\n            };\n        }\n        return getSignInResult({\n            challengeName: handledChallengeName,\n            challengeParameters: handledChallengeParameters,\n        });\n    }\n    catch (error) {\n        assertServiceError(error);\n        const result = getSignInResultFromError(error.name);\n        if (result)\n            return result;\n        throw error;\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler';\nimport { createUserPoolDeserializer, createUserPoolSerializer, } from './shared/serde';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants';\nexport const createSetUserMFAPreferenceClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('SetUserMFAPreference'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify, fetchAuthSession } from '@aws-amplify/core';\nimport { AuthAction, assertTokenProviderConfig, } from '@aws-amplify/core/internals/utils';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers';\nimport { assertAuthTokens } from '../utils/types';\nimport { getAuthUserAgentValue } from '../../../utils';\nimport { createSetUserMFAPreferenceClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider';\nimport { createCognitoUserPoolEndpointResolver } from '../factories';\n/**\n * Updates the MFA preference of the user.\n *\n * @param input - The UpdateMFAPreferenceInput object.\n * @throws -{@link SetUserMFAPreferenceException } - Service error thrown when the MFA preference cannot be updated.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nexport async function updateMFAPreference(input) {\n    const { sms, totp } = input;\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { userPoolEndpoint, userPoolId } = authConfig;\n    const { tokens } = await fetchAuthSession({ forceRefresh: false });\n    assertAuthTokens(tokens);\n    const setUserMFAPreference = createSetUserMFAPreferenceClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    await setUserMFAPreference({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.UpdateMFAPreference),\n    }, {\n        AccessToken: tokens.accessToken.toString(),\n        SMSMfaSettings: getMFASettings(sms),\n        SoftwareTokenMfaSettings: getMFASettings(totp),\n    });\n}\nexport function getMFASettings(mfaPreference) {\n    if (mfaPreference === 'DISABLED') {\n        return {\n            Enabled: false,\n        };\n    }\n    else if (mfaPreference === 'PREFERRED') {\n        return {\n            Enabled: true,\n            PreferredMfa: true,\n        };\n    }\n    else if (mfaPreference === 'ENABLED') {\n        return {\n            Enabled: true,\n        };\n    }\n    else if (mfaPreference === 'NOT_PREFERRED') {\n        return {\n            Enabled: true,\n            PreferredMfa: false,\n        };\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler';\nimport { createUserPoolDeserializer, createUserPoolSerializer, } from './shared/serde';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants';\nexport const createGetUserClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('GetUser'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify, fetchAuthSession } from '@aws-amplify/core';\nimport { AuthAction, assertTokenProviderConfig, } from '@aws-amplify/core/internals/utils';\nimport { getMFAType, getMFATypes } from '../utils/signInHelpers';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers';\nimport { assertAuthTokens } from '../utils/types';\nimport { getAuthUserAgentValue } from '../../../utils';\nimport { createGetUserClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider';\nimport { createCognitoUserPoolEndpointResolver } from '../factories';\n/**\n * Fetches the preferred MFA setting and enabled MFA settings for the user.\n *\n * @returns FetchMFAPreferenceOutput\n * @throws  -{@link GetUserException} : error thrown when the service fails to fetch MFA preference\n * and settings.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nexport async function fetchMFAPreference() {\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { userPoolEndpoint, userPoolId } = authConfig;\n    const { tokens } = await fetchAuthSession({ forceRefresh: false });\n    assertAuthTokens(tokens);\n    const getUser = createGetUserClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const { PreferredMfaSetting, UserMFASettingList } = await getUser({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.FetchMFAPreference),\n    }, {\n        AccessToken: tokens.accessToken.toString(),\n    });\n    return {\n        preferred: getMFAType(PreferredMfaSetting),\n        enabled: getMFATypes(UserMFASettingList),\n    };\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify, fetchAuthSession } from '@aws-amplify/core';\nimport { AuthAction, assertTokenProviderConfig, } from '@aws-amplify/core/internals/utils';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers';\nimport { assertAuthTokens } from '../utils/types';\nimport { getAuthUserAgentValue } from '../../../utils';\nimport { createVerifySoftwareTokenClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider';\nimport { createCognitoUserPoolEndpointResolver } from '../factories';\n/**\n * Verifies an OTP code retrieved from an associated authentication app.\n *\n * @param input - The VerifyTOTPSetupInput\n * @throws  -{@link VerifySoftwareTokenException }:\n * Thrown due to an invalid MFA token.\n * @throws  -{@link AuthValidationErrorCode }:\n * Thrown when `code` is not defined.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nexport async function verifyTOTPSetup(input) {\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { userPoolEndpoint, userPoolId } = authConfig;\n    const { code, options } = input;\n    assertValidationError(!!code, AuthValidationErrorCode.EmptyVerifyTOTPSetupCode);\n    const { tokens } = await fetchAuthSession({ forceRefresh: false });\n    assertAuthTokens(tokens);\n    const verifySoftwareToken = createVerifySoftwareTokenClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    await verifySoftwareToken({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.VerifyTOTPSetup),\n    }, {\n        AccessToken: tokens.accessToken.toString(),\n        UserCode: code,\n        FriendlyDeviceName: options?.friendlyDeviceName,\n    });\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler';\nimport { createUserPoolDeserializer, createUserPoolSerializer, } from './shared/serde';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants';\nexport const createChangePasswordClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('ChangePassword'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify, fetchAuthSession } from '@aws-amplify/core';\nimport { AuthAction, assertTokenProviderConfig, } from '@aws-amplify/core/internals/utils';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers';\nimport { assertAuthTokens } from '../utils/types';\nimport { getAuthUserAgentValue } from '../../../utils';\nimport { createChangePasswordClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider';\nimport { createCognitoUserPoolEndpointResolver } from '../factories';\n/**\n * Updates user's password while authenticated.\n *\n * @param input - The UpdatePasswordInput object.\n * @throws - {@link ChangePasswordException} - Cognito service errors thrown when updating a password.\n * @throws - {@link AuthValidationErrorCode} - Validation errors thrown when oldPassword or newPassword are empty.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nexport async function updatePassword(input) {\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { userPoolEndpoint, userPoolId } = authConfig;\n    const { oldPassword, newPassword } = input;\n    assertValidationError(!!oldPassword, AuthValidationErrorCode.EmptyUpdatePassword);\n    assertValidationError(!!newPassword, AuthValidationErrorCode.EmptyUpdatePassword);\n    const { tokens } = await fetchAuthSession({ forceRefresh: false });\n    assertAuthTokens(tokens);\n    const changePassword = createChangePasswordClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    await changePassword({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.UpdatePassword),\n    }, {\n        AccessToken: tokens.accessToken.toString(),\n        PreviousPassword: oldPassword,\n        ProposedPassword: newPassword,\n    });\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify, fetchAuthSession } from '@aws-amplify/core';\nimport { AuthAction, assertTokenProviderConfig, } from '@aws-amplify/core/internals/utils';\nimport { AuthError } from '../../../errors/AuthError';\nimport { SETUP_TOTP_EXCEPTION, } from '../types/errors';\nimport { getTOTPSetupDetails } from '../utils/signInHelpers';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers';\nimport { assertAuthTokens } from '../utils/types';\nimport { getAuthUserAgentValue } from '../../../utils';\nimport { createAssociateSoftwareTokenClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider';\nimport { createCognitoUserPoolEndpointResolver } from '../factories';\n/**\n * Sets up TOTP for the user.\n *\n * @returns SetUpTOTPOutput\n * @throws -{@link AssociateSoftwareTokenException}\n * Thrown if a service occurs while setting up TOTP.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n **/\nexport async function setUpTOTP() {\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { userPoolEndpoint, userPoolId } = authConfig;\n    const { tokens } = await fetchAuthSession({ forceRefresh: false });\n    assertAuthTokens(tokens);\n    const username = tokens.idToken?.payload['cognito:username'] ?? '';\n    const associateSoftwareToken = createAssociateSoftwareTokenClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const { SecretCode } = await associateSoftwareToken({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.SetUpTOTP),\n    }, {\n        AccessToken: tokens.accessToken.toString(),\n    });\n    if (!SecretCode) {\n        // This should never happen.\n        throw new AuthError({\n            name: SETUP_TOTP_EXCEPTION,\n            message: 'Failed to set up TOTP.',\n        });\n    }\n    return getTOTPSetupDetails(SecretCode, JSON.stringify(username));\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler';\nimport { createUserPoolDeserializer, createUserPoolSerializer, } from './shared/serde';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants';\nexport const createUpdateUserAttributesClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('UpdateUserAttributes'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify, fetchAuthSession } from '@aws-amplify/core';\nimport { AuthAction, assertTokenProviderConfig, } from '@aws-amplify/core/internals/utils';\nimport { assertAuthTokens } from '../utils/types';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers';\nimport { toAttributeType } from '../utils/apiHelpers';\nimport { getAuthUserAgentValue } from '../../../utils';\nimport { createUpdateUserAttributesClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider';\nimport { createCognitoUserPoolEndpointResolver } from '../factories';\n/**\n * Updates user's attributes while authenticated.\n *\n * @param input - The UpdateUserAttributesInput object\n * @returns UpdateUserAttributesOutput\n * @throws - {@link UpdateUserAttributesException}\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nexport const updateUserAttributes = async (input) => {\n    const { userAttributes, options } = input;\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    const clientMetadata = options?.clientMetadata;\n    assertTokenProviderConfig(authConfig);\n    const { userPoolEndpoint, userPoolId } = authConfig;\n    const { tokens } = await fetchAuthSession({ forceRefresh: false });\n    assertAuthTokens(tokens);\n    const updateUserAttributesClient = createUpdateUserAttributesClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const { CodeDeliveryDetailsList } = await updateUserAttributesClient({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.UpdateUserAttributes),\n    }, {\n        AccessToken: tokens.accessToken.toString(),\n        ClientMetadata: clientMetadata,\n        UserAttributes: toAttributeType(userAttributes),\n    });\n    return {\n        ...getConfirmedAttributes(userAttributes),\n        ...getUnConfirmedAttributes(CodeDeliveryDetailsList),\n    };\n};\nfunction getConfirmedAttributes(attributes) {\n    const confirmedAttributes = {};\n    Object.keys(attributes)?.forEach(key => {\n        confirmedAttributes[key] = {\n            isUpdated: true,\n            nextStep: {\n                updateAttributeStep: 'DONE',\n            },\n        };\n    });\n    return confirmedAttributes;\n}\nfunction getUnConfirmedAttributes(codeDeliveryDetailsList) {\n    const unConfirmedAttributes = {};\n    codeDeliveryDetailsList?.forEach(codeDeliveryDetails => {\n        const { AttributeName, DeliveryMedium, Destination } = codeDeliveryDetails;\n        if (AttributeName)\n            unConfirmedAttributes[AttributeName] = {\n                isUpdated: false,\n                nextStep: {\n                    updateAttributeStep: 'CONFIRM_ATTRIBUTE_WITH_CODE',\n                    codeDeliveryDetails: {\n                        attributeName: AttributeName,\n                        deliveryMedium: DeliveryMedium,\n                        destination: Destination,\n                    },\n                },\n            };\n    });\n    return unConfirmedAttributes;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { updateUserAttributes } from './updateUserAttributes';\n/**\n * Updates user's attribute while authenticated.\n *\n * @param input - The UpdateUserAttributeInput object\n * @returns UpdateUserAttributeOutput\n * @throws - {@link UpdateUserAttributesException}\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nexport const updateUserAttribute = async (input) => {\n    const { userAttribute: { attributeKey, value }, options, } = input;\n    const output = await updateUserAttributes({\n        userAttributes: { [attributeKey]: value },\n        options,\n    });\n    return Object.values(output)[0];\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler';\nimport { createUserPoolDeserializer, createUserPoolSerializer, } from './shared/serde';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants';\nexport const createVerifyUserAttributeClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('VerifyUserAttribute'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify, fetchAuthSession } from '@aws-amplify/core';\nimport { AuthAction, assertTokenProviderConfig, } from '@aws-amplify/core/internals/utils';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers';\nimport { assertAuthTokens } from '../utils/types';\nimport { getAuthUserAgentValue } from '../../../utils';\nimport { createVerifyUserAttributeClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider';\nimport { createCognitoUserPoolEndpointResolver } from '../factories';\n/**\n * Confirms a user attribute with the confirmation code.\n *\n * @param input -  The ConfirmUserAttributeInput object\n * @throws  -{@link AuthValidationErrorCode } -\n * Thrown when `confirmationCode` is not defined.\n * @throws  -{@link VerifyUserAttributeException } - Thrown due to an invalid confirmation code or attribute.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nexport async function confirmUserAttribute(input) {\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { userPoolEndpoint, userPoolId } = authConfig;\n    const { confirmationCode, userAttributeKey } = input;\n    assertValidationError(!!confirmationCode, AuthValidationErrorCode.EmptyConfirmUserAttributeCode);\n    const { tokens } = await fetchAuthSession({ forceRefresh: false });\n    assertAuthTokens(tokens);\n    const verifyUserAttribute = createVerifyUserAttributeClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    await verifyUserAttribute({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmUserAttribute),\n    }, {\n        AccessToken: tokens.accessToken.toString(),\n        AttributeName: userAttributeKey,\n        Code: confirmationCode,\n    });\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// TODO: delete this module when the Auth class is removed.\nimport { ConsoleLogger } from '@aws-amplify/core';\nimport { AuthErrorStrings } from './common/AuthErrorStrings';\nconst logger = new ConsoleLogger('AuthError');\nexport class AuthError extends Error {\n    constructor(type) {\n        const { message, log } = authErrorMessages[type];\n        super(message);\n        // Hack for making the custom error class work when transpiled to es5\n        // TODO: Delete the following 2 lines after we change the build target to >= es2015\n        this.constructor = AuthError;\n        Object.setPrototypeOf(this, AuthError.prototype);\n        this.name = 'AuthError';\n        this.log = log || message;\n        logger.error(this.log);\n    }\n}\nexport class NoUserPoolError extends AuthError {\n    constructor(type) {\n        super(type);\n        // Hack for making the custom error class work when transpiled to es5\n        // TODO: Delete the following 2 lines after we change the build target to >= es2015\n        this.constructor = NoUserPoolError;\n        Object.setPrototypeOf(this, NoUserPoolError.prototype);\n        this.name = 'NoUserPoolError';\n    }\n}\nexport const authErrorMessages = {\n    oauthSignInError: {\n        message: AuthErrorStrings.OAUTH_ERROR,\n        log: 'Make sure Cognito Hosted UI has been configured correctly',\n    },\n    noConfig: {\n        message: AuthErrorStrings.DEFAULT_MSG,\n        log: `\n            Error: Amplify has not been configured correctly.\n            This error is typically caused by one of the following scenarios:\n\n            1. Make sure you're passing the awsconfig object to Amplify.configure() in your app's entry point\n                See https://aws-amplify.github.io/docs/js/authentication#configure-your-app for more information\n            \n            2. There might be multiple conflicting versions of amplify packages in your node_modules.\n\t\t\t\tRefer to our docs site for help upgrading Amplify packages (https://docs.amplify.aws/lib/troubleshooting/upgrading/q/platform/js)\n        `,\n    },\n    missingAuthConfig: {\n        message: AuthErrorStrings.DEFAULT_MSG,\n        log: `\n            Error: Amplify has not been configured correctly. \n            The configuration object is missing required auth properties.\n            This error is typically caused by one of the following scenarios:\n\n            1. Did you run \\`amplify push\\` after adding auth via \\`amplify add auth\\`?\n                See https://aws-amplify.github.io/docs/js/authentication#amplify-project-setup for more information\n\n            2. This could also be caused by multiple conflicting versions of amplify packages, see (https://docs.amplify.aws/lib/troubleshooting/upgrading/q/platform/js) for help upgrading Amplify packages.\n        `,\n    },\n    emptyUsername: {\n        message: AuthErrorStrings.EMPTY_USERNAME,\n    },\n    // TODO: should include a list of valid sign-in types\n    invalidUsername: {\n        message: AuthErrorStrings.INVALID_USERNAME,\n    },\n    emptyPassword: {\n        message: AuthErrorStrings.EMPTY_PASSWORD,\n    },\n    emptyCode: {\n        message: AuthErrorStrings.EMPTY_CODE,\n    },\n    signUpError: {\n        message: AuthErrorStrings.SIGN_UP_ERROR,\n        log: 'The first parameter should either be non-null string or object',\n    },\n    noMFA: {\n        message: AuthErrorStrings.NO_MFA,\n    },\n    invalidMFA: {\n        message: AuthErrorStrings.INVALID_MFA,\n    },\n    emptyChallengeResponse: {\n        message: AuthErrorStrings.EMPTY_CHALLENGE,\n    },\n    noUserSession: {\n        message: AuthErrorStrings.NO_USER_SESSION,\n    },\n    deviceConfig: {\n        message: AuthErrorStrings.DEVICE_CONFIG,\n    },\n    networkError: {\n        message: AuthErrorStrings.NETWORK_ERROR,\n    },\n    autoSignInError: {\n        message: AuthErrorStrings.AUTOSIGNIN_ERROR,\n    },\n    default: {\n        message: AuthErrorStrings.DEFAULT_MSG,\n    },\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { authErrorMessages } from '../../../../Errors';\nimport { AuthErrorCodes } from '../../../../common/AuthErrorStrings';\nimport { AuthError } from '../../../../errors/AuthError';\nexport const createOAuthError = (message, recoverySuggestion) => new AuthError({\n    message: message ?? 'An error has occurred during the oauth process.',\n    name: AuthErrorCodes.OAuthSignInError,\n    recoverySuggestion: recoverySuggestion ?? authErrorMessages.oauthSignInError.log,\n});\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport var AuthErrorTypes;\n(function (AuthErrorTypes) {\n    AuthErrorTypes[\"NoConfig\"] = \"noConfig\";\n    AuthErrorTypes[\"MissingAuthConfig\"] = \"missingAuthConfig\";\n    AuthErrorTypes[\"EmptyUsername\"] = \"emptyUsername\";\n    AuthErrorTypes[\"InvalidUsername\"] = \"invalidUsername\";\n    AuthErrorTypes[\"EmptyPassword\"] = \"emptyPassword\";\n    AuthErrorTypes[\"EmptyCode\"] = \"emptyCode\";\n    AuthErrorTypes[\"SignUpError\"] = \"signUpError\";\n    AuthErrorTypes[\"NoMFA\"] = \"noMFA\";\n    AuthErrorTypes[\"InvalidMFA\"] = \"invalidMFA\";\n    AuthErrorTypes[\"EmptyChallengeResponse\"] = \"emptyChallengeResponse\";\n    AuthErrorTypes[\"NoUserSession\"] = \"noUserSession\";\n    AuthErrorTypes[\"Default\"] = \"default\";\n    AuthErrorTypes[\"DeviceConfig\"] = \"deviceConfig\";\n    AuthErrorTypes[\"NetworkError\"] = \"networkError\";\n    AuthErrorTypes[\"AutoSignInError\"] = \"autoSignInError\";\n    AuthErrorTypes[\"OAuthSignInError\"] = \"oauthSignInError\";\n})(AuthErrorTypes || (AuthErrorTypes = {}));\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AuthError } from '../../../../errors/AuthError';\nimport { AuthErrorTypes } from '../../../../types/Auth';\nimport { oAuthStore } from './oAuthStore';\nexport const flowCancelledMessage = '`signInWithRedirect` has been canceled.';\nexport const validationFailedMessage = 'An error occurred while validating the state.';\nexport const validationRecoverySuggestion = 'Try to initiate an OAuth flow from Amplify';\nexport const validateState = async (state) => {\n    const savedState = await oAuthStore.loadOAuthState();\n    // This is because savedState only exists if the flow was initiated by Amplify\n    const validatedState = state === savedState ? savedState : undefined;\n    if (!validatedState) {\n        throw new AuthError({\n            name: AuthErrorTypes.OAuthSignInError,\n            message: state === null ? flowCancelledMessage : validationFailedMessage,\n            recoverySuggestion: state === null ? undefined : validationRecoverySuggestion,\n        });\n    }\n    return validatedState;\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AMPLIFY_SYMBOL, AmplifyUrl, USER_AGENT_HEADER, urlSafeDecode, } from '@aws-amplify/core/internals/utils';\nimport { Hub, decodeJWT } from '@aws-amplify/core';\nimport { cacheCognitoTokens } from '../../tokenProvider/cacheTokens';\nimport { dispatchSignedInHubEvent } from '../dispatchSignedInHubEvent';\nimport { tokenOrchestrator } from '../../tokenProvider';\nimport { createOAuthError } from './createOAuthError';\nimport { resolveAndClearInflightPromises } from './inflightPromise';\nimport { validateState } from './validateState';\nimport { oAuthStore } from './oAuthStore';\nexport const completeOAuthFlow = async ({ currentUrl, userAgentValue, clientId, redirectUri, responseType, domain, preferPrivateSession, }) => {\n    const urlParams = new AmplifyUrl(currentUrl);\n    const error = urlParams.searchParams.get('error');\n    const errorMessage = urlParams.searchParams.get('error_description');\n    if (error) {\n        throw createOAuthError(errorMessage ?? error);\n    }\n    if (responseType === 'code') {\n        return handleCodeFlow({\n            currentUrl,\n            userAgentValue,\n            clientId,\n            redirectUri,\n            domain,\n            preferPrivateSession,\n        });\n    }\n    return handleImplicitFlow({\n        currentUrl,\n        redirectUri,\n        preferPrivateSession,\n    });\n};\nconst handleCodeFlow = async ({ currentUrl, userAgentValue, clientId, redirectUri, domain, preferPrivateSession, }) => {\n    /* Convert URL into an object with parameters as keys\n{ redirect_uri: 'http://localhost:3000/', response_type: 'code', ...} */\n    const url = new AmplifyUrl(currentUrl);\n    const code = url.searchParams.get('code');\n    const state = url.searchParams.get('state');\n    // if `code` or `state` is not presented in the redirect url, most likely\n    // that the end user cancelled the inflight oauth flow by:\n    // 1. clicking the back button of browser\n    // 2. closing the provider hosted UI page and coming back to the app\n    if (!code || !state) {\n        throw createOAuthError('User cancelled OAuth flow.');\n    }\n    // may throw error is being caught in attemptCompleteOAuthFlow.ts\n    const validatedState = await validateState(state);\n    const oAuthTokenEndpoint = 'https://' + domain + '/oauth2/token';\n    // TODO(v6): check hub events\n    // dispatchAuthEvent(\n    // \t'codeFlow',\n    // \t{},\n    // \t`Retrieving tokens from ${oAuthTokenEndpoint}`\n    // );\n    const codeVerifier = await oAuthStore.loadPKCE();\n    const oAuthTokenBody = {\n        grant_type: 'authorization_code',\n        code,\n        client_id: clientId,\n        redirect_uri: redirectUri,\n        ...(codeVerifier ? { code_verifier: codeVerifier } : {}),\n    };\n    const body = Object.entries(oAuthTokenBody)\n        .map(([k, v]) => `${encodeURIComponent(k)}=${encodeURIComponent(v)}`)\n        .join('&');\n    const { access_token, refresh_token: refreshToken, id_token, error, error_message: errorMessage, token_type, expires_in, } = await (await fetch(oAuthTokenEndpoint, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n            [USER_AGENT_HEADER]: userAgentValue,\n        },\n        body,\n    })).json();\n    if (error) {\n        // error is being caught in attemptCompleteOAuthFlow.ts\n        throw createOAuthError(errorMessage ?? error);\n    }\n    const username = (access_token && decodeJWT(access_token).payload.username) ?? 'username';\n    await cacheCognitoTokens({\n        username,\n        AccessToken: access_token,\n        IdToken: id_token,\n        RefreshToken: refreshToken,\n        TokenType: token_type,\n        ExpiresIn: expires_in,\n    });\n    return completeFlow({\n        redirectUri,\n        state: validatedState,\n        preferPrivateSession,\n    });\n};\nconst handleImplicitFlow = async ({ currentUrl, redirectUri, preferPrivateSession, }) => {\n    // hash is `null` if `#` doesn't exist on URL\n    const url = new AmplifyUrl(currentUrl);\n    const { id_token, access_token, state, token_type, expires_in, error_description, error, } = (url.hash ?? '#')\n        .substring(1) // Remove # from returned code\n        .split('&')\n        .map(pairings => pairings.split('='))\n        .reduce((accum, [k, v]) => ({ ...accum, [k]: v }), {\n        id_token: undefined,\n        access_token: undefined,\n        state: undefined,\n        token_type: undefined,\n        expires_in: undefined,\n        error_description: undefined,\n        error: undefined,\n    });\n    if (error) {\n        throw createOAuthError(error_description ?? error);\n    }\n    if (!access_token) {\n        // error is being caught in attemptCompleteOAuthFlow.ts\n        throw createOAuthError('No access token returned from OAuth flow.');\n    }\n    const validatedState = await validateState(state);\n    const username = (access_token && decodeJWT(access_token).payload.username) ?? 'username';\n    await cacheCognitoTokens({\n        username,\n        AccessToken: access_token,\n        IdToken: id_token,\n        TokenType: token_type,\n        ExpiresIn: expires_in,\n    });\n    return completeFlow({\n        redirectUri,\n        state: validatedState,\n        preferPrivateSession,\n    });\n};\nconst completeFlow = async ({ redirectUri, state, preferPrivateSession, }) => {\n    await tokenOrchestrator.setOAuthMetadata({\n        oauthSignIn: true,\n    });\n    await oAuthStore.clearOAuthData();\n    await oAuthStore.storeOAuthSignIn(true, preferPrivateSession);\n    // this should be called before any call that involves `fetchAuthSession`\n    // e.g. `getCurrentUser()` below, so it allows every inflight async calls to\n    //  `fetchAuthSession` can be resolved\n    resolveAndClearInflightPromises();\n    if (isCustomState(state)) {\n        Hub.dispatch('auth', {\n            event: 'customOAuthState',\n            data: urlSafeDecode(getCustomState(state)),\n        }, 'Auth', AMPLIFY_SYMBOL);\n    }\n    Hub.dispatch('auth', { event: 'signInWithRedirect' }, 'Auth', AMPLIFY_SYMBOL);\n    await dispatchSignedInHubEvent();\n    clearHistory(redirectUri);\n};\nconst isCustomState = (state) => {\n    return /-/.test(state);\n};\nconst getCustomState = (state) => {\n    return state.split('-').splice(1).join('-');\n};\nconst clearHistory = (redirectUri) => {\n    if (typeof window !== 'undefined' && typeof window.history !== 'undefined') {\n        window.history.replaceState(window.history.state, '', redirectUri);\n    }\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { invalidOriginException, invalidPreferredRedirectUrlException, invalidRedirectException, } from '../../../../errors/constants';\n/** @internal */\nexport function getRedirectUrl(redirects, preferredRedirectUrl) {\n    if (preferredRedirectUrl) {\n        const redirectUrl = redirects?.find(redirect => redirect === preferredRedirectUrl);\n        if (!redirectUrl) {\n            throw invalidPreferredRedirectUrlException;\n        }\n        return redirectUrl;\n    }\n    else {\n        const redirectUrlFromTheSameOrigin = redirects?.find(isSameOriginAndPathName) ??\n            redirects?.find(isTheSameDomain);\n        const redirectUrlFromDifferentOrigin = redirects?.find(isHttps) ?? redirects?.find(isHttp);\n        if (redirectUrlFromTheSameOrigin) {\n            return redirectUrlFromTheSameOrigin;\n        }\n        else if (redirectUrlFromDifferentOrigin) {\n            throw invalidOriginException;\n        }\n        throw invalidRedirectException;\n    }\n}\n// origin + pathname => https://example.com/app\nconst isSameOriginAndPathName = (redirect) => redirect.startsWith(\n// eslint-disable-next-line no-constant-binary-expression\nString(window.location.origin + window.location.pathname ?? '/'));\n// domain => outlook.live.com, github.com\nconst isTheSameDomain = (redirect) => redirect.includes(String(window.location.hostname));\nconst isHttp = (redirect) => redirect.startsWith('http://');\nconst isHttps = (redirect) => redirect.startsWith('https://');\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Hub } from '@aws-amplify/core';\nimport { AMPLIFY_SYMBOL } from '@aws-amplify/core/internals/utils';\nimport { oAuthStore } from './oAuthStore';\nimport { resolveAndClearInflightPromises } from './inflightPromise';\nexport const handleFailure = async (error) => {\n    resolveAndClearInflightPromises();\n    await oAuthStore.clearOAuthInflightData();\n    Hub.dispatch('auth', { event: 'signInWithRedirect_failure', data: { error } }, 'Auth', AMPLIFY_SYMBOL);\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AuthAction, assertOAuthConfig, assertTokenProviderConfig, } from '@aws-amplify/core/internals/utils';\nimport { getAuthUserAgentValue } from '../../../../utils';\nimport { oAuthStore } from './oAuthStore';\nimport { completeOAuthFlow } from './completeOAuthFlow';\nimport { getRedirectUrl } from './getRedirectUrl';\nimport { handleFailure } from './handleFailure';\nexport const attemptCompleteOAuthFlow = async (authConfig) => {\n    try {\n        assertTokenProviderConfig(authConfig);\n        assertOAuthConfig(authConfig);\n        oAuthStore.setAuthConfig(authConfig);\n    }\n    catch (_) {\n        // no-op\n        // This should not happen as Amplify singleton checks the oauth config key\n        // unless the oauth config object doesn't contain required properties\n        return;\n    }\n    // No inflight OAuth\n    if (!(await oAuthStore.loadOAuthInFlight())) {\n        return;\n    }\n    try {\n        const currentUrl = window.location.href;\n        const { loginWith, userPoolClientId } = authConfig;\n        const { domain, redirectSignIn, responseType } = loginWith.oauth;\n        const redirectUri = getRedirectUrl(redirectSignIn);\n        await completeOAuthFlow({\n            currentUrl,\n            clientId: userPoolClientId,\n            domain,\n            redirectUri,\n            responseType,\n            userAgentValue: getAuthUserAgentValue(AuthAction.SignInWithRedirect),\n        });\n    }\n    catch (err) {\n        await handleFailure(err);\n    }\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify } from '@aws-amplify/core';\nimport { ADD_OAUTH_LISTENER, isBrowser, } from '@aws-amplify/core/internals/utils';\nimport { attemptCompleteOAuthFlow } from './attemptCompleteOAuthFlow';\n// attach the side effect for handling the completion of an inflight oauth flow\n// this side effect works only on Web\nisBrowser() &&\n    (() => {\n        // add the listener to the singleton for triggering\n        Amplify[ADD_OAUTH_LISTENER](attemptCompleteOAuthFlow);\n    })();\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport const cognitoHostedUIIdentityProviderMap = {\n    Google: 'Google',\n    Facebook: 'Facebook',\n    Amazon: 'LoginWithAmazon',\n    Apple: 'SignInWithApple',\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport const openAuthSession = async (url) => {\n    if (!window?.location) {\n        return;\n    }\n    // enforce HTTPS\n    window.location.href = url.replace('http://', 'https://');\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Sha256 } from '@aws-crypto/sha256-js';\nimport { base64Encoder, getCrypto } from '@aws-amplify/core/internals/utils';\nconst CODE_VERIFIER_CHARSET = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n/**\n *\n * @param length Desired length of the code verifier.\n *\n * **NOTE:** According to the [RFC 7636](https://datatracker.ietf.org/doc/html/rfc7636#section-4.1)\n * A code verifier must be with a length >= 43 and <= 128.\n *\n * @returns An object that contains the generated `codeVerifier` and a method\n * `toCodeChallenge` to generate the code challenge from the `codeVerifier`\n * following the spec of [RFC 7636](https://datatracker.ietf.org/doc/html/rfc7636#section-4.2).\n */\nexport const generateCodeVerifier = (length) => {\n    const randomBytes = new Uint8Array(length);\n    getCrypto().getRandomValues(randomBytes);\n    let value = '';\n    let codeChallenge;\n    for (const byte of randomBytes) {\n        value += CODE_VERIFIER_CHARSET.charAt(byte % CODE_VERIFIER_CHARSET.length);\n    }\n    return {\n        value,\n        method: 'S256',\n        toCodeChallenge() {\n            if (codeChallenge) {\n                return codeChallenge;\n            }\n            codeChallenge = generateCodeChallenge(value);\n            return codeChallenge;\n        },\n    };\n};\nfunction generateCodeChallenge(codeVerifier) {\n    const awsCryptoHash = new Sha256();\n    awsCryptoHash.update(codeVerifier);\n    const codeChallenge = removePaddingChar(base64Encoder.convert(awsCryptoHash.digestSync(), { urlSafe: true }));\n    return codeChallenge;\n}\nfunction removePaddingChar(base64Encoded) {\n    return base64Encoded.replace(/=/g, '');\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { generateRandomString } from '@aws-amplify/core/internals/utils';\nexport const generateState = () => {\n    return generateRandomString(32);\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { createOAuthError } from './createOAuthError';\nimport { handleFailure } from './handleFailure';\nexport const listenForOAuthFlowCancellation = (store) => {\n    async function handleCancelOAuthFlow(event) {\n        const isBfcache = event.persisted;\n        if (isBfcache && (await store.loadOAuthInFlight())) {\n            const error = createOAuthError('User cancelled OAuth flow.');\n            await handleFailure(error);\n        }\n        window.removeEventListener('pageshow', handleCancelOAuthFlow);\n    }\n    window.addEventListener('pageshow', handleCancelOAuthFlow);\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify } from '@aws-amplify/core';\nimport { AuthAction, assertOAuthConfig, assertTokenProviderConfig, isBrowser, urlSafeEncode, } from '@aws-amplify/core/internals/utils';\nimport '../utils/oauth/enableOAuthListener';\nimport { cognitoHostedUIIdentityProviderMap } from '../types/models';\nimport { getAuthUserAgentValue, openAuthSession } from '../../../utils';\nimport { assertUserNotAuthenticated } from '../utils/signInHelpers';\nimport { completeOAuthFlow, generateCodeVerifier, generateState, getRedirectUrl, handleFailure, oAuthStore, } from '../utils/oauth';\nimport { createOAuthError } from '../utils/oauth/createOAuthError';\nimport { listenForOAuthFlowCancellation } from '../utils/oauth/cancelOAuthFlow';\n/**\n * Signs in a user with OAuth. Redirects the application to an Identity Provider.\n *\n * @param input - The SignInWithRedirectInput object, if empty it will redirect to Cognito HostedUI\n *\n * @throws AuthTokenConfigException - Thrown when the user pool config is invalid.\n * @throws OAuthNotConfigureException - Thrown when the oauth config is invalid.\n */\nexport async function signInWithRedirect(input) {\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    assertOAuthConfig(authConfig);\n    oAuthStore.setAuthConfig(authConfig);\n    await assertUserNotAuthenticated();\n    let provider = 'COGNITO'; // Default\n    if (typeof input?.provider === 'string') {\n        provider = cognitoHostedUIIdentityProviderMap[input.provider];\n    }\n    else if (input?.provider?.custom) {\n        provider = input.provider.custom;\n    }\n    return oauthSignIn({\n        oauthConfig: authConfig.loginWith.oauth,\n        clientId: authConfig.userPoolClientId,\n        provider,\n        customState: input?.customState,\n        preferPrivateSession: input?.options?.preferPrivateSession,\n    });\n}\nconst oauthSignIn = async ({ oauthConfig, provider, clientId, customState, preferPrivateSession, }) => {\n    const { domain, redirectSignIn, responseType, scopes } = oauthConfig;\n    const randomState = generateState();\n    /* encodeURIComponent is not URL safe, use urlSafeEncode instead. Cognito\n    single-encodes/decodes url on first sign in and double-encodes/decodes url\n    when user already signed in. Using encodeURIComponent, Base32, Base64 add\n    characters % or = which on further encoding becomes unsafe. '=' create issue\n    for parsing query params.\n    Refer: https://github.com/aws-amplify/amplify-js/issues/5218 */\n    const state = customState\n        ? `${randomState}-${urlSafeEncode(customState)}`\n        : randomState;\n    const { value, method, toCodeChallenge } = generateCodeVerifier(128);\n    const redirectUri = getRedirectUrl(oauthConfig.redirectSignIn);\n    if (isBrowser())\n        oAuthStore.storeOAuthInFlight(true);\n    oAuthStore.storeOAuthState(state);\n    oAuthStore.storePKCE(value);\n    const queryString = Object.entries({\n        redirect_uri: redirectUri,\n        response_type: responseType,\n        client_id: clientId,\n        identity_provider: provider,\n        scope: scopes.join(' '),\n        state,\n        ...(responseType === 'code' && {\n            code_challenge: toCodeChallenge(),\n            code_challenge_method: method,\n        }),\n    })\n        .map(([k, v]) => `${encodeURIComponent(k)}=${encodeURIComponent(v)}`)\n        .join('&');\n    // TODO(v6): use URL object instead\n    const oAuthUrl = `https://${domain}/oauth2/authorize?${queryString}`;\n    // this will only take effect in the following scenarios:\n    // 1. the user cancels the OAuth flow on web via back button, and\n    // 2. when bfcache is enabled\n    listenForOAuthFlowCancellation(oAuthStore);\n    // the following is effective only in react-native as openAuthSession resolves only in react-native\n    const { type, error, url } = (await openAuthSession(oAuthUrl, redirectSignIn, preferPrivateSession)) ??\n        {};\n    try {\n        if (type === 'error') {\n            throw createOAuthError(String(error));\n        }\n        if (type === 'success' && url) {\n            await completeOAuthFlow({\n                currentUrl: url,\n                clientId,\n                domain,\n                redirectUri,\n                responseType,\n                userAgentValue: getAuthUserAgentValue(AuthAction.SignInWithRedirect),\n                preferPrivateSession,\n            });\n        }\n    }\n    catch (err) {\n        await handleFailure(err);\n        // rethrow the error so it can be caught by `await signInWithRedirect()` in react-native\n        throw err;\n    }\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AuthAction, assertTokenProviderConfig, fetchAuthSession, } from '@aws-amplify/core/internals/utils';\nimport { getRegionFromUserPoolId } from '../../../../foundation/parsers';\nimport { assertAuthTokens } from '../../utils/types';\nimport { toAuthUserAttribute } from '../../utils/apiHelpers';\nimport { getAuthUserAgentValue } from '../../../../utils';\nimport { createGetUserClient } from '../../../../foundation/factories/serviceClients/cognitoIdentityProvider';\nimport { createCognitoUserPoolEndpointResolver } from '../../factories';\nexport const fetchUserAttributes = async (amplify) => {\n    const authConfig = amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { userPoolEndpoint, userPoolId } = authConfig;\n    const { tokens } = await fetchAuthSession(amplify, {\n        forceRefresh: false,\n    });\n    assertAuthTokens(tokens);\n    const getUser = createGetUserClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const { UserAttributes } = await getUser({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.FetchUserAttributes),\n    }, {\n        AccessToken: tokens.accessToken.toString(),\n    });\n    return toAuthUserAttribute(UserAttributes);\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify } from '@aws-amplify/core';\nimport { fetchUserAttributes as fetchUserAttributesInternal } from './internal/fetchUserAttributes';\n/**\n * Fetches the current user attributes while authenticated.\n *\n * @throws - {@link GetUserException} - Cognito service errors thrown when the service is not able to get the user.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nexport const fetchUserAttributes = () => {\n    return fetchUserAttributesInternal(Amplify);\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Hub, clearCredentials } from '@aws-amplify/core';\nimport { AMPLIFY_SYMBOL } from '@aws-amplify/core/internals/utils';\nimport { tokenOrchestrator } from '../../tokenProvider';\nexport const completeOAuthSignOut = async (store) => {\n    await store.clearOAuthData();\n    tokenOrchestrator.clearTokens();\n    await clearCredentials();\n    Hub.dispatch('auth', { event: 'signedOut' }, 'Auth', AMPLIFY_SYMBOL);\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { assertOAuthConfig } from '@aws-amplify/core/internals/utils';\nimport { openAuthSession } from '../../../../utils';\nimport { getRedirectUrl } from './getRedirectUrl';\nexport const oAuthSignOutRedirect = async (authConfig, preferPrivateSession = false, redirectUrl) => {\n    assertOAuthConfig(authConfig);\n    const { loginWith, userPoolClientId } = authConfig;\n    const { domain, redirectSignOut } = loginWith.oauth;\n    const signoutUri = getRedirectUrl(redirectSignOut, redirectUrl);\n    const oAuthLogoutEndpoint = `https://${domain}/logout?${Object.entries({\n        client_id: userPoolClientId,\n        logout_uri: encodeURIComponent(signoutUri),\n    })\n        .map(([k, v]) => `${k}=${v}`)\n        .join('&')}`;\n    return openAuthSession(oAuthLogoutEndpoint, redirectSignOut, preferPrivateSession);\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { completeOAuthSignOut } from './completeOAuthSignOut';\nimport { oAuthSignOutRedirect } from './oAuthSignOutRedirect';\nexport const handleOAuthSignOut = async (cognitoConfig, store, tokenOrchestrator, redirectUrl) => {\n    const { isOAuthSignIn } = await store.loadOAuthSignIn();\n    const oauthMetadata = await tokenOrchestrator.getOAuthMetadata();\n    // Clear everything before attempting to visted logout endpoint since the current application\n    // state could be wiped away on redirect\n    await completeOAuthSignOut(store);\n    // The isOAuthSignIn flag is propagated by the oAuthToken store which manages oauth keys in local storage only.\n    // These keys are used to determine if a user is in an inflight or signedIn oauth states.\n    // However, this behavior represents an issue when 2 apps share the same set of tokens in Cookie storage because the app that didn't\n    // start the OAuth will not have access to the oauth keys.\n    // A heuristic solution is to add oauth metadata to the tokenOrchestrator which will have access to the underlying\n    // storage mechanism that is used by Amplify.\n    if (isOAuthSignIn || oauthMetadata?.oauthSignIn) {\n        // On web, this will always end up being a void action\n        return oAuthSignOutRedirect(cognitoConfig, false, redirectUrl);\n    }\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler';\nimport { createUserPoolDeserializer, createUserPoolSerializer, } from './shared/serde';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants';\nexport const createRevokeTokenClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('RevokeToken'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler';\nimport { createUserPoolDeserializer, createUserPoolSerializer, } from './shared/serde';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants';\nexport const createGlobalSignOutClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('GlobalSignOut'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify, ConsoleLogger, Hub, clearCredentials, defaultStorage, } from '@aws-amplify/core';\nimport { AMPLIFY_SYMBOL, AuthAction, assertOAuthConfig, assertTokenProviderConfig, } from '@aws-amplify/core/internals/utils';\nimport { getAuthUserAgentValue } from '../../../utils';\nimport { tokenOrchestrator } from '../tokenProvider';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers';\nimport { assertAuthTokens, assertAuthTokensWithRefreshToken, } from '../utils/types';\nimport { handleOAuthSignOut } from '../utils/oauth';\nimport { DefaultOAuthStore } from '../utils/signInWithRedirectStore';\nimport { AuthError } from '../../../errors/AuthError';\nimport { OAUTH_SIGNOUT_EXCEPTION } from '../../../errors/constants';\nimport { createGlobalSignOutClient, createRevokeTokenClient, } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider';\nimport { createCognitoUserPoolEndpointResolver } from '../factories';\nconst logger = new ConsoleLogger('Auth');\n/**\n * Signs a user out\n *\n * @param input - The SignOutInput object\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nexport async function signOut(input) {\n    const cognitoConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(cognitoConfig);\n    if (input?.global) {\n        await globalSignOut(cognitoConfig);\n    }\n    else {\n        await clientSignOut(cognitoConfig);\n    }\n    let hasOAuthConfig;\n    try {\n        assertOAuthConfig(cognitoConfig);\n        hasOAuthConfig = true;\n    }\n    catch (err) {\n        hasOAuthConfig = false;\n    }\n    if (hasOAuthConfig) {\n        const oAuthStore = new DefaultOAuthStore(defaultStorage);\n        oAuthStore.setAuthConfig(cognitoConfig);\n        const { type } = (await handleOAuthSignOut(cognitoConfig, oAuthStore, tokenOrchestrator, input?.oauth?.redirectUrl)) ?? {};\n        if (type === 'error') {\n            throw new AuthError({\n                name: OAUTH_SIGNOUT_EXCEPTION,\n                message: `An error occurred when attempting to log out from OAuth provider.`,\n            });\n        }\n    }\n    else {\n        // complete sign out\n        tokenOrchestrator.clearTokens();\n        await clearCredentials();\n        Hub.dispatch('auth', { event: 'signedOut' }, 'Auth', AMPLIFY_SYMBOL);\n    }\n}\nasync function clientSignOut(cognitoConfig) {\n    try {\n        const { userPoolEndpoint, userPoolId, userPoolClientId } = cognitoConfig;\n        const authTokens = await tokenOrchestrator.getTokenStore().loadTokens();\n        assertAuthTokensWithRefreshToken(authTokens);\n        if (isSessionRevocable(authTokens.accessToken)) {\n            const revokeToken = createRevokeTokenClient({\n                endpointResolver: createCognitoUserPoolEndpointResolver({\n                    endpointOverride: userPoolEndpoint,\n                }),\n            });\n            await revokeToken({\n                region: getRegionFromUserPoolId(userPoolId),\n                userAgentValue: getAuthUserAgentValue(AuthAction.SignOut),\n            }, {\n                ClientId: userPoolClientId,\n                Token: authTokens.refreshToken,\n            });\n        }\n    }\n    catch (err) {\n        // this shouldn't throw\n        logger.debug('Client signOut error caught but will proceed with token removal');\n    }\n}\nasync function globalSignOut(cognitoConfig) {\n    try {\n        const { userPoolEndpoint, userPoolId } = cognitoConfig;\n        const authTokens = await tokenOrchestrator.getTokenStore().loadTokens();\n        assertAuthTokens(authTokens);\n        const globalSignOutClient = createGlobalSignOutClient({\n            endpointResolver: createCognitoUserPoolEndpointResolver({\n                endpointOverride: userPoolEndpoint,\n            }),\n        });\n        await globalSignOutClient({\n            region: getRegionFromUserPoolId(userPoolId),\n            userAgentValue: getAuthUserAgentValue(AuthAction.SignOut),\n        }, {\n            AccessToken: authTokens.accessToken.toString(),\n        });\n    }\n    catch (err) {\n        // it should not throw\n        logger.debug('Global signOut error caught but will proceed with token removal');\n    }\n}\nconst isSessionRevocable = (token) => !!token?.payload?.origin_jti;\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler';\nimport { createUserPoolDeserializer, createUserPoolSerializer, } from './shared/serde';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants';\nexport const createGetUserAttributeVerificationCodeClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('GetUserAttributeVerificationCode'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify, fetchAuthSession } from '@aws-amplify/core';\nimport { AuthAction, assertTokenProviderConfig, } from '@aws-amplify/core/internals/utils';\nimport { assertAuthTokens } from '../utils/types';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers';\nimport { getAuthUserAgentValue } from '../../../utils';\nimport { createGetUserAttributeVerificationCodeClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider';\nimport { createCognitoUserPoolEndpointResolver } from '../factories';\n/**\n * Resends user's confirmation code when updating attributes while authenticated.\n *\n * @param input - The SendUserAttributeVerificationCodeInput object\n * @returns SendUserAttributeVerificationCodeOutput\n * @throws - {@link GetUserAttributeVerificationException}\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nexport const sendUserAttributeVerificationCode = async (input) => {\n    const { userAttributeKey, options } = input;\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    const clientMetadata = options?.clientMetadata;\n    assertTokenProviderConfig(authConfig);\n    const { userPoolEndpoint, userPoolId } = authConfig;\n    const { tokens } = await fetchAuthSession({ forceRefresh: false });\n    assertAuthTokens(tokens);\n    const getUserAttributeVerificationCode = createGetUserAttributeVerificationCodeClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const { CodeDeliveryDetails } = await getUserAttributeVerificationCode({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.SendUserAttributeVerificationCode),\n    }, {\n        AccessToken: tokens.accessToken.toString(),\n        ClientMetadata: clientMetadata,\n        AttributeName: userAttributeKey,\n    });\n    const { DeliveryMedium, AttributeName, Destination } = {\n        ...CodeDeliveryDetails,\n    };\n    return {\n        destination: Destination,\n        deliveryMedium: DeliveryMedium,\n        attributeName: AttributeName,\n    };\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler';\nimport { createUserPoolDeserializer, createUserPoolSerializer, } from './shared/serde';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants';\nexport const createDeleteUserAttributesClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('DeleteUserAttributes'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify, fetchAuthSession } from '@aws-amplify/core';\nimport { AuthAction, assertTokenProviderConfig, } from '@aws-amplify/core/internals/utils';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers';\nimport { assertAuthTokens } from '../utils/types';\nimport { getAuthUserAgentValue } from '../../../utils';\nimport { createDeleteUserAttributesClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider';\nimport { createCognitoUserPoolEndpointResolver } from '../factories';\n/**\n * Deletes user attributes.\n *\n * @param input -  The DeleteUserAttributesInput object\n * @throws  -{@link DeleteUserAttributesException } - Thrown due to invalid attribute.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nexport async function deleteUserAttributes(input) {\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { userAttributeKeys } = input;\n    const { userPoolEndpoint, userPoolId } = authConfig;\n    const { tokens } = await fetchAuthSession({ forceRefresh: false });\n    assertAuthTokens(tokens);\n    const deleteUserAttributesClient = createDeleteUserAttributesClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    await deleteUserAttributesClient({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.DeleteUserAttributes),\n    }, {\n        AccessToken: tokens.accessToken.toString(),\n        UserAttributeNames: userAttributeKeys,\n    });\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { parseJsonError, } from '@aws-amplify/core/internals/aws-client-utils';\nimport { assertServiceError } from '../../../../../../errors/utils/assertServiceError';\nimport { AuthError } from '../../../../../../errors/AuthError';\nexport const createEmptyResponseDeserializer = () => async (response) => {\n    if (response.statusCode >= 300) {\n        const error = await parseJsonError(response);\n        assertServiceError(error);\n        throw new AuthError({ name: error.name, message: error.message });\n    }\n    else {\n        return undefined;\n    }\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler';\nimport { createEmptyResponseDeserializer, createUserPoolSerializer, } from './shared/serde';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants';\nexport const createDeleteUserClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('DeleteUser'), createEmptyResponseDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify, fetchAuthSession } from '@aws-amplify/core';\nimport { AuthAction, assertTokenProviderConfig, } from '@aws-amplify/core/internals/utils';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers';\nimport { assertAuthTokens } from '../utils/types';\nimport { tokenOrchestrator } from '../tokenProvider';\nimport { getAuthUserAgentValue } from '../../../utils';\nimport { createDeleteUserClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider';\nimport { createCognitoUserPoolEndpointResolver } from '../factories';\nimport { signOut } from './signOut';\n/**\n * Deletes a user from the user pool while authenticated.\n *\n * @throws - {@link DeleteUserException}\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nexport async function deleteUser() {\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { userPoolEndpoint, userPoolId } = authConfig;\n    const { tokens } = await fetchAuthSession();\n    assertAuthTokens(tokens);\n    const serviceDeleteUser = createDeleteUserClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    await serviceDeleteUser({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.DeleteUser),\n    }, {\n        AccessToken: tokens.accessToken.toString(),\n    });\n    await tokenOrchestrator.clearDeviceMetadata();\n    await signOut();\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler';\nimport { createUserPoolDeserializer, createUserPoolSerializer, } from './shared/serde';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants';\nexport const createUpdateDeviceStatusClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('UpdateDeviceStatus'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify, fetchAuthSession } from '@aws-amplify/core';\nimport { AuthAction, assertTokenProviderConfig, } from '@aws-amplify/core/internals/utils';\nimport { assertAuthTokens, assertDeviceMetadata } from '../utils/types';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers';\nimport { tokenOrchestrator } from '../tokenProvider';\nimport { getAuthUserAgentValue } from '../../../utils';\nimport { createUpdateDeviceStatusClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider';\nimport { createCognitoUserPoolEndpointResolver } from '../factories';\n/**\n * Marks device as remembered while authenticated.\n *\n * @throws - {@link UpdateDeviceStatusException} - Cognito service errors thrown when\n * setting device status to remembered using an invalid device key.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nexport async function rememberDevice() {\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { userPoolEndpoint, userPoolId } = authConfig;\n    const { tokens } = await fetchAuthSession();\n    assertAuthTokens(tokens);\n    const deviceMetadata = await tokenOrchestrator?.getDeviceMetadata();\n    assertDeviceMetadata(deviceMetadata);\n    const updateDeviceStatus = createUpdateDeviceStatusClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    await updateDeviceStatus({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.RememberDevice),\n    }, {\n        AccessToken: tokens.accessToken.toString(),\n        DeviceKey: deviceMetadata.deviceKey,\n        DeviceRememberedStatus: 'remembered',\n    });\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler';\nimport { createEmptyResponseDeserializer, createUserPoolSerializer, } from './shared/serde';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants';\nexport const createForgetDeviceClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('ForgetDevice'), createEmptyResponseDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify, fetchAuthSession } from '@aws-amplify/core';\nimport { AuthAction, assertTokenProviderConfig, } from '@aws-amplify/core/internals/utils';\nimport { assertAuthTokens, assertDeviceMetadata } from '../utils/types';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers';\nimport { tokenOrchestrator } from '../tokenProvider';\nimport { getAuthUserAgentValue } from '../../../utils';\nimport { createForgetDeviceClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider';\nimport { createCognitoUserPoolEndpointResolver } from '../factories';\n/**\n * Forget a remembered device while authenticated.\n *\n * @param input - The ForgetDeviceInput object.\n * @throws - {@link ForgetDeviceException} - Cognito service errors thrown when\n * forgetting device with invalid device key\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nexport async function forgetDevice(input) {\n    const { device: { id: externalDeviceKey } = { id: undefined } } = input ?? {};\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { userPoolEndpoint, userPoolId } = authConfig;\n    const { tokens } = await fetchAuthSession();\n    assertAuthTokens(tokens);\n    const deviceMetadata = await tokenOrchestrator.getDeviceMetadata();\n    const currentDeviceKey = deviceMetadata?.deviceKey;\n    if (!externalDeviceKey)\n        assertDeviceMetadata(deviceMetadata);\n    const serviceForgetDevice = createForgetDeviceClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    await serviceForgetDevice({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.ForgetDevice),\n    }, {\n        AccessToken: tokens.accessToken.toString(),\n        DeviceKey: externalDeviceKey ?? currentDeviceKey,\n    });\n    if (!externalDeviceKey || externalDeviceKey === currentDeviceKey)\n        await tokenOrchestrator.clearDeviceMetadata();\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler';\nimport { createUserPoolDeserializer, createUserPoolSerializer, } from './shared/serde';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants';\nexport const createListDevicesClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('ListDevices'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify, fetchAuthSession } from '@aws-amplify/core';\nimport { AuthAction, assertTokenProviderConfig, } from '@aws-amplify/core/internals/utils';\nimport { assertAuthTokens } from '../utils/types';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers';\nimport { getAuthUserAgentValue } from '../../../utils';\nimport { createListDevicesClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider';\nimport { createCognitoUserPoolEndpointResolver } from '../factories';\n// Cognito Documentation for max device\n// https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_ListDevices.html#API_ListDevices_RequestSyntax\nconst MAX_DEVICES = 60;\n/**\n * Fetches devices that have been remembered using {@link rememberDevice}\n * for the currently authenticated user.\n *\n * @returns FetchDevicesOutput\n * @throws {@link ListDevicesException}\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nexport async function fetchDevices() {\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { userPoolEndpoint, userPoolId } = authConfig;\n    const { tokens } = await fetchAuthSession();\n    assertAuthTokens(tokens);\n    const listDevices = createListDevicesClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const response = await listDevices({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.FetchDevices),\n    }, {\n        AccessToken: tokens.accessToken.toString(),\n        Limit: MAX_DEVICES,\n    });\n    return parseDevicesResponse(response.Devices ?? []);\n}\nconst parseDevicesResponse = async (devices) => {\n    return devices.map(({ DeviceKey: id = '', DeviceAttributes = [], DeviceCreateDate, DeviceLastModifiedDate, DeviceLastAuthenticatedDate, }) => {\n        let deviceName;\n        const attributes = DeviceAttributes.reduce((attrs, { Name, Value }) => {\n            if (Name && Value) {\n                if (Name === 'device_name')\n                    deviceName = Value;\n                attrs[Name] = Value;\n            }\n            return attrs;\n        }, {});\n        return {\n            id,\n            name: deviceName,\n            attributes,\n            createDate: DeviceCreateDate\n                ? new Date(DeviceCreateDate * 1000)\n                : undefined,\n            lastModifiedDate: DeviceLastModifiedDate\n                ? new Date(DeviceLastModifiedDate * 1000)\n                : undefined,\n            lastAuthenticatedDate: DeviceLastAuthenticatedDate\n                ? new Date(DeviceLastAuthenticatedDate * 1000)\n                : undefined,\n        };\n    });\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport const IdentityIdStorageKeys = {\n    identityId: 'identityId',\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ConsoleLogger, } from '@aws-amplify/core';\nimport { assertIdentityPoolIdConfig } from '@aws-amplify/core/internals/utils';\nimport { getAuthStorageKeys } from '../tokenProvider/TokenStore';\nimport { IdentityIdStorageKeys } from './types';\nconst logger = new ConsoleLogger('DefaultIdentityIdStore');\nexport class DefaultIdentityIdStore {\n    setAuthConfig(authConfigParam) {\n        assertIdentityPoolIdConfig(authConfigParam.Cognito);\n        this.authConfig = authConfigParam;\n        this._authKeys = createKeysForAuthStorage('Cognito', authConfigParam.Cognito.identityPoolId);\n    }\n    constructor(keyValueStorage) {\n        this._authKeys = {};\n        this._hasGuestIdentityId = false;\n        this.keyValueStorage = keyValueStorage;\n    }\n    async loadIdentityId() {\n        assertIdentityPoolIdConfig(this.authConfig?.Cognito);\n        try {\n            if (this._primaryIdentityId) {\n                return {\n                    id: this._primaryIdentityId,\n                    type: 'primary',\n                };\n            }\n            else {\n                const storedIdentityId = await this.keyValueStorage.getItem(this._authKeys.identityId);\n                if (storedIdentityId) {\n                    this._hasGuestIdentityId = true;\n                    return {\n                        id: storedIdentityId,\n                        type: 'guest',\n                    };\n                }\n                return null;\n            }\n        }\n        catch (err) {\n            logger.log('Error getting stored IdentityId.', err);\n            return null;\n        }\n    }\n    async storeIdentityId(identity) {\n        assertIdentityPoolIdConfig(this.authConfig?.Cognito);\n        if (identity.type === 'guest') {\n            this.keyValueStorage.setItem(this._authKeys.identityId, identity.id);\n            // Clear in-memory storage of primary identityId\n            this._primaryIdentityId = undefined;\n            this._hasGuestIdentityId = true;\n        }\n        else {\n            this._primaryIdentityId = identity.id;\n            // Clear locally stored guest id\n            if (this._hasGuestIdentityId) {\n                this.keyValueStorage.removeItem(this._authKeys.identityId);\n                this._hasGuestIdentityId = false;\n            }\n        }\n    }\n    async clearIdentityId() {\n        this._primaryIdentityId = undefined;\n        await this.keyValueStorage.removeItem(this._authKeys.identityId);\n    }\n}\nconst createKeysForAuthStorage = (provider, identifier) => {\n    return getAuthStorageKeys(IdentityIdStorageKeys)(`com.amplify.${provider}`, identifier);\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { decodeJWT } from '@aws-amplify/core/internals/utils';\nimport { AuthError } from '../../../errors/AuthError';\nexport function formLoginsMap(idToken) {\n    const issuer = decodeJWT(idToken).payload.iss;\n    const res = {};\n    if (!issuer) {\n        throw new AuthError({\n            name: 'InvalidIdTokenException',\n            message: 'Invalid Idtoken.',\n        });\n    }\n    const domainName = issuer.replace(/(^\\w+:|^)\\/\\//, '');\n    res[domainName] = idToken;\n    return res;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ConsoleLogger, getId } from '@aws-amplify/core';\nimport { AuthError } from '../../../errors/AuthError';\nimport { getRegionFromIdentityPoolId } from '../../../foundation/parsers';\nimport { formLoginsMap } from './utils';\nconst logger = new ConsoleLogger('CognitoIdentityIdProvider');\n/**\n * Provides a Cognito identityId\n *\n * @param tokens - The AuthTokens received after SignIn\n * @returns string\n * @throws configuration exceptions: `InvalidIdentityPoolIdException`\n *  - Auth errors that may arise from misconfiguration.\n * @throws service exceptions: {@link GetIdException }\n */\nexport async function cognitoIdentityIdProvider({ tokens, authConfig, identityIdStore, }) {\n    identityIdStore.setAuthConfig({ Cognito: authConfig });\n    // will return null only if there is no identityId cached or if there is an error retrieving it\n    let identityId = await identityIdStore.loadIdentityId();\n    // Tokens are available so return primary identityId\n    if (tokens) {\n        // If there is existing primary identityId in-memory return that\n        if (identityId && identityId.type === 'primary') {\n            return identityId.id;\n        }\n        else {\n            const logins = tokens.idToken\n                ? formLoginsMap(tokens.idToken.toString())\n                : {};\n            const generatedIdentityId = await generateIdentityId(logins, authConfig);\n            if (identityId && identityId.id === generatedIdentityId) {\n                logger.debug(`The guest identity ${identityId.id} has become the primary identity.`);\n            }\n            identityId = {\n                id: generatedIdentityId,\n                type: 'primary',\n            };\n        }\n    }\n    else {\n        // If there is existing guest identityId cached return that\n        if (identityId && identityId.type === 'guest') {\n            return identityId.id;\n        }\n        else {\n            identityId = {\n                id: await generateIdentityId({}, authConfig),\n                type: 'guest',\n            };\n        }\n    }\n    // Store in-memory or local storage depending on guest or primary identityId\n    identityIdStore.storeIdentityId(identityId);\n    return identityId.id;\n}\nasync function generateIdentityId(logins, authConfig) {\n    const identityPoolId = authConfig?.identityPoolId;\n    const region = getRegionFromIdentityPoolId(identityPoolId);\n    // IdentityId is absent so get it using IdentityPoolId with Cognito's GetId API\n    const idResult = \n    // for a first-time user, this will return a brand new identity\n    // for a returning user, this will retrieve the previous identity assocaited with the logins\n    (await getId({\n        region,\n    }, {\n        IdentityPoolId: identityPoolId,\n        Logins: logins,\n    })).IdentityId;\n    if (!idResult) {\n        throw new AuthError({\n            name: 'GetIdResponseException',\n            message: 'Received undefined response from getId operation',\n            recoverySuggestion: 'Make sure to pass a valid identityPoolId in the configuration.',\n        });\n    }\n    return idResult;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ConsoleLogger, getCredentialsForIdentity, } from '@aws-amplify/core';\nimport { assertIdentityPoolIdConfig, } from '@aws-amplify/core/internals/utils';\nimport { AuthError } from '../../../errors/AuthError';\nimport { getRegionFromIdentityPoolId } from '../../../foundation/parsers';\nimport { assertIdTokenInAuthTokens } from '../utils/types';\nimport { cognitoIdentityIdProvider } from './IdentityIdProvider';\nimport { formLoginsMap } from './utils';\nconst logger = new ConsoleLogger('CognitoCredentialsProvider');\nconst CREDENTIALS_TTL = 50 * 60 * 1000; // 50 min, can be modified on config if required in the future\nexport class CognitoAWSCredentialsAndIdentityIdProvider {\n    constructor(identityIdStore) {\n        this._nextCredentialsRefresh = 0;\n        this._identityIdStore = identityIdStore;\n    }\n    async clearCredentialsAndIdentityId() {\n        logger.debug('Clearing out credentials and identityId');\n        this._credentialsAndIdentityId = undefined;\n        await this._identityIdStore.clearIdentityId();\n    }\n    async clearCredentials() {\n        logger.debug('Clearing out in-memory credentials');\n        this._credentialsAndIdentityId = undefined;\n    }\n    async getCredentialsAndIdentityId(getCredentialsOptions) {\n        const isAuthenticated = getCredentialsOptions.authenticated;\n        const { tokens } = getCredentialsOptions;\n        const { authConfig } = getCredentialsOptions;\n        try {\n            assertIdentityPoolIdConfig(authConfig?.Cognito);\n        }\n        catch {\n            // No identity pool configured, skipping\n            return;\n        }\n        if (!isAuthenticated && !authConfig.Cognito.allowGuestAccess) {\n            // TODO(V6): return partial result like Native platforms\n            return;\n        }\n        const { forceRefresh } = getCredentialsOptions;\n        const tokenHasChanged = this.hasTokenChanged(tokens);\n        const identityId = await cognitoIdentityIdProvider({\n            tokens,\n            authConfig: authConfig.Cognito,\n            identityIdStore: this._identityIdStore,\n        });\n        // Clear cached credentials when forceRefresh is true OR the cache token has changed\n        if (forceRefresh || tokenHasChanged) {\n            this.clearCredentials();\n        }\n        if (!isAuthenticated) {\n            return this.getGuestCredentials(identityId, authConfig.Cognito);\n        }\n        else {\n            assertIdTokenInAuthTokens(tokens);\n            return this.credsForOIDCTokens(authConfig.Cognito, tokens, identityId);\n        }\n    }\n    async getGuestCredentials(identityId, authConfig) {\n        // Return existing in-memory cached credentials only if it exists, is not past it's lifetime and is unauthenticated credentials\n        if (this._credentialsAndIdentityId &&\n            !this.isPastTTL() &&\n            this._credentialsAndIdentityId.isAuthenticatedCreds === false) {\n            logger.info('returning stored credentials as they neither past TTL nor expired.');\n            return this._credentialsAndIdentityId;\n        }\n        // Clear to discard if any authenticated credentials are set and start with a clean slate\n        this.clearCredentials();\n        const region = getRegionFromIdentityPoolId(authConfig.identityPoolId);\n        // use identityId to obtain guest credentials\n        // save credentials in-memory\n        // No logins params should be passed for guest creds:\n        // https://docs.aws.amazon.com/cognitoidentity/latest/APIReference/API_GetCredentialsForIdentity.html\n        const clientResult = await getCredentialsForIdentity({ region }, {\n            IdentityId: identityId,\n        });\n        if (clientResult.Credentials &&\n            clientResult.Credentials.AccessKeyId &&\n            clientResult.Credentials.SecretKey) {\n            this._nextCredentialsRefresh = new Date().getTime() + CREDENTIALS_TTL;\n            const res = {\n                credentials: {\n                    accessKeyId: clientResult.Credentials.AccessKeyId,\n                    secretAccessKey: clientResult.Credentials.SecretKey,\n                    sessionToken: clientResult.Credentials.SessionToken,\n                    expiration: clientResult.Credentials.Expiration,\n                },\n                identityId,\n            };\n            const identityIdRes = clientResult.IdentityId;\n            if (identityIdRes) {\n                res.identityId = identityIdRes;\n                this._identityIdStore.storeIdentityId({\n                    id: identityIdRes,\n                    type: 'guest',\n                });\n            }\n            this._credentialsAndIdentityId = {\n                ...res,\n                isAuthenticatedCreds: false,\n            };\n            return res;\n        }\n        else {\n            throw new AuthError({\n                name: 'CredentialsNotFoundException',\n                message: `Cognito did not respond with either Credentials, AccessKeyId or SecretKey.`,\n            });\n        }\n    }\n    async credsForOIDCTokens(authConfig, authTokens, identityId) {\n        if (this._credentialsAndIdentityId &&\n            !this.isPastTTL() &&\n            this._credentialsAndIdentityId.isAuthenticatedCreds === true) {\n            logger.debug('returning stored credentials as they neither past TTL nor expired.');\n            return this._credentialsAndIdentityId;\n        }\n        // Clear to discard if any unauthenticated credentials are set and start with a clean slate\n        this.clearCredentials();\n        const logins = authTokens.idToken\n            ? formLoginsMap(authTokens.idToken.toString())\n            : {};\n        const region = getRegionFromIdentityPoolId(authConfig.identityPoolId);\n        const clientResult = await getCredentialsForIdentity({ region }, {\n            IdentityId: identityId,\n            Logins: logins,\n        });\n        if (clientResult.Credentials &&\n            clientResult.Credentials.AccessKeyId &&\n            clientResult.Credentials.SecretKey) {\n            const res = {\n                credentials: {\n                    accessKeyId: clientResult.Credentials.AccessKeyId,\n                    secretAccessKey: clientResult.Credentials.SecretKey,\n                    sessionToken: clientResult.Credentials.SessionToken,\n                    expiration: clientResult.Credentials.Expiration,\n                },\n                identityId,\n            };\n            // Store the credentials in-memory along with the expiration\n            this._credentialsAndIdentityId = {\n                ...res,\n                isAuthenticatedCreds: true,\n                associatedIdToken: authTokens.idToken?.toString(),\n            };\n            this._nextCredentialsRefresh = new Date().getTime() + CREDENTIALS_TTL;\n            const identityIdRes = clientResult.IdentityId;\n            if (identityIdRes) {\n                res.identityId = identityIdRes;\n                this._identityIdStore.storeIdentityId({\n                    id: identityIdRes,\n                    type: 'primary',\n                });\n            }\n            return res;\n        }\n        else {\n            throw new AuthError({\n                name: 'CredentialsException',\n                message: `Cognito did not respond with either Credentials, AccessKeyId or SecretKey.`,\n            });\n        }\n    }\n    isPastTTL() {\n        return this._nextCredentialsRefresh === undefined\n            ? true\n            : this._nextCredentialsRefresh <= Date.now();\n    }\n    hasTokenChanged(tokens) {\n        return (!!tokens &&\n            !!this._credentialsAndIdentityId?.associatedIdToken &&\n            tokens.idToken?.toString() !==\n                this._credentialsAndIdentityId.associatedIdToken);\n    }\n}\n"],
  "mappings": "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",
  "names": ["name", "AmplifyErrorCode", "name", "AuthConfigurationErrorCode", "assert", "assert", "LogType", "name", "config", "name", "logger", "logger", "name", "logger", "config", "api", "name", "URL", "name", "version", "config", "version", "name", "RawSha256", "buffer", "fromUtf8", "Sha256", "buffer", "Framework", "Category", "AiAction", "AnalyticsAction", "ApiAction", "AuthAction", "DataStoreAction", "GeoAction", "InAppMessagingAction", "InteractionsAction", "PredictionsAction", "PubSubAction", "PushNotificationAction", "StorageAction", "delay", "api", "BackgroundProcessManagerState", "Subscription", "empty", "timeout", "Subscriber", "ConsumerObserver", "SafeSubscriber", "Observable", "observable", "init", "OperatorSubscriber", "err", "ConnectableObservable", "timestamp", "timestamp", "Subject", "observable", "AnonymousSubject", "BehaviorSubject", "ReplaySubject", "last", "AsyncSubject", "Action", "delay", "timeout", "AsyncAction", "delay", "AsapAction", "delay", "Scheduler", "delay", "AsyncScheduler", "AsapScheduler", "QueueAction", "delay", "QueueScheduler", "AnimationFrameAction", "delay", "AnimationFrameScheduler", "VirtualTimeScheduler", "VirtualAction", "delay", "process", "delay", "repeat", "delay", "delay", "iterator", "iterator", "init", "NotificationKind", "Notification", "isArray", "isArray", "fetchAuthSession", "fetchAuthSessionInternal", "defaultConfig", "config", "context", "delay", "context", "delay", "jitteredBackoff", "jitteredBackoffUtil", "delay", "jitteredBackoff", "name", "converter", "defaultConfig", "CacheErrorCode", "assert", "logger", "config", "defaultConfig", "assert", "logger", "config", "defaultConfig", "logger", "I18nErrorCode", "assert", "logger", "I18n", "config", "I18nClass", "assert", "SERVICE_NAME", "endpointResolver", "defaultConfig", "jitteredBackoff", "getSharedHeaders", "PinpointValidationErrorCode", "assert", "hexEncode", "getSharedHeaders", "defaultConfig", "assert", "getSharedHeaders", "defaultConfig", "logger", "UpdateEndpointException", "ServiceWorkerErrorCode", "assert", "crypto", "getCurrentUser", "getCurrentUserInternal", "AssociateSoftwareTokenException", "ChangePasswordException", "ConfirmDeviceException", "ConfirmForgotPasswordException", "ConfirmSignUpException", "DeleteUserAttributesException", "DeleteUserException", "ForgetDeviceException", "ForgotPasswordException", "GetUserException", "GetIdException", "GetCredentialsForIdentityException", "GetUserAttributeVerificationException", "GlobalSignOutException", "InitiateAuthException", "ResendConfirmationException", "RespondToAuthChallengeException", "SetUserMFAPreferenceException", "SignUpException", "UpdateUserAttributesException", "VerifySoftwareTokenException", "VerifyUserAttributeException", "UpdateDeviceStatusException", "ListDevicesException", "AuthValidationErrorCode", "AuthErrorStrings", "AuthErrorCodes", "name", "getSharedHeaders", "buildHttpRpcRequest", "disableCacheMiddlewareFactory", "jitteredBackoff", "config", "config", "config", "config", "config", "SHORT_TO_HEX", "HEX_TO_SHORT", "HEX_TO_SHORT", "SHORT_TO_HEX", "context", "config", "tokenOrchestrator", "getCurrentUser", "TokenProviderErrorCode", "assert", "assert", "createKeysForAuthStorage", "oauthSignIn", "getCurrentUser", "debounce", "delay", "timer", "config", "autoSignIn", "config", "config", "config", "config", "config", "fetchAuthSession", "config", "fetchAuthSession", "fetchAuthSession", "config", "fetchAuthSession", "fetchAuthSession", "config", "fetchAuthSession", "config", "fetchAuthSession", "logger", "AuthErrorTypes", "getRedirectUrl", "getRedirectUrl", "getRedirectUrl", "fetchUserAttributes", "fetchUserAttributesInternal", "getRedirectUrl", "tokenOrchestrator", "config", "config", "logger", "oAuthStore", "config", "fetchAuthSession", "config", "fetchAuthSession", "config", "fetchAuthSession", "config", "fetchAuthSession", "config", "fetchAuthSession", "config", "fetchAuthSession", "logger", "createKeysForAuthStorage", "identity", "logger", "logger", "isAuthenticated"]
}
