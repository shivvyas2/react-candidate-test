import {
  Tabs_default
} from "./chunk-3LLHHNAA.js";
import "./chunk-XX3KJT2V.js";
import "./chunk-Y7VOZC57.js";
import "./chunk-NROH3B2G.js";
import "./chunk-YR5LAKKR.js";
import {
  getPanelId,
  getTabId,
  useTabContext
} from "./chunk-AKKC2YUK.js";
import "./chunk-3IHV7RO6.js";
import "./chunk-MHTX2PKA.js";
import "./chunk-KBHJGDJX.js";
import "./chunk-KFVIT3PU.js";
import "./chunk-DJPJ6CZJ.js";
import "./chunk-JLOZSIPC.js";
import "./chunk-M5FMA3RD.js";
import "./chunk-RBAE72DA.js";
import "./chunk-UZGPNCCG.js";
import "./chunk-IPQY3ZR6.js";
import "./chunk-E2KANOWM.js";
import "./chunk-2XIMJAQ3.js";
import "./chunk-NUWKDOWT.js";
import "./chunk-MURCS3AA.js";
import "./chunk-HHONK4UR.js";
import "./chunk-OIXIYUAS.js";
import "./chunk-RHUTDSL4.js";
import "./chunk-UKYXASPQ.js";
import "./chunk-VV2FWYXX.js";
import "./chunk-OT7BMC35.js";
import "./chunk-YQX5UB46.js";
import "./chunk-2WFFIOFA.js";
import "./chunk-BF7TMQDQ.js";
import "./chunk-U7P2NEEE.js";
import "./chunk-CIPIN2H7.js";
import "./chunk-ISKTNCA3.js";
import "./chunk-MXFOWQX5.js";
import "./chunk-RRRKEEUJ.js";
import {
  require_jsx_runtime
} from "./chunk-OT5EQO2H.js";
import {
  require_prop_types
} from "./chunk-J4LPPHPF.js";
import "./chunk-VDSYMEQM.js";
import "./chunk-HJS24R7O.js";
import "./chunk-HITVSGT5.js";
import "./chunk-EQCCHGRT.js";
import {
  require_react
} from "./chunk-OU5AQDZK.js";
import {
  __toESM
} from "./chunk-EWTE5DHJ.js";

// node_modules/@mui/lab/TabList/TabList.js
var React = __toESM(require_react());
var import_prop_types = __toESM(require_prop_types());
var import_jsx_runtime = __toESM(require_jsx_runtime());
var TabList = React.forwardRef(function TabList2(props, ref) {
  const {
    children: childrenProp,
    ...other
  } = props;
  const context = useTabContext();
  if (context === null) {
    throw new TypeError("No TabContext provided");
  }
  const children = React.Children.map(childrenProp, (child) => {
    if (!React.isValidElement(child)) {
      return null;
    }
    return React.cloneElement(child, {
      // SOMEDAY: `Tabs` will set those themselves
      "aria-controls": getPanelId(context, child.props.value),
      id: getTabId(context, child.props.value)
    });
  });
  return (0, import_jsx_runtime.jsx)(Tabs_default, {
    ...other,
    ref,
    value: context.value,
    children
  });
});
true ? TabList.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A list of `<Tab />` elements.
   */
  children: import_prop_types.default.node
} : void 0;
var TabList_default = TabList;
export {
  TabList_default as default
};
//# sourceMappingURL=@mui_lab_TabList.js.map
