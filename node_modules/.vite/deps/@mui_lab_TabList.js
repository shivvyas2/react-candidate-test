import {
  Tabs_default
} from "./chunk-I3HEMOAJ.js";
import "./chunk-BR6OY3ML.js";
import "./chunk-TY6GUM3N.js";
import "./chunk-DWOERMII.js";
import "./chunk-V3KSNJ4K.js";
import {
  getPanelId,
  getTabId,
  useTabContext
} from "./chunk-ZW2U3WXP.js";
import "./chunk-QWD6AGV3.js";
import "./chunk-BQKMG7XH.js";
import "./chunk-7EEA7IA3.js";
import "./chunk-CWIUBXX3.js";
import "./chunk-GUXZ543J.js";
import "./chunk-ZLS3MUSI.js";
import "./chunk-M7SNRZDB.js";
import "./chunk-X4O6RF43.js";
import "./chunk-5CGJGYJF.js";
import "./chunk-Y4QJYH4B.js";
import "./chunk-3OFZJUEO.js";
import "./chunk-UTBQTUCG.js";
import "./chunk-QFIHTHMB.js";
import "./chunk-R4XMF73X.js";
import "./chunk-YIFEXBZW.js";
import "./chunk-WIQBXO2L.js";
import "./chunk-M2HFG43Q.js";
import "./chunk-QC5BDTTG.js";
import "./chunk-ENEVXKZG.js";
import "./chunk-V32DRCKD.js";
import "./chunk-OJRPKXQP.js";
import "./chunk-HFOIK6EQ.js";
import "./chunk-FRXLAPRO.js";
import "./chunk-U7P2NEEE.js";
import "./chunk-7PV2MKJD.js";
import "./chunk-HFE4QNPP.js";
import "./chunk-MXFOWQX5.js";
import "./chunk-7LRJ6GVM.js";
import {
  require_jsx_runtime
} from "./chunk-VIJJHCPD.js";
import {
  require_prop_types
} from "./chunk-USN3I6BK.js";
import "./chunk-ILZXHLM6.js";
import "./chunk-K6UAQOIE.js";
import "./chunk-H4GSM2WL.js";
import {
  require_react
} from "./chunk-MOJUAYT3.js";
import "./chunk-7KTNL42H.js";
import {
  __toESM
} from "./chunk-EWTE5DHJ.js";

// node_modules/@mui/lab/TabList/TabList.js
var React = __toESM(require_react());
var import_prop_types = __toESM(require_prop_types());
var import_jsx_runtime = __toESM(require_jsx_runtime());
var TabList = React.forwardRef(function TabList2(props, ref) {
  const {
    children: childrenProp,
    ...other
  } = props;
  const context = useTabContext();
  if (context === null) {
    throw new TypeError("No TabContext provided");
  }
  const children = React.Children.map(childrenProp, (child) => {
    if (!React.isValidElement(child)) {
      return null;
    }
    return React.cloneElement(child, {
      // SOMEDAY: `Tabs` will set those themselves
      "aria-controls": getPanelId(context, child.props.value),
      id: getTabId(context, child.props.value)
    });
  });
  return (0, import_jsx_runtime.jsx)(Tabs_default, {
    ...other,
    ref,
    value: context.value,
    children
  });
});
true ? TabList.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A list of `<Tab />` elements.
   */
  children: import_prop_types.default.node
} : void 0;
var TabList_default = TabList;
export {
  TabList_default as default
};
//# sourceMappingURL=@mui_lab_TabList.js.map
