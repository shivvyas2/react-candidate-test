{
  "version": 3,
  "sources": ["../../@mui/material/InputAdornment/InputAdornment.js", "../../@mui/material/InputAdornment/inputAdornmentClasses.js"],
  "sourcesContent": ["'use client';\r\n\r\nvar _span;\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport composeClasses from '@mui/utils/composeClasses';\r\nimport capitalize from \"../utils/capitalize.js\";\r\nimport Typography from \"../Typography/index.js\";\r\nimport FormControlContext from \"../FormControl/FormControlContext.js\";\r\nimport useFormControl from \"../FormControl/useFormControl.js\";\r\nimport { styled } from \"../zero-styled/index.js\";\r\nimport memoTheme from \"../utils/memoTheme.js\";\r\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\r\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from \"./inputAdornmentClasses.js\";\r\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\nconst overridesResolver = (props, styles) => {\r\n  const {\r\n    ownerState\r\n  } = props;\r\n  return [styles.root, styles[`position${capitalize(ownerState.position)}`], ownerState.disablePointerEvents === true && styles.disablePointerEvents, styles[ownerState.variant]];\r\n};\r\nconst useUtilityClasses = ownerState => {\r\n  const {\r\n    classes,\r\n    disablePointerEvents,\r\n    hiddenLabel,\r\n    position,\r\n    size,\r\n    variant\r\n  } = ownerState;\r\n  const slots = {\r\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && `position${capitalize(position)}`, variant, hiddenLabel && 'hiddenLabel', size && `size${capitalize(size)}`]\r\n  };\r\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\r\n};\r\nconst InputAdornmentRoot = styled('div', {\r\n  name: 'MuiInputAdornment',\r\n  slot: 'Root',\r\n  overridesResolver\r\n})(memoTheme(({\r\n  theme\r\n}) => ({\r\n  display: 'flex',\r\n  maxHeight: '2em',\r\n  alignItems: 'center',\r\n  whiteSpace: 'nowrap',\r\n  color: (theme.vars || theme).palette.action.active,\r\n  variants: [{\r\n    props: {\r\n      variant: 'filled'\r\n    },\r\n    style: {\r\n      [`&.${inputAdornmentClasses.positionStart}&:not(.${inputAdornmentClasses.hiddenLabel})`]: {\r\n        marginTop: 16\r\n      }\r\n    }\r\n  }, {\r\n    props: {\r\n      position: 'start'\r\n    },\r\n    style: {\r\n      marginRight: 8\r\n    }\r\n  }, {\r\n    props: {\r\n      position: 'end'\r\n    },\r\n    style: {\r\n      marginLeft: 8\r\n    }\r\n  }, {\r\n    props: {\r\n      disablePointerEvents: true\r\n    },\r\n    style: {\r\n      pointerEvents: 'none'\r\n    }\r\n  }]\r\n})));\r\nconst InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\r\n  const props = useDefaultProps({\r\n    props: inProps,\r\n    name: 'MuiInputAdornment'\r\n  });\r\n  const {\r\n    children,\r\n    className,\r\n    component = 'div',\r\n    disablePointerEvents = false,\r\n    disableTypography = false,\r\n    position,\r\n    variant: variantProp,\r\n    ...other\r\n  } = props;\r\n  const muiFormControl = useFormControl() || {};\r\n  let variant = variantProp;\r\n  if (variantProp && muiFormControl.variant) {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      if (variantProp === muiFormControl.variant) {\r\n        console.error('MUI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\r\n      }\r\n    }\r\n  }\r\n  if (muiFormControl && !variant) {\r\n    variant = muiFormControl.variant;\r\n  }\r\n  const ownerState = {\r\n    ...props,\r\n    hiddenLabel: muiFormControl.hiddenLabel,\r\n    size: muiFormControl.size,\r\n    disablePointerEvents,\r\n    position,\r\n    variant\r\n  };\r\n  const classes = useUtilityClasses(ownerState);\r\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\r\n    value: null,\r\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, {\r\n      as: component,\r\n      ownerState: ownerState,\r\n      className: clsx(classes.root, className),\r\n      ref: ref,\r\n      ...other,\r\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\r\n        color: \"textSecondary\",\r\n        children: children\r\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\r\n        children: [position === 'start' ? (/* notranslate needed while Google Translate will not fix zero-width space issue */_span || (_span = /*#__PURE__*/_jsx(\"span\", {\r\n          className: \"notranslate\",\r\n          children: \"\\u200B\"\r\n        }))) : null, children]\r\n      })\r\n    })\r\n  });\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes /* remove-proptypes */ = {\r\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\r\n  // │ These PropTypes are generated from the TypeScript type definitions. │\r\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\r\n  // └─────────────────────────────────────────────────────────────────────┘\r\n  /**\r\n   * The content of the component, normally an `IconButton` or string.\r\n   */\r\n  children: PropTypes.node,\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\r\n  classes: PropTypes.object,\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\r\n  component: PropTypes.elementType,\r\n  /**\r\n   * Disable pointer events on the root.\r\n   * This allows for the content of the adornment to focus the `input` on click.\r\n   * @default false\r\n   */\r\n  disablePointerEvents: PropTypes.bool,\r\n  /**\r\n   * If children is a string then disable wrapping in a Typography component.\r\n   * @default false\r\n   */\r\n  disableTypography: PropTypes.bool,\r\n  /**\r\n   * The position this adornment should appear relative to the `Input`.\r\n   */\r\n  position: PropTypes.oneOf(['end', 'start']).isRequired,\r\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\r\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\r\n  /**\r\n   * The variant to use.\r\n   * Note: If you are using the `TextField` component or the `FormControl` component\r\n   * you do not have to set this manually.\r\n   */\r\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\r\n} : void 0;\r\nexport default InputAdornment;", "import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\r\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\r\nexport function getInputAdornmentUtilityClass(slot) {\r\n  return generateUtilityClass('MuiInputAdornment', slot);\r\n}\r\nconst inputAdornmentClasses = generateUtilityClasses('MuiInputAdornment', ['root', 'filled', 'standard', 'outlined', 'positionStart', 'positionEnd', 'disablePointerEvents', 'hiddenLabel', 'sizeSmall']);\r\nexport default inputAdornmentClasses;"],
  "mappings": "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",
  "names": ["InputAdornment", "_jsx", "_jsxs", "PropTypes"]
}
